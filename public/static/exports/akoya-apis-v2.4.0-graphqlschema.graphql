# API Name: "Akoya APIs v2.4.0"
# Host: https://sandbox-products.ddp.akoya.com
# Akoya product APIs for data access. Default servers are set for the Akoya sandbox environment.\n\nAkoya APIs include the following updates:\n\n- v2.4.0\n  - Added Tax product\n- v2.3.0\n  - Removed erroneous `accountId` query param from Taxlots endpoint\n  - Added TaxLots endpoint\n- v2.2.2\n  - Added mode query parameter to Account Information, Balances, Investments, and Transactions to support standard mode.\n  - Edited callouts for Account Holder endpoint\n- v2.2.1\n  - Fixed typo in `accountIds` query parameter for `/accounts-info`, `/balances`, `/accounts`\n  - Added security method for `Account holder information` to bear token. Missing method defaulted to basic auth.\n  - Added examples and descriptions to some schemas\n  - Added HTTP status `429` FDX error `1207`.\n- v2.2 Additions\n  - Added optional `x-akoya-interaction-type` header to all endpoints to specify if a request is part of a batch process\n  - Update of tags to organize endpoints by Akoya product\n  - `206` response added to `/accounts-info`, `/balances`, `/accounts`\n- v2.1 New Statements product and Customers product updated with additional endpoint, `Account holder information`.\n- v2.0 Launch of Akoya products: Account Info, Balances, Investments, Transactions, Payments, Customers.

"Month enumeration used on forms 1095-A and 1095-C"
enum CoverageMonth {
    ANNUAL
    APRIL
    AUGUST
    DECEMBER
    FEBRUARY
    JANUARY
    JULY
    JUNE
    MARCH
    MAY
    NOVEMBER
    OCTOBER
    SEPTEMBER
}

"Type of expired stock option. Used by IRS Form 8949"
enum ExpiredOptionType {
    GRANTED
    PURCHASED
}

enum InteractionType {
    BATCH
    USER
}

"Type of investment sale"
enum InvestmentSaleType {
    CRYPTOCURRENCY
    EMPLOYEE_STOCK_PURCHASE_PLAN
    INCENTIVE_STOCK_OPTION
    NONQUALIFIED_STOCK_OPTIONS
    OTHER
    RESTRICTED_STOCK
    RESTRICTED_STOCK_UNITS
}

"ISO 3166-1 alpha-2 codes as of April 5, 2023, from officially assigned Country Codes on [ISO Online Browsing Platform](https://www.iso.org/obp/ui/). Change log is at [ISO 3166 Maintenance Agency](https://www.iso.org/fr/committee/48750.html?t=3V3rukDb61p05Wd6ojyTRvE0S3Yg_fZgUjrLjHWcd9-mDmTKHOGjbX3nEJ3SqHar&view=documents#section-isodocuments-top)"
enum ISO3166CountryCode {
    AD
    AE
    AF
    AG
    AI
    AL
    AM
    AO
    AQ
    AR
    AS
    AT
    AU
    AW
    AX
    AZ
    BA
    BB
    BD
    BE
    BF
    BG
    BH
    BI
    BJ
    BL
    BM
    BN
    BO
    BQ
    BR
    BS
    BT
    BV
    BW
    BY
    BZ
    CA
    CC
    CD
    CF
    CG
    CH
    CI
    CK
    CL
    CM
    CN
    CO
    CR
    CU
    CV
    CW
    CX
    CY
    CZ
    DE
    DJ
    DK
    DM
    DO
    DZ
    EC
    EE
    EG
    EH
    ER
    ES
    ET
    FI
    FJ
    FK
    FM
    FO
    FR
    GA
    GB
    GD
    GE
    GF
    GG
    GH
    GI
    GL
    GM
    GN
    GP
    GQ
    GR
    GS
    GT
    GU
    GW
    GY
    HK
    HM
    HN
    HR
    HT
    HU
    ID
    IE
    IL
    IM
    IN
    IO
    IQ
    IR
    IS
    IT
    JE
    JM
    JO
    JP
    KE
    KG
    KH
    KI
    KM
    KN
    KP
    KR
    KW
    KY
    KZ
    LA
    LB
    LC
    LI
    LK
    LR
    LS
    LT
    LU
    LV
    LY
    MA
    MC
    MD
    ME
    MF
    MG
    MH
    MK
    ML
    MM
    MN
    MO
    MP
    MQ
    MR
    MS
    MT
    MU
    MV
    MW
    MX
    MY
    MZ
    NA
    NC
    NE
    NF
    NG
    NI
    NL
    NO
    NP
    NR
    NU
    NZ
    OM
    PA
    PE
    PF
    PG
    PH
    PK
    PL
    PM
    PN
    PR
    PS
    PT
    PW
    PY
    QA
    RE
    RO
    RS
    RU
    RW
    SA
    SB
    SC
    SD
    SE
    SG
    SH
    SI
    SJ
    SK
    SL
    SM
    SN
    SO
    SR
    SS
    ST
    SV
    SX
    SY
    SZ
    TC
    TD
    TF
    TG
    TH
    TJ
    TK
    TL
    TM
    TN
    TO
    TR
    TT
    TV
    TW
    TZ
    UA
    UG
    UM
    US
    UY
    UZ
    VA
    VC
    VE
    VG
    VI
    VN
    VU
    WF
    WS
    YE
    YT
    ZA
    ZM
    ZW
}

"Indicates format of returned data.\n'raw' = provider-specific;\n'standard' = FDX-aligned values (BETA)"
enum Mode {
    RAW
    STANDARD
}

"Used by MonthAmount"
enum MonthAbbreviation {
    APR
    AUG
    DEC
    FEB
    JAN
    JUL
    JUN
    MAR
    MAY
    NOV
    OCT
    SEP
}

"Flag to indicate if you want a lightweight array of metadata (AccountDescriptor or Tax or Operations) or full item details (Account or a Tax subclass or Availability details). If set to 'lightweight', should only return the fields associated with the metadata entity."
enum ResultType {
    DETAILS
    LIGHTWEIGHT
}

"Gross or net proceeds. Used by Form 1099-B"
enum SaleProceedsType {
    GROSS
    NET
}

"Long or short term. Used by Form 1099-B"
enum SaleTermType {
    LONG
    SHORT
}

"The codes for U.S. states, possessions and military overseas addresses. From [USPS Publication 28 - Postal Addressing Standards](https://pe.usps.com/text/pub28/28apb.htm) and [IRS Zip Code and State Abbreviations](https://www.irs.gov/pub/irs-utl/zip_code_and_state_abbreviations.pdf). Includes codes for 50 states and District of Columbia plus:\n  * AA - Armed Forces Americas (except Canada)\n  * AE - Armed Forces Europe, Africa, the Middle East, and Canada\n  * AP - Armed Forces Pacific\n  * AS - American Samoa\n  * FM - Federated States of Micronesia\n  * GU - Guam\n  * MH - Marshall Islands\n  * MP - Northern Mariana Islands\n  * PR - Puerto Rico\n  * PW - Palau\n  * VI - U.S. Virgin Islands"
enum StateCode {
    AA
    AE
    AK
    AL
    AP
    AR
    AS
    AZ
    CA
    CO
    CT
    DC
    DE
    FL
    FM
    GA
    GU
    HI
    IA
    ID
    IL
    IN
    KS
    KY
    LA
    MA
    MD
    ME
    MH
    MI
    MN
    MO
    MP
    MS
    MT
    NC
    ND
    NE
    NH
    NJ
    NM
    NV
    NY
    OH
    OK
    OR
    PA
    PR
    PW
    RI
    SC
    SD
    TN
    TX
    UT
    VA
    VI
    VT
    WA
    WI
    WV
    WY
}

"Specify which data type is requested using TaxDataTypeQuery parameter, to receive 'JSON' formatted tax data in `forms` property or PDF-formatted tax data encoded as Base64 in `pdf` property ('BASE64_PDF'). In TaxStatement response entity indicates which tax data property was returned"
enum TypeDataType {
    BASE64_PDF
    JSON
}

"Tax form entity name e.g. \"TaxW2\""
enum TypeFormType {
    BUSINESSINCOMESTATEMENT
    CRYPTOCURRENCYTAXSTATEMENT
    FARMINCOMESTATEMENT
    FARMRENTALINCOMESTATEMENT
    RENTALINCOMESTATEMENT
    ROYALTYINCOMESTATEMENT
    TAX1041K1
    TAX1042S
    TAX1065K1
    TAX1095A
    TAX1095B
    TAX1095C
    TAX1097BTC
    TAX1098
    TAX1098C
    TAX1098E
    TAX1098MA
    TAX1098Q
    TAX1098T
    TAX1099A
    TAX1099B
    TAX1099C
    TAX1099CAP
    TAX1099CONSOLIDATEDSTATEMENT
    TAX1099DIV
    TAX1099G
    TAX1099H
    TAX1099INT
    TAX1099K
    TAX1099LS
    TAX1099LTC
    TAX1099MISC
    TAX1099NEC
    TAX1099OID
    TAX1099PATR
    TAX1099Q
    TAX1099QA
    TAX1099R
    TAX1099S
    TAX1099SA
    TAX1099SB
    TAX1120SK1
    TAX2439
    TAX3921
    TAX3922
    TAX5227K1
    TAX5498
    TAX5498ESA
    TAX5498QA
    TAX5498SA
    TAXW2
    TAXW2C
    TAXW2G
}

"Whether the tax legal entity is a business or an individual"
enum TaxPartyType {
    BUSINESS
    INDIVIDUAL
}

"Purpose or type of telephone number"
enum TelephoneNumberType {
    BUSINESS
    CELL
    FAX
    HOME
}

"Types of relationships between accounts and holders. Suggested values"
enum AccountHolderRelationship {
    AUTHORIZED_USER
    BUSINESS
    FOR_BENEFIT_OF
    FOR_BENEFIT_OF_PRIMARY
    FOR_BENEFIT_OF_PRIMARY_JOINT_RESTRICTED
    FOR_BENEFIT_OF_SECONDARY
    FOR_BENEFIT_OF_SECONDARY_JOINT_RESTRICTED
    FOR_BENEFIT_OF_SOLE_OWNER_RESTRICTED
    POWER_OF_ATTORNEY
    PRIMARY
    PRIMARY_BORROWER
    PRIMARY_JOINT
    PRIMARY_JOINT_TENANTS
    SECONDARY
    SECONDARY_BORROWER
    SECONDARY_JOINT
    SECONDARY_JOINT_TENANTS
    SOLE_OWNER
    TRUSTEE
    UNIFORM_TRANSFER_TO_MINOR
}

enum AcceptMediaType {
    APPLICATIONJSON
    APPLICATIONPDF
}

"Customer's relationship to the account"
enum AccountHolderRelationship2 {
    AUTHORIZED_USER
    BUSINESS
    FOR_BENEFIT_OF
    FOR_BENEFIT_OF_PRIMARY
    FOR_BENEFIT_OF_PRIMARY_JOINT_RESTRICTED
    FOR_BENEFIT_OF_SECONDARY
    FOR_BENEFIT_OF_SECONDARY_JOINT_RESTRICTED
    FOR_BENEFIT_OF_SOLE_OWNER_RESTRICTED
    POWER_OF_ATTORNEY
    PRIMARY
    PRIMARY_BORROWER
    PRIMARY_JOINT
    PRIMARY_JOINT_TENANTS
    SECONDARY
    SECONDARY_BORROWER
    SECONDARY_JOINT
    SECONDARY_JOINT_TENANTS
    SOLE_OWNER
    TRUSTEE
    UNIFORM_TRANSFER_TO_MINOR
}

"The account category of the insurance account. Possible enums: DEPOSIT_ACCOUNT, INVESTMENT_ACCOUNT, LOAN_ACCOUNT, LOC_ACCOUNT, INSURANCE_ACCOUNT"
enum AccountCategory {
    DEPOSIT_ACCOUNT
    INSURANCE_ACCOUNT
    INVESTMENT_ACCOUNT
    LOAN_ACCOUNT
    LOC_ACCOUNT
}

"HTTP Method to use for the request"
enum Action {
    DELETE
    GET
    PATCH
    POST
    PUT
}

enum AnnualIncreaseType {
    DOLLAR
    FIXED
    PERCENT
}

enum AnnunityProductType {
    CURRENCY
    SHARES
}

enum AnnunityValueBasis {
    FIXED
    VARIABLE
}

enum AssetClass1 {
    DOMESTICBOND
    INTLBOND
    INTLSTOCK
    LARGESTOCK
    MONEYMARKET
    OTHER
    SMALLSTOCK
}

"ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)"
enum BalanceType {
    ASSET
    LIABILITY
}

"The type of an investment balance. AMOUNT or PERCENTAGE."
enum BalanceType1 {
    AMOUNT
    PERCENTAGE
}

"Type of next call"
enum CallType {
    CALL
    MATURITY
    PREFUND
    PUT
}

enum CompoundingPeriod {
    ANNUALLY
    BIWEEKLY
    DAILY
    MONTHLY
    SEMIANNUALLY
    SEMIMONTHLY
    WEEKLY
}

"When coupons mature"
enum CouponMatureFrequency {
    ANNUAL
    MONTHLY
    OTHER
    QUARTERLY
    SEMIANNUAL
}

"Month of coverage"
enum CoverageMonth1 {
    ANNUAL
    APRIL
    AUGUST
    DECEMBER
    FEBRUARY
    JANUARY
    JULY
    JUNE
    MARCH
    MAY
    NOVEMBER
    OCTOBER
    SEPTEMBER
}

"Month"
enum CoverageMonth2 {
    ANNUAL
    APRIL
    AUGUST
    DECEMBER
    FEBRUARY
    JANUARY
    JULY
    JUNE
    MARCH
    MAY
    NOVEMBER
    OCTOBER
    SEPTEMBER
}

"Akoya will ensure that this is correctly populated with one of DEBIT or CREDIT and matches the sign of the status field."
enum DebitCreditMemo {
    CREDIT
    DEBIT
}

"Classification of debt"
enum DebtClass {
    CORPORATE
    MUNICIPAL
    OTHER
    TREASURY
}

"Debt type"
enum DebtType {
    ASSET
    COUPON
}

"To indicate gain or loss resulted from option expiration. If salesPrice (1d, proceeds) is zero, use PURCHASED. If costBasis (1e) is zero, use GRANTED"
enum ExpiredOptionType1 {
    GRANTED
    PURCHASED
}

enum Frequency {
    ANNUALLY
    BIWEEKLY
    DAILY
    MONTHLY
    SEMIANNUALLY
    SEMIMONTHLY
    WEEKLY
}

"Sub-account"
enum HeldInAccount {
    CASH
    MARGIN
    OTHER
    SHORT
}

enum HoldingSubType {
    CASH
    MONEYMARKET
}

enum HoldingType {
    ANNUITY
    BOND
    CD
    MUTUALFUND
    OPTION
    OTHER
    STOCK
}

"Type of investment income. CGLONG (capital gains-long term), CGSHORT (capital gains-short term), MISC."
enum IncomeType {
    CGLONG
    CGSHORT
    MISC
}

"The type of interest rate. FIXED or VARIABLE."
enum InterestRateType {
    FIXED
    VARIABLE
}

"For 401(k) accounts, source of money for this order. Default if not present is OTHERNONVEST."
enum Inv401kSource {
    AFTERTAX
    MATCH
    OTHERNONVEST
    OTHERVEST
    PRETAX
    PROFITSHARING
    ROLLOVER
}

"Source for money for this security."
enum Inv401kSurce {
    AFTERTAX
    MATCH
    OTHERNONVEST
    OTHERVEST
    PRETAX
    PROFITSHARING
    ROLLOVER
}

"Source of money."
enum Inv401kSource1 {
    AFTERTAX
    MATCH
    OTHERNONVEST
    OTHERVEST
    PRETAX
    PROFITSHARING
    ROLLOVER
}

"Country code"
enum ISO3166CountryCode2 {
    AD
    AE
    AF
    AG
    AI
    AL
    AM
    AO
    AQ
    AR
    AS
    AT
    AU
    AW
    AX
    AZ
    BA
    BB
    BD
    BE
    BF
    BG
    BH
    BI
    BJ
    BL
    BM
    BN
    BO
    BQ
    BR
    BS
    BT
    BV
    BW
    BY
    BZ
    CA
    CC
    CD
    CF
    CG
    CH
    CI
    CK
    CL
    CM
    CN
    CO
    CR
    CU
    CV
    CW
    CX
    CY
    CZ
    DE
    DJ
    DK
    DM
    DO
    DZ
    EC
    EE
    EG
    EH
    ER
    ES
    ET
    FI
    FJ
    FK
    FM
    FO
    FR
    GA
    GB
    GD
    GE
    GF
    GG
    GH
    GI
    GL
    GM
    GN
    GP
    GQ
    GR
    GS
    GT
    GU
    GW
    GY
    HK
    HM
    HN
    HR
    HT
    HU
    ID
    IE
    IL
    IM
    IN
    IO
    IQ
    IR
    IS
    IT
    JE
    JM
    JO
    JP
    KE
    KG
    KH
    KI
    KM
    KN
    KP
    KR
    KW
    KY
    KZ
    LA
    LB
    LC
    LI
    LK
    LR
    LS
    LT
    LU
    LV
    LY
    MA
    MC
    MD
    ME
    MF
    MG
    MH
    MK
    ML
    MM
    MN
    MO
    MP
    MQ
    MR
    MS
    MT
    MU
    MV
    MW
    MX
    MY
    MZ
    NA
    NC
    NE
    NF
    NG
    NI
    NL
    NO
    NP
    NR
    NU
    NZ
    OM
    PA
    PE
    PF
    PG
    PH
    PK
    PL
    PM
    PN
    PR
    PS
    PT
    PW
    PY
    QA
    RE
    RO
    RS
    RU
    RW
    SA
    SB
    SC
    SD
    SE
    SG
    SH
    SI
    SJ
    SK
    SL
    SM
    SN
    SO
    SR
    SS
    ST
    SV
    SX
    SY
    SZ
    TC
    TD
    TF
    TG
    TH
    TJ
    TK
    TL
    TM
    TN
    TO
    TR
    TT
    TV
    TW
    TZ
    UA
    UG
    UM
    US
    UY
    UZ
    VA
    VC
    VE
    VG
    VI
    VN
    VU
    WF
    WS
    YE
    YT
    ZA
    ZM
    ZW
}

enum LoanPaymentFrequency {
    ANNUALLY
    BIMONTHLY
    BIWEEKLY
    FOURWEEKS
    MONTHLY
    OTHER
    QUARTERLY
    SEMIANNUALLY
    TWICEMONTHLY
    WEEKLY
}

"The location type of an address"
enum Locationtype {
    BUSINESS
    HOME
    MAILING
}

"Month"
enum MonthAbbreviation1 {
    APR
    AUG
    DEC
    FEB
    JAN
    JUL
    JUN
    MAR
    MAY
    NOV
    OCT
    SEP
}

"Mutual fund type"
enum MutualFundType {
    CLOSEEND
    OPENEND
    OTHER
}

enum OptionType {
    CALL
    PUT
}

"This order is good for DAY, GOODTILLCANCEL, IMMEDIATE"
enum OrderDuration {
    DAY
    GOODTILLCANCEL
    IMMEDIATE
}

"Type of order."
enum OrderType {
    BUY
    BUYTOCOVER
    BUYTOOPEN
    SELL
    SELLCLOSE
    SELLSHORT
    SELLTOCOVER
    SELLTOOPEN
}

enum PaymentFrequency {
    ANNUALLY
    BIWEEKLY
    DAILY
    MONTHLY
    SEMIANNUALLY
    SEMIMONTHLY
    WEEKLY
}

enum PaymentFrequency1 {
    ANNUALLY
    MONTHLY
    QUARTERLY
    WEEKLY
}

enum PeriodCertainGuarantee {
    _10YEAR
    _20YEAR
    _30YEAR
    _5YEAR
    NOPERIODCERTAIN
}

enum Phonetype {
    BUSINESS
    CELL
    FAX
    HOME
}

"he payment term for the premium. MONTHLY or ANNUAL."
enum PolicyPremiumTerm {
    ANNUAL
    MONTHLY
}

enum PositionType {
    LONG
    SHORT
}

"LONG, SHORT."
enum PositionType2 {
    LONG
    SHORT
}

"LONG, SHORT."
enum PostionType {
    LONG
    SHORT
}

"Box 6, Reported to IRS: GROSS or NET"
enum SaleProceedsType1 {
    GROSS
    NET
}

"Box 2, LONG or SHORT"
enum SaleTermType2 {
    LONG
    SHORT
}

"LONG or SHORT (1099-B box 2)"
enum SaleTermType3 {
    LONG
    SHORT
}

"How the option is secured"
enum Secured {
    COVERED
    NAKED
}

"Security identifier type"
enum SecurityIdType {
    CUSIP
    ISIN
    SEDOL
    SICC
    VALOR
    WKN
}

"Security identifier type."
enum SecurityIdType3 {
    BUSIP
    ISIN
    SEDOL
    SICC
    VALOR
    WKN
}

enum SecurityType {
    BOND
    DEBT
    MUTUALFUND
    OPTION
    OTHER
    STOCK
    SWEEP
}

"State two-digit code"
enum StateCode2 {
    AA
    AE
    AK
    AL
    AP
    AR
    AS
    AZ
    CA
    CO
    CT
    DC
    DE
    FL
    FM
    GA
    GU
    HI
    IA
    ID
    IL
    IN
    KS
    KY
    LA
    MA
    MD
    ME
    MH
    MI
    MN
    MO
    MP
    MS
    MT
    NC
    ND
    NE
    NH
    NJ
    NM
    NV
    NY
    OH
    OK
    OR
    PA
    PR
    PW
    RI
    SC
    SD
    TN
    TX
    UT
    VA
    VI
    VT
    WA
    WI
    WV
    WY
}

"The status of an account."
enum Status {
    CLOSED
    DELINQUENT
    NEGATIVECURRENTBALANCE
    OPEN
    PAID
    PENDINGCLOSE
    PENDINGOPEN
}

"AUTHORIZATION, MEMO, PENDING, or POSTED"
enum Status1 {
    AUTHORIZATION
    MEMO
    PENDING
    POSTED
}

enum StockType {
    BOND
    DEBT
    MUTUALFUND
    OPTION
    OTHER
    STOCK
    SWEEP
}

enum SubAccount {
    CASH
    MARGIN
    OTHER
    SHORT
}

"From which account money came in."
enum SubAccountFund {
    CASH
    MARGIN
    OTHERS
    SHORT
}

"Sub-account security type."
enum SubAccountSec {
    CASH
    MARGIN
    OTHERS
    SHORT
}

"Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
enum TaxPartyType2 {
    BUSINESS
    INDIVIDUAL
}

"Type of phone number: HOME, BUSINESS, CELL, FAX"
enum TelephoneNumberType2 {
    BUSINESS
    CELL
    FAX
    HOME
}

"Reason for this transaction; CALL (the debt was called), SELL (the debt was sold), MATURITY (the debt reached maturity)"
enum TransactionReason {
    CALL
    MATURITY
    SELL
}

"DepositTransaction Type"
enum TransactionType {
    ADJUSTMENT
    ATMDEPOSIT
    ATMWITHDRAWAL
    BILLPAYMENT
    CHECK
    DEPOSIT
    DIRECTDEPOSIT
    DIVIDEND
    FEE
    INTEREST
    POSCREDIT
    POSDEBIT
    TRANSFER
    WITHDRAWAL
}

"InsuranceTransaction Type"
enum TransactionType1 {
    ADJUSTMENT
    FEE
    INTEREST
    PAYMENT
}

"InvestmentTransaction Type"
enum TransactionType2 {
    ADJUSTMENT
    ATM
    CASH
    CHECK
    CLOSURE
    CLOSUREOPT
    CONTRIBUTION
    DEP
    DEPOSIT
    DIRECTDEBIT
    DIRECTDEP
    DIV
    DIVIDEND
    DIVIDENDREINVEST
    EXPENSE
    FEE
    INCOME
    INTEREST
    INVEXPENSE
    JRNLFUND
    JRNLSEC
    MARGININTEREST
    OPTIONEXERCISE
    OPTIONEXPIRATION
    OTHER
    PAYMENT
    POS
    PURCHASED
    PURCHASEDTOCOVER
    PURCHASETOCLOSE
    PURCHASETOOPEN
    REINVESTOFINCOME
    REPEATPMT
    RETURNOFCAPITAL
    SOLD
    SOLDTOCLOSE
    SOLDTOOPEN
    SPLIT
    SRVCHG
    TRANSFER
    XFER
}

"LoanTransaction Type"
enum TransactionType3 {
    ADJUSTMENT
    FEE
    INTEREST
    PAYMENT
}

"LocTransaction Type"
enum TransactionType4 {
    ADJUSTMENT
    ATMDEPOSIT
    ATMWITHDRAWAL
    BILLPAYMENT
    CHECK
    DEPOSIT
    DIRECTDEPOSIT
    DIVIDEND
    FEE
    INTEREST
    POSCREDIT
    POSDEBIT
    TRANSFER
    WITHDRAWAL
}

"Transfer direction."
enum TransferAction {
    IN
    OUT
}

enum Type {
    APPLICATIONJSON
    APPLICATIONPDF
    IMAGEGIF
    IMAGEJPEG
    IMAGEPNG
    IMAGETIFF
}

"Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)"
enum TypeDataType1 {
    BASE64_PDF
    JSON
}

"Enumerated name of the tax form entity e.g. \"TaxW2\""
enum TypeFormType2 {
    BUSINESSINCOMESTATEMENT
    CRYPTOCURRENCYTAXSTATEMENT
    FARMINCOMESTATEMENT
    FARMRENTALINCOMESTATEMENT
    RENTALINCOMESTATEMENT
    ROYALTYINCOMESTATEMENT
    TAX1041K1
    TAX1042S
    TAX1065K1
    TAX1095A
    TAX1095B
    TAX1095C
    TAX1097BTC
    TAX1098
    TAX1098C
    TAX1098E
    TAX1098MA
    TAX1098Q
    TAX1098T
    TAX1099A
    TAX1099B
    TAX1099C
    TAX1099CAP
    TAX1099CONSOLIDATEDSTATEMENT
    TAX1099DIV
    TAX1099G
    TAX1099H
    TAX1099INT
    TAX1099K
    TAX1099LS
    TAX1099LTC
    TAX1099MISC
    TAX1099NEC
    TAX1099OID
    TAX1099PATR
    TAX1099Q
    TAX1099QA
    TAX1099R
    TAX1099S
    TAX1099SA
    TAX1099SB
    TAX1120SK1
    TAX2439
    TAX3921
    TAX3922
    TAX5227K1
    TAX5498
    TAX5498ESA
    TAX5498QA
    TAX5498SA
    TAXW2
    TAXW2C
    TAXW2G
}

"Type of unit."
enum UnitType {
    CURRENCY
    SHARES
}

enum UnitType1 {
    CURRENCY
    SHARES
}

enum Version {
    V2
}

type Accountinformation {
    "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution."
    accountId: String!
    "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc."
    accountType: String!
    "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider."
    accountNumberDisplay: String!
    "Indicates the currency code used by the account. May also include currency rate."
    currency: CurrencyEntity!
    description: String!
    fiAttributes: [FiAttributeEntity!]
    "Name given by the user. Used in UIs to assist in account selection"
    nickname: String!
    "Marketed product name for this account.  Used in UIs to assist in account selection"
    productName: String!
    "The status of an account."
    status: Status!
    "The line of business, such as consumer, consumer joint, small business, corporate, etc."
    lineOfBusiness: String!
    "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)"
    balanceType: BalanceType!
    "Interest Rate of Account"
    interestRate: Float!
    "The type of interest rate. FIXED or VARIABLE."
    interestRateType: InterestRateType!
    "Date of account’s interest rate"
    interestRateAsOf: String!
    "Date that last transaction occurred on account"
    lastActivityDate: String!
    "MICR Number"
    micrNumber: String!
    "Long-term persistent identity of the parent account. This is used to group accounts."
    parentAccountId: String!
    "Previous Interest Rate of Account"
    priorInterestRate: Float!
    "Account is eligible for incoming transfers"
    transferIn: Boolean!
    "Account is eligible for outgoing transfers"
    transferOut: Boolean!
}

"This provides details required to execute a transaction against the account within the payment network"
type PaymentNetworkSupportedbyAccount {
    "Bank identifier used by the payment network ie. Routing Number"
    bankId: String!
    "The number used to identify the account within the payment network. If identifierType is ACCOUNT_NUMBER, this is the account number."
    identifier: String!
    "Type of identifier"
    identifierType: String!
    "Type of payment network"
    type: String!
    "Can transfer funds to the account using this information"
    transferIn: Boolean!
    "Can transfer funds from the account using this information"
    transferOut: Boolean!
}

"U.S. domestic address or a foreign address with country other than 'US'"
type Address {
    "Address line 1"
    line1: String!
    "Address line 2"
    line2: String!
    "Address line 3"
    line3: String!
    "City"
    city: String!
    "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'"
    region: String!
    "Postal code"
    postalCode: String!
    "Country code"
    country: ISO3166CountryCode2!
}

type InvestmentBalanceList {
    "Name of the balance."
    balanceName: String!
    "Description of balance."
    balanceDescription: String!
    "The type of an investment balance. AMOUNT or PERCENTAGE."
    balanceType: BalanceType1!
    "Value of balance name."
    balanceValue: Float!
    "Date as of this balance."
    balanceDate: String!
    "Indicates the currency code used by the account. May also include currency rate."
    currency: CurrencyEntity!
}

"Name 1, Name 2"
type Businessname {
    "Name line 1"
    name1: String!
    "Name line 2"
    name2: String!
}

"Business Income Statement for IRS Form 1040 Schedule C"
type BusinessIncomeStatement {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box C, Business name"
    businessName: String!
    "Box 1, Gross receipts or sales"
    sales: Float!
    "Box 2, Returns and allowances"
    returns: Float!
    "Box 6, Other income, including federal and state gasoline or fuel tax credit or refund"
    otherIncome: [DescriptionandAmount!]
    "Box 8, Advertising"
    advertising: Float!
    "Box 9, Car and truck expenses"
    carAndTruck: Float!
    "Box 10, Commissions and fees"
    commissions: Float!
    "Box 11, Contract labor"
    contractLabor: Float!
    "Box 12, Depletion"
    depletion: Float!
    "Box 13, Depreciation"
    depreciation: Float!
    "Box 14, Employee benefit programs"
    employeeBenefits: Float!
    "Box 15, Insurance"
    insurance: Float!
    "Box 16a, Mortgage interest"
    mortgageInterest: Float!
    "Box 16b, Other interest"
    otherInterest: Float!
    "Box 17, Legal and professional services"
    legal: Float!
    "Box 18, Office expense"
    office: Float!
    "Box 19, Pension and profit-sharing plans"
    pension: Float!
    "Box 20a, Equipment rent"
    equipmentRent: Float!
    "Box 20b, Other rent"
    otherRent: Float!
    "Box 21, Repairs and maintenance"
    repairs: Float!
    "Box 22, Supplies"
    supplies: Float!
    "Box 23, Taxes and licenses"
    taxes: Float!
    "Box 24a, Travel"
    travel: Float!
    "Box 24b, Deductible meals"
    meals: Float!
    "Box 25, Utilities"
    utilities: Float!
    "Box 26, Wages"
    wages: Float!
    "Box 27, Other expenses"
    otherExpenses: [DescriptionandAmount!]
    "Box 35, Inventory at beginning of year"
    beginningInventory: Float!
    "Box 36, Purchases"
    purchases: Float!
    "Box 37, Cost of labor"
    costOfLabor: Float!
    "Box 38, Materials and supplies"
    materials: Float!
    "Box 39, Other costs"
    otherCosts: [DescriptionandAmount!]
    "Box 41, Inventory at end of year"
    endingInventory: Float!
    "Capital expenditures, for use in calculating Depreciation"
    capitalExpenditures: [DateandAmount!]
}

"Annuity Account"
type AnnuityAccount {
    "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution."
    accountId: String!
    "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc."
    accountType: String!
    "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider."
    accountNumberDisplay: String!
    "Indicates the currency code used by the account. May also include currency rate."
    currency: CurrencyEntity!
    description: String!
    fiAttributes: [FiAttributeEntity!]
    "Name given by the user. Used in UIs to assist in account selection"
    nickname: String!
    "Marketed product name for this account.  Used in UIs to assist in account selection"
    productName: String!
    "The status of an account."
    status: Status!
    "The line of business, such as consumer, consumer joint, small business, corporate, etc."
    lineOfBusiness: String!
    "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)"
    balanceType: BalanceType!
    "Interest Rate of Account"
    interestRate: Float!
    "The type of interest rate. FIXED or VARIABLE."
    interestRateType: InterestRateType!
    "Date of account’s interest rate"
    interestRateAsOf: String!
    "Date that last transaction occurred on account"
    lastActivityDate: String!
    "MICR Number"
    micrNumber: String!
    "Long-term persistent identity of the parent account. This is used to group accounts."
    parentAccountId: String!
    "Previous Interest Rate of Account"
    priorInterestRate: Float!
    "Account is eligible for incoming transfers"
    transferIn: Boolean!
    "Account is eligible for outgoing transfers"
    transferOut: Boolean!
    annuityProductType: AnnunityProductType!
    annuityValueBasis: AnnunityValueBasis!
    paymentFrequency: PaymentFrequency1!
}

"Data elements included with balances specific to annuity accounts"
type Annuitybalances {
    "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution."
    accountId: String!
    "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc."
    accountType: String!
    "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider."
    accountNumberDisplay: String!
    "Indicates the currency code used by the account. May also include currency rate."
    currency: CurrencyEntity!
    description: String!
    fiAttributes: [FiAttributeEntity!]
    "Name given by the user. Used in UIs to assist in account selection"
    nickname: String!
    "Marketed product name for this account.  Used in UIs to assist in account selection"
    productName: String!
    "The status of an account."
    status: Status!
    "The line of business, such as consumer, consumer joint, small business, corporate, etc."
    lineOfBusiness: String!
    "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)"
    balanceType: BalanceType!
    "Interest Rate of Account"
    interestRate: Float!
    "The type of interest rate. FIXED or VARIABLE."
    interestRateType: InterestRateType!
    "Date of account’s interest rate"
    interestRateAsOf: String!
    "Date that last transaction occurred on account"
    lastActivityDate: String!
    "MICR Number"
    micrNumber: String!
    "Long-term persistent identity of the parent account. This is used to group accounts."
    parentAccountId: String!
    "Previous Interest Rate of Account"
    priorInterestRate: Float!
    "Account is eligible for incoming transfers"
    transferIn: Boolean!
    "Account is eligible for outgoing transfers"
    transferOut: Boolean!
    annuityProductType: AnnunityProductType!
    annuityValueBasis: AnnunityValueBasis!
    paymentFrequency: PaymentFrequency1!
    "Percent or dollar amount of annual payment increase"
    annualIncrease: Float!
    annualIncreaseType: AnnualIncreaseType!
    "Surrender or cash balance value"
    netPresentValue: Float!
    "Amount of the recurring payment"
    paymentAmount: Float!
    "Date last payment will be made"
    paymentEndDate: String!
    "Date of first payment; could be a future date"
    paymentStartDate: String!
    periodCertainGuarantee: PeriodCertainGuarantee!
    "Total number of payments that will be produced by the annuity"
    totalPaymentCount: Float!
}

"Code and amount pair used on IRS W-2, K-1, etc."
type CodeandAmount {
    "Code"
    code: String!
    "Amount"
    amount: Float!
}

"Describes how new contributions are distributed among the available securities."
type ContributionEntity {
    "Unique identifier of security"
    securityId: String!
    "Security identifier type"
    securityIdType: SecurityIdType!
    "Employer contribution match percentage"
    employerMatchPercentage: Float!
    "Employer contribution match amount"
    employerMatchAmount: Float!
    "Employee pre‐tax contribution amount"
    employeePreTaxAmount: Float!
    "Employee pre‐tax contribution percentage"
    employeePreTaxPercentage: Float!
    "Employee after tax contribution amount"
    employeeAfterTaxAmount: Float!
    "Employee after tax contribution percentage"
    employeeAfterTaxPercentage: Float!
    "Employee defer pre‐tax contribution match amount"
    employeeDeferPreTaxAmount: Float!
    "Employee defer pre‐tax contribution match percentage"
    employeeDeferPreTaxPercentage: Float!
    "Employee total year to date contribution"
    employeeYearToDate: Float!
    "Employer total year to date contribution"
    employerYearToDate: Float!
    "Rollover contribution percentage"
    rolloverContributionPercentage: Float!
    "Rollover contribution Amount"
    rolloverContributionAmount: Float!
}

"Tax information for a single cryptocurrency transaction. If reported on Form 1099-B, use Tax1099B and SecurityDetail instead of this entity."
type Gainorlossfromcryptocurrencytransaction {
    "Cryptocurrency name (e.g. Bitcoin)"
    cryptocurrencyName: String!
    "Cryptocurrency abbreviation or symbol (e.g. BTC)"
    symbol: String!
    "Quantity (e.g. 0.0125662)"
    quantity: Float!
    "Description of property (1099-B box 1a)"
    saleDescription: String!
    "Date acquired (1099-B box 1b)"
    dateAcquired: String!
    "Acquired on various dates (1099-B box 1b)"
    variousDatesAcquired: Boolean!
    "Date sold or disposed (1099-B box 1c)"
    dateOfSale: String!
    "Proceeds (not price per share, 1099-B box 1d)"
    salesPrice: Float!
    "Cost or other basis (1099-B box 1e)"
    costBasis: Float!
    "LONG or SHORT (1099-B box 2)"
    longOrShort: SaleTermType3!
}

"Array of cryptocurrency gains and losses"
type CryptocurrencyTaxStatementlist {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "The list of cryptocurrency gains and losses"
    gainsAndLosses: [Gainorlossfromcryptocurrencytransaction!]
}

"Indicates the currency code used by the account. May also include currency rate."
type CurrencyEntity {
    "Iso 4217 currency code."
    currencyCode: String!
    "Currency rate between original and converted currency."
    currencyRate: Float!
    "Iso 4217 currency code."
    originalCurrencyCode: String!
}

"Represents a customer (end-user)"
type Customer {
    "Long-term persistent identity of the end-user. This identity must be unique to the owning institution"
    customerId: String!
    "The end-user's name"
    name: Name!
}

"Information about the debt security specific to the type of security"
type DebtSecurityEntity {
    "Par value amount"
    parValue: Float!
    "Debt type"
    debtType: DebtType!
    "Classification of debt"
    debtClass: DebtClass!
    "Bond coupon rate for next closest call date"
    couponRate: Float!
    "Maturity date for next coupon"
    couponDate: String!
    "When coupons mature"
    couponMatureFrequency: CouponMatureFrequency!
    "Bond call price"
    callPrice: Float!
    "Yield to next call"
    yieldToCall: Float!
    "Next call date"
    callDate: String!
    "Type of next call"
    callType: CallType!
    "Yield to maturity"
    yieldToMaturity: Float!
    "Bond Maturity date"
    bondMaturityDate: String!
}

"Deposit Account"
type DepositAccount {
    "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution."
    accountId: String!
    "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc."
    accountType: String!
    "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider."
    accountNumberDisplay: String!
    "Indicates the currency code used by the account. May also include currency rate."
    currency: CurrencyEntity!
    description: String!
    fiAttributes: [FiAttributeEntity!]
    "Name given by the user. Used in UIs to assist in account selection"
    nickname: String!
    "Marketed product name for this account.  Used in UIs to assist in account selection"
    productName: String!
    "The status of an account."
    status: Status!
    "The line of business, such as consumer, consumer joint, small business, corporate, etc."
    lineOfBusiness: String!
    "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)"
    balanceType: BalanceType!
    "Interest Rate of Account"
    interestRate: Float!
    "The type of interest rate. FIXED or VARIABLE."
    interestRateType: InterestRateType!
    "Date of account’s interest rate"
    interestRateAsOf: String!
    "Date that last transaction occurred on account"
    lastActivityDate: String!
    "MICR Number"
    micrNumber: String!
    "Long-term persistent identity of the parent account. This is used to group accounts."
    parentAccountId: String!
    "Previous Interest Rate of Account"
    priorInterestRate: Float!
    "Account is eligible for incoming transfers"
    transferIn: Boolean!
    "Account is eligible for outgoing transfers"
    transferOut: Boolean!
    "Annual Percentage Yield."
    annualPercentageYield: Float!
    "Term of CD in months"
    term: Int!
    "Maturity date for CDs."
    maturityDate: String!
}

"Data elements included with balances specific to deposit accounts"
type Depositbalances {
    "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution."
    accountId: String!
    "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc."
    accountType: String!
    "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider."
    accountNumberDisplay: String!
    "Indicates the currency code used by the account. May also include currency rate."
    currency: CurrencyEntity!
    description: String!
    fiAttributes: [FiAttributeEntity!]
    "Name given by the user. Used in UIs to assist in account selection"
    nickname: String!
    "Marketed product name for this account.  Used in UIs to assist in account selection"
    productName: String!
    "The status of an account."
    status: Status!
    "The line of business, such as consumer, consumer joint, small business, corporate, etc."
    lineOfBusiness: String!
    "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)"
    balanceType: BalanceType!
    "Interest Rate of Account"
    interestRate: Float!
    "The type of interest rate. FIXED or VARIABLE."
    interestRateType: InterestRateType!
    "Date of account’s interest rate"
    interestRateAsOf: String!
    "Date that last transaction occurred on account"
    lastActivityDate: String!
    "MICR Number"
    micrNumber: String!
    "Long-term persistent identity of the parent account. This is used to group accounts."
    parentAccountId: String!
    "Previous Interest Rate of Account"
    priorInterestRate: Float!
    "Account is eligible for incoming transfers"
    transferIn: Boolean!
    "Account is eligible for outgoing transfers"
    transferOut: Boolean!
    "Annual Percentage Yield."
    annualPercentageYield: Float!
    "Term of CD in months"
    term: Int!
    "Maturity date for CDs."
    maturityDate: String!
    "As-of date of balances"
    balanceAsOf: String!
    "Day's opening fund balance"
    openingDayBalance: Float!
    "Balance of funds available for use"
    availableBalance: Float!
    "YTD Interest"
    interestYtd: Float!
    "Balance of funds in account"
    currentBalance: Float!
}

"Deposit transaction"
type DepositTransaction {
    "Corresponds to AccountId in Account"
    accountId: String!
    "The amount of money in the account currency.\n\nIf balanceType is `ASSET`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"+\" or not present\n  2. If `CREDIT`, sign is \"-\"\n\nIf balanceType is `LIABILITY`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"-\"\n  2. If `CREDIT`, sign is \"+\" or not present"
    amount: Float!
    "Transaction category, preferably MCC or SIC."
    category: String!
    "Akoya will ensure that this is correctly populated with one of DEBIT or CREDIT and matches the sign of the status field."
    debitCreditMemo: DebitCreditMemo!
    "The description of the transaction"
    description: String!
    "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt."
    imageIds: [String!]
    "Array of FI-specific attributes"
    fiAttributes: [FiAttributeEntity!]
    "The amount of money in the foreign currency"
    foreignAmount: Float!
    "The ISO 4217 code of the foreign currency"
    foreignCurrency: String!
    "Breakdown of the transaction details"
    lineItem: [LineItem!]
    "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs"
    links: [HATEOASLink!]
    "Secondary transaction description"
    memo: String!
    "The date and time that the transaction was posted to the account. If not provided then TransactionTimestamp can be used as PostedTimeStamp."
    postedTimestamp: String!
    "A tracking reference identifier"
    reference: String!
    "Akoya ensures that this field is populated for all transactions which are reversals, otherwise it is null. Either way it is always present.\n\nFor reverse postings, the identity of the transaction being reversed. For the correction transaction, the identity of the reversing post. For credit card posting transactions, the identity of the authorization transaction."
    referenceTransactionId: String!
    "AUTHORIZATION, MEMO, PENDING, or POSTED"
    status: Status1!
    "Transaction category detail"
    subCategory: String!
    "Long term persistent identity of the transaction (unique to account). \nTransaction IDs should: \n\n  1. be the same for pending and posted \n  2. be different for reversed transactions \n  3. `referenceTransactionId` should be present for reversed transactions'"
    transactionId: String!
    "The date and time that the transaction was added to the server backend systems.\n\nAkoya ensures that this field is populated for all transactions to which it applies, otherwise it is null. Either way it is always present."
    transactionTimestamp: String!
    "Payee name"
    payee: String!
    "Check Number"
    checkNumber: Int!
    "DepositTransaction Type"
    transactionType: TransactionType!
}

"Date, description, and amount. When used in 1098-Q, description is optional"
type DateandAmount {
    "Date of amount. When used in 1098-Q, date of last payment in month"
    date: String!
    "Description of amount. When used in 1098-Q, may use MonthAbbreviation"
    description: String!
    "Amount of payment or receipt. When used in 1098-Q, monthly total"
    amount: Float!
}

"Description and amount pair used on IRS W-2, etc."
type DescriptionandAmount {
    "Description"
    description: String!
    "Amount"
    amount: Float!
}

type EquityGrant {
    "Unique identifier of grant"
    grantId: String!
    "Date grant was given"
    grantDate: String!
    "Type of grant"
    grantType: String!
    seqNum: Float!
    "Grant price"
    grantPrice: Float!
    "Indicates the currency of grant USD vs AUD vs EUR etc (for share awards, you will still get a USD)"
    grantCurrencyCode: String!
    "Number of options"
    quantityGranted: Float!
    quantityOutstanding: Float!
    "Date grant expires"
    expirationDate: String!
    "An array of equityGrant vestings. Provides the past, present, and future vesting schedule and percentages."
    vestings: [Vesting!]
}

"An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors"
type Error {
    "Error code defined by FDX API Specification or Data Provider indicating the error situation which has occurred"
    code: Int!
    "End user displayable information which might help the customer diagnose an error"
    message: String!
    "Message used to debug the root cause of the error. Contents should not be used in consumer's business logic. Can change at any time and should only be used for consumer to communicate with the data provider about an issue. Provider can include an error GUID in message for their use."
    debugMessage: String!
}

"Farm Income Statement for IRS Form 1040 Schedule F"
type FarmIncomeStatement {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box A, Principal crop or activity"
    cropOrActivity: String!
    "Box 1a, Sales of livestock and other resale items"
    sales: Float!
    "Box 1b, Cost or other basis of livestock or other items"
    costOfItemsSold: Float!
    "Box 2, Sales of livestock, produce, grains, and other products you raised"
    salesOfRaised: Float!
    "Box 3a, Cooperative distributions"
    coopDistributions: Float!
    "Box 4a, Agricultural program payments"
    agProgramPayments: Float!
    "Box 5a, Commodity Credit Corporation (CCC) loans reported under election"
    cccLoans: Float!
    "Box 6a, Crop insurance proceeds and federal crop disaster payments"
    cropInsuranceProceeds: Float!
    "Box 7, Custom hire (machine work) income"
    customHireIncome: Float!
    "Box 8, Other income"
    otherIncome: [DescriptionandAmount!]
    "Box 10, Car and truck expenses"
    carAndTruck: Float!
    "Box 11, Chemicals"
    chemicals: Float!
    "Box 12, Conservation expenses"
    conservation: Float!
    "Box 13, Custom hire (machine work)"
    customHireExpenses: Float!
    "Box 14, Depreciation"
    depreciation: Float!
    "Box 15, Employee benefit programs"
    employeeBenefitPrograms: Float!
    "Box 16, Feed"
    feed: Float!
    "Box 17, Fertilizers and lime"
    fertilizers: Float!
    "Box 18, Freight and trucking"
    freight: Float!
    "Box 19, Gasoline, fuel, and oil"
    fuel: Float!
    "Box 20, Insurance (other than health)"
    insurance: Float!
    "Box 21a, Mortgage Interest"
    mortgageInterest: Float!
    "Box 21b, Other interest"
    otherInterest: Float!
    "Box 22, Labor hired"
    laborHired: Float!
    "Box 23, Pension and profit-sharing plans"
    pension: Float!
    "Box 24a, Rent or lease: Vehicles, machinery, equipment"
    equipmentRent: Float!
    "Box 24b, Rent or lease: Other"
    otherRent: Float!
    "Box 25, Repairs and maintenance"
    repairs: Float!
    "Box 26, Seeds and plants"
    seeds: Float!
    "Box 27, Storage and warehousing"
    storage: Float!
    "Box 28, Supplies"
    supplies: Float!
    "Box 29, Taxes"
    taxes: Float!
    "Box 30, Utilities"
    utilities: Float!
    "Box 31, Veterinary, breeding, and medicine"
    veterinary: Float!
    "Box 32, Other expenses"
    otherExpenses: [DescriptionandAmount!]
    "Capital expenditures, for use in calculating Depreciation"
    capitalExpenditures: [DateandAmount!]
}

"Farm Rental Income Statement for IRS Form 4835"
type FarmRentalIncomeStatement {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box 1, Income from production of livestock, produce, grains, and other crops"
    incomeFromProduction: Float!
    "Box 2a, Cooperative distributions"
    coopDistributions: Float!
    "Box 3a, Agricultural program payments"
    agProgramPayments: Float!
    "Box 4a, Commodity Credit Corporation (CCC) loans reported under election"
    cccLoans: Float!
    "Box 5a, Crop insurance proceeds and federal crop disaster payments"
    cropInsuranceProceeds: Float!
    "Box 6, Other income"
    otherIncome: [DescriptionandAmount!]
    "Box 8, Car and truck expenses"
    carAndTruck: Float!
    "Box 9, Chemicals"
    chemicals: Float!
    "Box 10, Conservation expenses"
    conservation: Float!
    "Box 11, Custom hire (machine work)"
    customHireExpenses: Float!
    "Box 12, Depreciation"
    depreciation: Float!
    "Box 13, Employee benefit programs"
    employeeBenefitPrograms: Float!
    "Box 14, Feed"
    feed: Float!
    "Box 15, Fertilizers and lime"
    fertilizers: Float!
    "Box 16, Freight and trucking"
    freight: Float!
    "Box 17, Gasoline, fuel, and oil"
    fuel: Float!
    "Box 18, Insurance (other than health)"
    insurance: Float!
    "Box 19a, Mortgage Interest"
    mortgageInterest: Float!
    "Box 19b, Other interest"
    otherInterest: Float!
    "Box 20, Labor hired"
    laborHired: Float!
    "Box 21, Pension and profit-sharing plans"
    pension: Float!
    "Box 22a, Rent or lease: Vehicles, machinery, equipment"
    equipmentRent: Float!
    "Box 22b, Rent or lease: Other"
    otherRent: Float!
    "Box 23, Repairs and maintenance"
    repairs: Float!
    "Box 24, Seeds and plants"
    seeds: Float!
    "Box 25, Storage and warehousing"
    storage: Float!
    "Box 26, Supplies"
    supplies: Float!
    "Box 27, Taxes"
    taxes: Float!
    "Box 28, Utilities"
    utilities: Float!
    "Box 29, Veterinary, breeding, and medicine"
    veterinary: Float!
    "Box 30, Other expenses"
    otherExpenses: [DescriptionandAmount!]
    "Capital expenditures, for use in calculating Depreciation"
    capitalExpenditures: [DateandAmount!]
}

"Data provider-specific attribute"
type FiAttributeEntity {
    "Name of attribute"
    name: String!
    "Value of attribute"
    value: String!
}

"One of various persons or businesses involved in Form 1042-S reporting. Use\n  * `tin` for\n    * Box 12a, Withholding Agent EIN,\n    * Box 13e, Recipient U.S. TIN,\n    * Box 14b, Primary Withholding Agent EIN,\n    * Box 15a, Intermediary or flow-through entity EIN,\n    * Box 16b, Payer TIN\n  * `individualName` or `businessName` for\n    * Box 12d, Withholding Agent name,\n    * Box 13a, Recipient name,\n    * Box 14a, Primary Withholding Agent name,\n    * Box 15d, Intermediary or flow-through entity name,\n    * Box 16a, Payer name\n  * `address.country` for\n    * Box 12f, Withholding Agent Country code,\n    * Box 13b, Recipient Country code,\n    * Box 15f, Intermediary or flow-through entity Country code\n  * `address` for\n    * Boxes 12h-i, Withholding Agent Address,\n    * Boxes 13c-d, Recipient Address,\n    * Boxes 15h-i, Intermediary or flow-through entity Address"
type Form1042SAgent {
    "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
    tin: String!
    "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
    partyType: TaxPartyType2!
    "Individual issuer or recipient name"
    individualName: Individualname4!
    "Business issuer or recipient name"
    businessName: Businessname1!
    "Issuer or recipient address"
    address: Address1!
    "Issuer or recipient telephone number"
    phone: TelephoneNumberPlusExtension4!
    "Issuer or recipient email address. (Additional information, not part of IRS forms)"
    email: String!
    "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer"
    ch3StatusCode: String!
    "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer"
    ch4StatusCode: String!
    "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer"
    giin: String!
    "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity"
    foreignTin: String!
}

"Recipient for Form 1042-S, Boxes 13a-j, 13l"
type Form1042SRecipient {
    "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
    tin: String!
    "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
    partyType: TaxPartyType2!
    "Individual issuer or recipient name"
    individualName: Individualname4!
    "Business issuer or recipient name"
    businessName: Businessname1!
    "Issuer or recipient address"
    address: Address1!
    "Issuer or recipient telephone number"
    phone: TelephoneNumberPlusExtension4!
    "Issuer or recipient email address. (Additional information, not part of IRS forms)"
    email: String!
    "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer"
    ch3StatusCode: String!
    "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer"
    ch4StatusCode: String!
    "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer"
    giin: String!
    "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity"
    foreignTin: String!
    "Box 13j, Recipient's LOB code, if any"
    lobCode: String!
    "Box 13l, Recipient's date of birth"
    dateOfBirth: String!
}

"REST application constraint (Hypermedia As The Engine Of Application State)"
type HATEOASLink {
    "URL to invoke the action on the resource"
    href: String!
    "HTTP Method to use for the request"
    action: Action!
    "Content-types that can be used in the Accept header."
    types: [Type!]
}

"Used on Form 1095-A Part III"
type HealthInsuranceCoverage {
    "Monthly enrollment premiums"
    enrollmentPremium: Float!
    "Monthly second lowest cost silver plan (SLCSP) premium"
    slcspPremium: Float!
    "Monthly advance payment of premium tax credit"
    advancePremiumTaxCreditPayment: Float!
    "Month of coverage"
    month: CoverageMonth1!
}

"Used on Form 1095-B Part IV and Form 1095-C Part III"
type HealthInsuranceCoveredIndividual {
    "Name of responsible individual"
    name: Individualname1!
    "Social security number or other TIN"
    tin: String!
    "Date of birth"
    dateOfBirth: String!
    "Covered all 12 months"
    coveredAll12Months: Boolean!
    "Months covered"
    coveredMonths: [MonthAbbreviation!]
}

"Used on Form 1095-A Part II"
type HealthInsuranceMarketplaceCoveredIndividual {
    "Covered individual name"
    name: String!
    "Covered individual SSN"
    tin: String!
    "Covered individual date of birth"
    dateOfBirth: String!
    "Coverage start date"
    policyStartDate: String!
    "Coverage termination date"
    policyTerminationDate: String!
}

type Aninvestmentholding {
    "Percent breakdown by asset class."
    assetClasses: [AssetClass!]
    "Cost is average of all purchases for holding."
    averageCost: Boolean!
    "If true, indicates that this holding is used to maintain proceeds from sales, dividends, and other cash postings to the investment account."
    cashAccount: Boolean!
    "Change in current price compared to previous day's close"
    changeInPrice: Float!
    "Indicates the currency code used by the account. May also include currency rate."
    currency: CurrencyEntity!
    currentUnitPrice: Float!
    "Current unit price as of date"
    currentUnitPriceDate: String!
    "Description of the holding"
    description: String!
    "For CDs, bonds, and other time-based holdings."
    expirationDate: String!
    "Face value at the time of data retrieved."
    faceValue: Float!
    "Percent breakdown by FI-specific asset class percentage breakdown"
    fiAssetClasses: [FiAssetClass!]
    fiAttributes: [FiAttributeEntity!]
    "Sub-account"
    heldInAccount: HeldInAccount!
    "Long term persistent identity of the holding"
    holdingId: String!
    "Holding name or security name"
    holdingName: String!
    holdingSubType: HoldingSubType!
    holdingType: HoldingType!
    "Source for money for this security."
    inv401kSurce: Inv401kSurce!
    "Market value at the time of data retrieved"
    marketValue: Float!
    "Date of original purchase"
    originalPurchaseDate: String!
    positionType: PositionType!
    "Price of holding at the time of purchase"
    purchasedPrice: Float!
    "For CDs, bonds, and other rate based holdings."
    rate: Float!
    "Unique identifier of security"
    securityId: String!
    "Security identifier type"
    securityIdType: SecurityIdType!
    "Ticker / Market symbol"
    symbol: String!
    "Breakdown by tax lot."
    taxLots: [TaxLot!]
    "Number of shares (with decimals)."
    units: Float!
    "Information about the mutual fund security specific to the type of security"
    mutualFundSecurity: MutualFundSecurityEntity!
    "Information about the option security specific to the type of security"
    optionSecurity: OptionSecurityEntity!
    "Information about the security specific to the type of security"
    otherSecurity: OtherSecurityEntity!
    "Information about the stock security specific to the type of security"
    stockSecurity: StockSecurityEntity!
    "Information about the sweep security specific to the type of security"
    sweepSecurity: SweepSecurityEntity!
    "Information about the debt security specific to the type of security"
    debtSecurity: DebtSecurityEntity!
}

"First name, middle initial, last name, suffix fields"
type Individualname {
    "First name"
    first: String!
    "Middle initial"
    middle: String!
    "Last name"
    last: String!
    "Generational or academic suffix"
    suffix: String!
}

"Insurance Account"
type InsuranceAccount {
    "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution."
    accountId: String!
    "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc."
    accountType: String!
    "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider."
    accountNumberDisplay: String!
    "Indicates the currency code used by the account. May also include currency rate."
    currency: CurrencyEntity!
    description: String!
    fiAttributes: [FiAttributeEntity!]
    "Name given by the user. Used in UIs to assist in account selection"
    nickname: String!
    "Marketed product name for this account.  Used in UIs to assist in account selection"
    productName: String!
    "The status of an account."
    status: Status!
    "The line of business, such as consumer, consumer joint, small business, corporate, etc."
    lineOfBusiness: String!
    "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)"
    balanceType: BalanceType!
    "Interest Rate of Account"
    interestRate: Float!
    "The type of interest rate. FIXED or VARIABLE."
    interestRateType: InterestRateType!
    "Date of account’s interest rate"
    interestRateAsOf: String!
    "Date that last transaction occurred on account"
    lastActivityDate: String!
    "MICR Number"
    micrNumber: String!
    "Long-term persistent identity of the parent account. This is used to group accounts."
    parentAccountId: String!
    "Previous Interest Rate of Account"
    priorInterestRate: Float!
    "Account is eligible for incoming transfers"
    transferIn: Boolean!
    "Account is eligible for outgoing transfers"
    transferOut: Boolean!
    "The account category of the insurance account. Possible enums: DEPOSIT_ACCOUNT, INVESTMENT_ACCOUNT, LOAN_ACCOUNT, LOC_ACCOUNT, INSURANCE_ACCOUNT"
    accountCategory: AccountCategory!
}

"Data elements included with balances specific to insurance accounts"
type Insurancebalances {
    "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution."
    accountId: String!
    "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc."
    accountType: String!
    "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider."
    accountNumberDisplay: String!
    "Indicates the currency code used by the account. May also include currency rate."
    currency: CurrencyEntity!
    description: String!
    fiAttributes: [FiAttributeEntity!]
    "Name given by the user. Used in UIs to assist in account selection"
    nickname: String!
    "Marketed product name for this account.  Used in UIs to assist in account selection"
    productName: String!
    "The status of an account."
    status: Status!
    "The line of business, such as consumer, consumer joint, small business, corporate, etc."
    lineOfBusiness: String!
    "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)"
    balanceType: BalanceType!
    "Interest Rate of Account"
    interestRate: Float!
    "The type of interest rate. FIXED or VARIABLE."
    interestRateType: InterestRateType!
    "Date of account’s interest rate"
    interestRateAsOf: String!
    "Date that last transaction occurred on account"
    lastActivityDate: String!
    "MICR Number"
    micrNumber: String!
    "Long-term persistent identity of the parent account. This is used to group accounts."
    parentAccountId: String!
    "Previous Interest Rate of Account"
    priorInterestRate: Float!
    "Account is eligible for incoming transfers"
    transferIn: Boolean!
    "Account is eligible for outgoing transfers"
    transferOut: Boolean!
    "The account category of the insurance account. Possible enums: DEPOSIT_ACCOUNT, INVESTMENT_ACCOUNT, LOAN_ACCOUNT, LOC_ACCOUNT, INSURANCE_ACCOUNT"
    accountCategory: AccountCategory!
    "Total amount of money the user is insured for."
    policyCoverageAmount: Float!
    "The premium end date."
    policyEndDate: String!
    "The amount of the user's premium."
    policyPremium: Float!
    "he payment term for the premium. MONTHLY or ANNUAL."
    policyPremiumTerm: PolicyPremiumTerm!
    "The premium start date."
    policyStartDate: String!
}

"Insurance transactions"
type InsuranceTransaction {
    "Corresponds to AccountId in Account"
    accountId: String!
    "The amount of money in the account currency.\n\nIf balanceType is `ASSET`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"+\" or not present\n  2. If `CREDIT`, sign is \"-\"\n\nIf balanceType is `LIABILITY`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"-\"\n  2. If `CREDIT`, sign is \"+\" or not present"
    amount: Float!
    "Transaction category, preferably MCC or SIC."
    category: String!
    "Akoya will ensure that this is correctly populated with one of DEBIT or CREDIT and matches the sign of the status field."
    debitCreditMemo: DebitCreditMemo!
    "The description of the transaction"
    description: String!
    "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt."
    imageIds: [String!]
    "Array of FI-specific attributes"
    fiAttributes: [FiAttributeEntity!]
    "The amount of money in the foreign currency"
    foreignAmount: Float!
    "The ISO 4217 code of the foreign currency"
    foreignCurrency: String!
    "Breakdown of the transaction details"
    lineItem: [LineItem!]
    "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs"
    links: [HATEOASLink!]
    "Secondary transaction description"
    memo: String!
    "The date and time that the transaction was posted to the account. If not provided then TransactionTimestamp can be used as PostedTimeStamp."
    postedTimestamp: String!
    "A tracking reference identifier"
    reference: String!
    "Akoya ensures that this field is populated for all transactions which are reversals, otherwise it is null. Either way it is always present.\n\nFor reverse postings, the identity of the transaction being reversed. For the correction transaction, the identity of the reversing post. For credit card posting transactions, the identity of the authorization transaction."
    referenceTransactionId: String!
    "AUTHORIZATION, MEMO, PENDING, or POSTED"
    status: Status1!
    "Transaction category detail"
    subCategory: String!
    "Long term persistent identity of the transaction (unique to account). \nTransaction IDs should: \n\n  1. be the same for pending and posted \n  2. be different for reversed transactions \n  3. `referenceTransactionId` should be present for reversed transactions'"
    transactionId: String!
    "The date and time that the transaction was added to the server backend systems.\n\nAkoya ensures that this field is populated for all transactions to which it applies, otherwise it is null. Either way it is always present."
    transactionTimestamp: String!
    "InsuranceTransaction Type"
    transactionType: TransactionType1!
}

"Investment Account"
type InvestmentAccount {
    "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution."
    accountId: String!
    "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc."
    accountType: String!
    "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider."
    accountNumberDisplay: String!
    "Indicates the currency code used by the account. May also include currency rate."
    currency: CurrencyEntity!
    description: String!
    fiAttributes: [FiAttributeEntity!]
    "Name given by the user. Used in UIs to assist in account selection"
    nickname: String!
    "Marketed product name for this account.  Used in UIs to assist in account selection"
    productName: String!
    "The status of an account."
    status: Status!
    "The line of business, such as consumer, consumer joint, small business, corporate, etc."
    lineOfBusiness: String!
    "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)"
    balanceType: BalanceType!
    "Interest Rate of Account"
    interestRate: Float!
    "The type of interest rate. FIXED or VARIABLE."
    interestRateType: InterestRateType!
    "Date of account’s interest rate"
    interestRateAsOf: String!
    "Date that last transaction occurred on account"
    lastActivityDate: String!
    "MICR Number"
    micrNumber: String!
    "Long-term persistent identity of the parent account. This is used to group accounts."
    parentAccountId: String!
    "Previous Interest Rate of Account"
    priorInterestRate: Float!
    "Account is eligible for incoming transfers"
    transferIn: Boolean!
    "Account is eligible for outgoing transfers"
    transferOut: Boolean!
    "Check writing privileges"
    allowedCheckWriting: Boolean!
    "Allowed to trade options"
    allowedOptionTrade: Boolean!
    "Unique identifier FI"
    brokerId: String!
    "Date for this calendar year for 401K account"
    calendarYearFor401K: String!
    "Name of the employer in investment 401k Plan"
    employerName: String!
    "Margin trading is allowed"
    margin: Boolean!
    "Plan number for Investment 401k plan"
    planId: String!
}

"Data elements included with balances specific to investment accounts"
type Investmentbalances {
    "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution."
    accountId: String!
    "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc."
    accountType: String!
    "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider."
    accountNumberDisplay: String!
    "Indicates the currency code used by the account. May also include currency rate."
    currency: CurrencyEntity!
    description: String!
    fiAttributes: [FiAttributeEntity!]
    "Name given by the user. Used in UIs to assist in account selection"
    nickname: String!
    "Marketed product name for this account.  Used in UIs to assist in account selection"
    productName: String!
    "The status of an account."
    status: Status!
    "The line of business, such as consumer, consumer joint, small business, corporate, etc."
    lineOfBusiness: String!
    "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)"
    balanceType: BalanceType!
    "Interest Rate of Account"
    interestRate: Float!
    "The type of interest rate. FIXED or VARIABLE."
    interestRateType: InterestRateType!
    "Date of account’s interest rate"
    interestRateAsOf: String!
    "Date that last transaction occurred on account"
    lastActivityDate: String!
    "MICR Number"
    micrNumber: String!
    "Long-term persistent identity of the parent account. This is used to group accounts."
    parentAccountId: String!
    "Previous Interest Rate of Account"
    priorInterestRate: Float!
    "Account is eligible for incoming transfers"
    transferIn: Boolean!
    "Account is eligible for outgoing transfers"
    transferOut: Boolean!
    "Check writing privileges"
    allowedCheckWriting: Boolean!
    "Allowed to trade options"
    allowedOptionTrade: Boolean!
    "Unique identifier FI"
    brokerId: String!
    "Date for this calendar year for 401K account"
    calendarYearFor401K: String!
    "Name of the employer in investment 401k Plan"
    employerName: String!
    "Margin trading is allowed"
    margin: Boolean!
    "Plan number for Investment 401k plan"
    planId: String!
    "Cash balance across all sub-accounts. Should include sweep funds."
    availableCashBalance: Float!
    "As-of date of balances"
    balanceAsOf: String!
    "Balance List. Name value pair aggregate."
    balanceList: [InvestmentBalanceList!]
    "Total current value of all investments"
    currentValue: Float!
    "Daily change"
    dailyChange: Float!
    "Margin balance"
    marginBalance: Float!
    "Percentage change"
    percentageChange: Float!
    "Rollover amount"
    rolloverAmount: Float!
    "Short balance"
    shortBalance: Float!
}

"Information about an investment loan."
type InvestmentLoanEntity {
    "Unique identifier for this loan"
    loanId: String!
    "Description"
    loanDescription: String!
    "Initial loan balance amount"
    initialLoanBalance: Float!
    "Start date of the loan"
    loanStartDate: String!
    "Current loan principal balance amount"
    currentLoanBalance: Float!
    "Date and time of current loan balance"
    dateAsOf: String!
    "Loan annual interest rate for the loan"
    loanRate: Float!
    "Loan payment amount"
    loanPaymentAmount: Float!
    loanPaymentFrequency: LoanPaymentFrequency!
    "Initial number of loan payments"
    loanPaymentInitial: Float!
    "Remaining number of loan payments"
    loanPaymentsRemaining: Int!
    "Expected loan end date"
    loanMaturityDate: String!
    "Total interest paid to date on this loan"
    loanInterestToDate: Float!
    "Total projected interest to be paid on this loan"
    loanTotalProjectedInterest: Float!
    "The next payment date for the loan"
    loanNextPaymentDate: String!
}

"Data elements included with the investment product"
type Investmentaccountwithalldetails {
    "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution."
    accountId: String!
    "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc."
    accountType: String!
    "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider."
    accountNumberDisplay: String!
    "Indicates the currency code used by the account. May also include currency rate."
    currency: CurrencyEntity!
    description: String!
    fiAttributes: [FiAttributeEntity!]
    "Name given by the user. Used in UIs to assist in account selection"
    nickname: String!
    "Marketed product name for this account.  Used in UIs to assist in account selection"
    productName: String!
    "The status of an account."
    status: Status!
    "The line of business, such as consumer, consumer joint, small business, corporate, etc."
    lineOfBusiness: String!
    "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)"
    balanceType: BalanceType!
    "Interest Rate of Account"
    interestRate: Float!
    "The type of interest rate. FIXED or VARIABLE."
    interestRateType: InterestRateType!
    "Date of account’s interest rate"
    interestRateAsOf: String!
    "Date that last transaction occurred on account"
    lastActivityDate: String!
    "MICR Number"
    micrNumber: String!
    "Long-term persistent identity of the parent account. This is used to group accounts."
    parentAccountId: String!
    "Previous Interest Rate of Account"
    priorInterestRate: Float!
    "Account is eligible for incoming transfers"
    transferIn: Boolean!
    "Account is eligible for outgoing transfers"
    transferOut: Boolean!
    "Check writing privileges"
    allowedCheckWriting: Boolean!
    "Allowed to trade options"
    allowedOptionTrade: Boolean!
    "Unique identifier FI"
    brokerId: String!
    "Date for this calendar year for 401K account"
    calendarYearFor401K: String!
    "Name of the employer in investment 401k Plan"
    employerName: String!
    "Margin trading is allowed"
    margin: Boolean!
    "Plan number for Investment 401k plan"
    planId: String!
    "Cash balance across all sub-accounts. Should include sweep funds."
    availableCashBalance: Float!
    "As-of date of balances"
    balanceAsOf: String!
    "Balance List. Name value pair aggregate."
    balanceList: [InvestmentBalanceList!]
    "Total current value of all investments"
    currentValue: Float!
    "Daily change"
    dailyChange: Float!
    "Margin balance"
    marginBalance: Float!
    "Percentage change"
    percentageChange: Float!
    "Rollover amount"
    rolloverAmount: Float!
    "Short balance"
    shortBalance: Float!
    "Array of holdings"
    holdings: [Aninvestmentholding!]
    "Array of open orders"
    openOrders: [OpenOrderEntity!]
    "Array of contribution objects. Describes how new contributions are distributed among the available securities"
    contribution: [ContributionEntity!]
    "Array of vesting objects. Provides the past, present, and future vesting schedule and percentages"
    vesting: [VestingEntity!]
    "Array of investment loans"
    investmentLoans: [InvestmentLoanEntity!]
    "Array of Pension Source"
    pensionSource: [PensionSourceEntity!]
    "Provides equity grant information on Restricted Stock Units, Restricted Stock Awards, Stock Appreciation Right, Stock Options, Performance Awards, and Total Share Return Units"
    equityGrants: [EquityGrant!]
}

"Investment Transactions"
type InvestmentTransaction {
    "Corresponds to AccountId in Account"
    accountId: String!
    "The amount of money in the account currency.\n\nIf balanceType is `ASSET`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"+\" or not present\n  2. If `CREDIT`, sign is \"-\"\n\nIf balanceType is `LIABILITY`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"-\"\n  2. If `CREDIT`, sign is \"+\" or not present"
    amount: Float!
    "Transaction category, preferably MCC or SIC."
    category: String!
    "Akoya will ensure that this is correctly populated with one of DEBIT or CREDIT and matches the sign of the status field."
    debitCreditMemo: DebitCreditMemo!
    "The description of the transaction"
    description: String!
    "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt."
    imageIds: [String!]
    "Array of FI-specific attributes"
    fiAttributes: [FiAttributeEntity!]
    "The amount of money in the foreign currency"
    foreignAmount: Float!
    "The ISO 4217 code of the foreign currency"
    foreignCurrency: String!
    "Breakdown of the transaction details"
    lineItem: [LineItem!]
    "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs"
    links: [HATEOASLink!]
    "Secondary transaction description"
    memo: String!
    "The date and time that the transaction was posted to the account. If not provided then TransactionTimestamp can be used as PostedTimeStamp."
    postedTimestamp: String!
    "A tracking reference identifier"
    reference: String!
    "Akoya ensures that this field is populated for all transactions which are reversals, otherwise it is null. Either way it is always present.\n\nFor reverse postings, the identity of the transaction being reversed. For the correction transaction, the identity of the reversing post. For credit card posting transactions, the identity of the authorization transaction."
    referenceTransactionId: String!
    "AUTHORIZATION, MEMO, PENDING, or POSTED"
    status: Status1!
    "Transaction category detail"
    subCategory: String!
    "Long term persistent identity of the transaction (unique to account). \nTransaction IDs should: \n\n  1. be the same for pending and posted \n  2. be different for reversed transactions \n  3. `referenceTransactionId` should be present for reversed transactions'"
    transactionId: String!
    "The date and time that the transaction was added to the server backend systems.\n\nAkoya ensures that this field is populated for all transactions to which it applies, otherwise it is null. Either way it is always present."
    transactionTimestamp: String!
    "Accrued Interest."
    accruedInterest: Float!
    "Transaction commission."
    commission: Float!
    "Confirmation number of the transaction."
    confirmationNumber: String!
    "Cash value for bonds."
    faceValue: Float!
    "Fees applied to the trade."
    fees: Float!
    "Cash for fractional units (used for stock splits)."
    fractionalCash: Float!
    "For sales."
    gain: Float!
    "Type of investment income. CGLONG (capital gains-long term), CGSHORT (capital gains-short term), MISC."
    incomeType: IncomeType!
    "Source of money."
    inv401kSource: Inv401kSource1!
    "Load on the transaction."
    load: Float!
    "For 401k accounts only. This indicates the transaction was due to a loan or a loan repayment."
    loanId: String!
    "How much loan pre-payment is interest."
    loanInterest: Float!
    "How much loan pre-payment is principal."
    loanPrincipal: Float!
    "Portion of unit price that is attributed to the dealer markup."
    markup: Float!
    "Number of shares after split."
    newUnits: Float!
    "Number of shares before split."
    oldUnits: Float!
    "The date for the 401k transaction was obtained in payroll."
    payrollDate: String!
    "Indicates amount withheld due to a penalty."
    penalty: Float!
    positionType: PositionType!
    "Unit purchase price."
    price: Float!
    "Indicates this buy was made using prior years contribution. TRUE or FALSE."
    priorYearContrib: Boolean!
    "Running balance of the position."
    runningBalance: Float!
    "Unique identifier of security."
    securityId: String!
    "Security identifier type."
    securityIdType: SecurityIdType3!
    securityType: SecurityType!
    "Number of shares (with decimals). Negative numbers indicate securities are being removed from the account."
    shares: Float!
    "Split ratio denominator."
    splitRatioDenominator: Float!
    "Split ratio numerator."
    splitRatioNumerator: Float!
    "State tax withholding."
    stateWithholding: Float!
    "From which account money came in."
    subAccountFund: SubAccountFund!
    "Sub-account security type."
    subAccountSec: SubAccountSec!
    "Ticker symbol."
    symbol: String!
    "Taxes on the trade."
    taxes: Float!
    "Tax-exempt transaction TRUE or FALSE."
    taxExempt: Boolean!
    "Reason for this transaction; CALL (the debt was called), SELL (the debt was sold), MATURITY (the debt reached maturity)"
    transactionReason: TransactionReason!
    "InvestmentTransaction Type"
    transactionType: TransactionType2!
    "Transfer direction."
    transferAction: TransferAction!
    "Price per commonly-quoted unit. Does not include markup/markdown, unitprice. Share price for stocks, mutual funds, and others. Percentage of par for bonds. Per share (not contract) for options."
    unitPrice: Float!
    "For security-based actions other than stock splits, quantity. Shares for stocks, mutual funds, and others. Face value for bonds. Contracts for options."
    units: Float!
    unitType: UnitType1!
    "Federal tax withholding."
    withholding: Float!
}

type LineItem {
    "The amount of money attributable to this line item"
    amount: Float!
    "Check number"
    checkNumber: Float!
    "The description of the line item"
    description: String!
    "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt"
    imageIds: [String!]
    "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs"
    links: [HATEOASLink!]
    "Secondary item description"
    memo: String!
    "A reference number"
    reference: String!
}

"Loan Account"
type LoanAccount {
    "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution."
    accountId: String!
    "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc."
    accountType: String!
    "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider."
    accountNumberDisplay: String!
    "Indicates the currency code used by the account. May also include currency rate."
    currency: CurrencyEntity!
    description: String!
    fiAttributes: [FiAttributeEntity!]
    "Name given by the user. Used in UIs to assist in account selection"
    nickname: String!
    "Marketed product name for this account.  Used in UIs to assist in account selection"
    productName: String!
    "The status of an account."
    status: Status!
    "The line of business, such as consumer, consumer joint, small business, corporate, etc."
    lineOfBusiness: String!
    "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)"
    balanceType: BalanceType!
    "Interest Rate of Account"
    interestRate: Float!
    "The type of interest rate. FIXED or VARIABLE."
    interestRateType: InterestRateType!
    "Date of account’s interest rate"
    interestRateAsOf: String!
    "Date that last transaction occurred on account"
    lastActivityDate: String!
    "MICR Number"
    micrNumber: String!
    "Long-term persistent identity of the parent account. This is used to group accounts."
    parentAccountId: String!
    "Previous Interest Rate of Account"
    priorInterestRate: Float!
    "Account is eligible for incoming transfers"
    transferIn: Boolean!
    "Account is eligible for outgoing transfers"
    transferOut: Boolean!
    compoundingPeriod: CompoundingPeriod!
    "Term of loan in months"
    loanTerm: Int!
    "Maturity date"
    maturityDate: String!
    "Loan origination date"
    originatingDate: String!
    paymentFrequency: PaymentFrequency!
    "Total number of payments"
    totalNumberOfPayments: Int!
}

"Data elements included with balances specific to loan accounts"
type Loanbalances {
    "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution."
    accountId: String!
    "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc."
    accountType: String!
    "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider."
    accountNumberDisplay: String!
    "Indicates the currency code used by the account. May also include currency rate."
    currency: CurrencyEntity!
    description: String!
    fiAttributes: [FiAttributeEntity!]
    "Name given by the user. Used in UIs to assist in account selection"
    nickname: String!
    "Marketed product name for this account.  Used in UIs to assist in account selection"
    productName: String!
    "The status of an account."
    status: Status!
    "The line of business, such as consumer, consumer joint, small business, corporate, etc."
    lineOfBusiness: String!
    "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)"
    balanceType: BalanceType!
    "Interest Rate of Account"
    interestRate: Float!
    "The type of interest rate. FIXED or VARIABLE."
    interestRateType: InterestRateType!
    "Date of account’s interest rate"
    interestRateAsOf: String!
    "Date that last transaction occurred on account"
    lastActivityDate: String!
    "MICR Number"
    micrNumber: String!
    "Long-term persistent identity of the parent account. This is used to group accounts."
    parentAccountId: String!
    "Previous Interest Rate of Account"
    priorInterestRate: Float!
    "Account is eligible for incoming transfers"
    transferIn: Boolean!
    "Account is eligible for outgoing transfers"
    transferOut: Boolean!
    compoundingPeriod: CompoundingPeriod!
    "Term of loan in months"
    loanTerm: Int!
    "Maturity date"
    maturityDate: String!
    "Loan origination date"
    originatingDate: String!
    paymentFrequency: PaymentFrequency!
    "Total number of payments"
    totalNumberOfPayments: Int!
    "As-of date of balances"
    balanceAsOf: String!
    "Escrow balance of loan"
    escrowBalance: Float!
    "Interest paid year to date"
    interestPaidYearToDate: Float!
    "Last payment amount"
    lastPaymentAmount: Float!
    "Last payment date"
    lastPaymentDate: String!
    "Amount of next payment"
    nextPaymentAmount: Float!
    "Date of next payment"
    nextPaymentDate: String!
    "Original principal of loan"
    originalPrincipal: Float!
    "Payoff amount"
    payOffAmount: Float!
    "Principal balance of loan"
    principalBalance: Float!
}

"Loan Transaction"
type LoanTransaction {
    "Corresponds to AccountId in Account"
    accountId: String!
    "The amount of money in the account currency.\n\nIf balanceType is `ASSET`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"+\" or not present\n  2. If `CREDIT`, sign is \"-\"\n\nIf balanceType is `LIABILITY`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"-\"\n  2. If `CREDIT`, sign is \"+\" or not present"
    amount: Float!
    "Transaction category, preferably MCC or SIC."
    category: String!
    "Akoya will ensure that this is correctly populated with one of DEBIT or CREDIT and matches the sign of the status field."
    debitCreditMemo: DebitCreditMemo!
    "The description of the transaction"
    description: String!
    "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt."
    imageIds: [String!]
    "Array of FI-specific attributes"
    fiAttributes: [FiAttributeEntity!]
    "The amount of money in the foreign currency"
    foreignAmount: Float!
    "The ISO 4217 code of the foreign currency"
    foreignCurrency: String!
    "Breakdown of the transaction details"
    lineItem: [LineItem!]
    "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs"
    links: [HATEOASLink!]
    "Secondary transaction description"
    memo: String!
    "The date and time that the transaction was posted to the account. If not provided then TransactionTimestamp can be used as PostedTimeStamp."
    postedTimestamp: String!
    "A tracking reference identifier"
    reference: String!
    "Akoya ensures that this field is populated for all transactions which are reversals, otherwise it is null. Either way it is always present.\n\nFor reverse postings, the identity of the transaction being reversed. For the correction transaction, the identity of the reversing post. For credit card posting transactions, the identity of the authorization transaction."
    referenceTransactionId: String!
    "AUTHORIZATION, MEMO, PENDING, or POSTED"
    status: Status1!
    "Transaction category detail"
    subCategory: String!
    "Long term persistent identity of the transaction (unique to account). \nTransaction IDs should: \n\n  1. be the same for pending and posted \n  2. be different for reversed transactions \n  3. `referenceTransactionId` should be present for reversed transactions'"
    transactionId: String!
    "The date and time that the transaction was added to the server backend systems.\n\nAkoya ensures that this field is populated for all transactions to which it applies, otherwise it is null. Either way it is always present."
    transactionTimestamp: String!
    "Payment details for some transactions"
    paymentDetails: PaymentDetails!
    "LoanTransaction Type"
    transactionType: TransactionType3!
}

"Income in a locality and its tax withholding"
type LocalTaxWithholding {
    "Amount of local income tax withheld"
    taxWithheld: Float!
    "Locality name"
    localityName: String!
    "Income amount for local tax purposes"
    income: Float!
}

"Data elements included with balances specific to line of credit accounts"
type Lineofcreditbalances {
    "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution."
    accountId: String!
    "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc."
    accountType: String!
    "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider."
    accountNumberDisplay: String!
    "Indicates the currency code used by the account. May also include currency rate."
    currency: CurrencyEntity!
    description: String!
    fiAttributes: [FiAttributeEntity!]
    "Name given by the user. Used in UIs to assist in account selection"
    nickname: String!
    "Marketed product name for this account.  Used in UIs to assist in account selection"
    productName: String!
    "The status of an account."
    status: Status!
    "The line of business, such as consumer, consumer joint, small business, corporate, etc."
    lineOfBusiness: String!
    "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)"
    balanceType: BalanceType!
    "Interest Rate of Account"
    interestRate: Float!
    "The type of interest rate. FIXED or VARIABLE."
    interestRateType: InterestRateType!
    "Date of account’s interest rate"
    interestRateAsOf: String!
    "Date that last transaction occurred on account"
    lastActivityDate: String!
    "MICR Number"
    micrNumber: String!
    "Long-term persistent identity of the parent account. This is used to group accounts."
    parentAccountId: String!
    "Previous Interest Rate of Account"
    priorInterestRate: Float!
    "Account is eligible for incoming transfers"
    transferIn: Boolean!
    "Account is eligible for outgoing transfers"
    transferOut: Boolean!
    "As-of date of balances"
    balanceAsOf: String!
    "Advances APR"
    advancesApr: Float!
    "Available cash"
    availableCash: Float!
    "Available credit"
    availableCredit: Float!
    "Cash advance limit"
    cashAdvanceLimit: Float!
    "Credit limit"
    creditLine: Float!
    "Current balance LOC"
    currentBalance: Float!
    "Current rewards balance"
    currentRewardsBalance: Float!
    "Finance charges"
    financeCharges: Float!
    "Last payment amount"
    lastPaymentAmount: Float!
    "Last payment date"
    lastPaymentDate: String!
    "Last Statement Balance"
    lastStmtBalance: Float!
    "Last Statement Date"
    lastStmtDate: String!
    "Minimum payment amount"
    minimumPaymentAmount: Float!
    "Amount of next payment"
    nextPaymentAmount: Float!
    "Due date of next payment"
    nextPaymentDate: String!
    "Past Due Amount"
    pastDueAmount: Float!
    "Points accrued"
    pointsAccrued: Float!
    "Principal balance"
    principalBalance: Float!
    "Points redeemed"
    pointsRedeemed: Float!
    "Purchases APR"
    purchasesApr: Float!
}

"A line of credit transaction of type"
type LocTransaction {
    "Corresponds to AccountId in Account"
    accountId: String!
    "The amount of money in the account currency.\n\nIf balanceType is `ASSET`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"+\" or not present\n  2. If `CREDIT`, sign is \"-\"\n\nIf balanceType is `LIABILITY`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"-\"\n  2. If `CREDIT`, sign is \"+\" or not present"
    amount: Float!
    "Transaction category, preferably MCC or SIC."
    category: String!
    "Akoya will ensure that this is correctly populated with one of DEBIT or CREDIT and matches the sign of the status field."
    debitCreditMemo: DebitCreditMemo!
    "The description of the transaction"
    description: String!
    "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt."
    imageIds: [String!]
    "Array of FI-specific attributes"
    fiAttributes: [FiAttributeEntity!]
    "The amount of money in the foreign currency"
    foreignAmount: Float!
    "The ISO 4217 code of the foreign currency"
    foreignCurrency: String!
    "Breakdown of the transaction details"
    lineItem: [LineItem!]
    "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs"
    links: [HATEOASLink!]
    "Secondary transaction description"
    memo: String!
    "The date and time that the transaction was posted to the account. If not provided then TransactionTimestamp can be used as PostedTimeStamp."
    postedTimestamp: String!
    "A tracking reference identifier"
    reference: String!
    "Akoya ensures that this field is populated for all transactions which are reversals, otherwise it is null. Either way it is always present.\n\nFor reverse postings, the identity of the transaction being reversed. For the correction transaction, the identity of the reversing post. For credit card posting transactions, the identity of the authorization transaction."
    referenceTransactionId: String!
    "AUTHORIZATION, MEMO, PENDING, or POSTED"
    status: Status1!
    "Transaction category detail"
    subCategory: String!
    "Long term persistent identity of the transaction (unique to account). \nTransaction IDs should: \n\n  1. be the same for pending and posted \n  2. be different for reversed transactions \n  3. `referenceTransactionId` should be present for reversed transactions'"
    transactionId: String!
    "The date and time that the transaction was added to the server backend systems.\n\nAkoya ensures that this field is populated for all transactions to which it applies, otherwise it is null. Either way it is always present."
    transactionTimestamp: String!
    "Check number"
    checkNumber: Int!
    "Payment details for some transactions"
    paymentDetails: PaymentDetails!
    "LocTransaction Type"
    transactionType: TransactionType4!
}

"Month and amount pair used on IRS Form 1099-K, etc."
type MonthandAmount {
    "Month"
    month: MonthAbbreviation1!
    "Amount"
    amount: Float!
}

"Information about the mutual fund security specific to the type of security"
type MutualFundSecurityEntity {
    "Mutual fund type"
    mutualFundType: MutualFundType!
    "Units in the FI's street name, positive quantity"
    unitsStreet: Float!
    "Units in user's name directly, positive  quantity"
    unitsUser: Float!
    "Reinvest dividends"
    reinvestDividends: Boolean!
    "Reinvest capital gains"
    reinvestCapitalGains: Boolean!
    "Current yield reported as portion of the fund's assets"
    yield: Float!
    "As-of date for yield value"
    yieldAsOfDate: String!
}

"Individual or business name with address"
type NameandAddress {
    "Address line 1"
    line1: String!
    "Address line 2"
    line2: String!
    "Address line 3"
    line3: String!
    "City"
    city: String!
    "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'"
    region: String!
    "Postal code"
    postalCode: String!
    "Country code"
    country: ISO3166CountryCode2!
    "Name line 1"
    name1: String!
    "Name line 2"
    name2: String!
}

"Contact phone number with name and address"
type NameAddressandPhone {
    "Address line 1"
    line1: String!
    "Address line 2"
    line2: String!
    "Address line 3"
    line3: String!
    "City"
    city: String!
    "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'"
    region: String!
    "Postal code"
    postalCode: String!
    "Country code"
    country: ISO3166CountryCode2!
    "Name line 1"
    name1: String!
    "Name line 2"
    name2: String!
    "Phone number"
    phone: TelephoneNumberPlusExtension1!
}

"Health insurance coverage offer for part II of IRS Form 1095-C"
type OfferofHealthInsuranceCoverage {
    "Offer of Coverage (enter required code)"
    coverageCode: String!
    "Employee required contribution"
    requiredContribution: Float!
    "Section 4980H Safe Harbor and Other Relief (enter code)"
    section4980HCode: String!
    "Box 17, ZIP Code"
    postalCode: String!
    "Month"
    month: CoverageMonth2!
}

"Information on an open order."
type OpenOrderEntity {
    "Long term persistent identity of the order. Id for this order transaction."
    orderId: String!
    "Unique identifier of the security."
    securityId: String!
    "Security identifier type"
    securityIdType: SecurityIdType!
    "Market symbol"
    symbol: String!
    "Description of order"
    description: String!
    "Number of units (shares, bonds, etc.)"
    units: Float!
    "Type of order."
    orderType: OrderType!
    "Order date"
    orderDate: String!
    "Unit price"
    unitPrice: Float!
    "Type of unit."
    unitType: UnitType!
    "This order is good for DAY, GOODTILLCANCEL, IMMEDIATE"
    orderDuration: OrderDuration!
    subAccount: SubAccount!
    "Limit Price"
    limitPrice: Float!
    "Stop price"
    stopPrice: Float!
    "For 401(k) accounts, source of money for this order. Default if not present is OTHERNONVEST."
    inv401kSource: Inv401kSource!
}

"Information about the option security specific to the type of security"
type OptionSecurityEntity {
    "How the option is secured"
    secured: Secured!
    optionType: OptionType!
    "Strike price / Unit price"
    strikePrice: Float!
    "Expiration date of option"
    expireDate: String!
    "Shares per contract"
    sharesPerContract: Float!
}

"Information about the security specific to the type of security"
type OtherSecurityEntity {
    "Description of Other Security"
    typeDescription: String!
}

type PaginatedArray {
    links: Links!
}

"Payment details for some transactions"
type PaymentDetails {
    "The amount of payment applied to escrow"
    escrowAmount: Float!
    "The amount of payment applied to fees"
    feesAmount: Float!
    "The amount of payment applied to life/health/accident insurance on the loan"
    insuranceAmount: Float!
    "The amount of payment applied to interest"
    interestAmount: Float!
    "The amount of payment applied to PMI"
    pmiAmount: Float!
    "The amount of payment applied to principal"
    principalAmount: Float!
}

"Information about a pension source."
type PensionSourceEntity {
    "Name of the Source"
    displayName: String!
    "Benefit Amount"
    amount: Float!
    "Form of payment"
    paymentOption: String!
    "Date benefit was calculated"
    asOfDate: String!
    frequency: Frequency!
    "Assumed retirement date ‐ As of date amount is payable"
    startDate: String!
}

"Rental Income Statement for IRS Form 1040 Schedule E"
type RentalIncomeStatement {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box 1a, Physical address of property (street, city, state, ZIP code)"
    propertyAddress: Address3!
    "Box 3, Rents received"
    rents: Float!
    "Box 5, Advertising"
    advertising: Float!
    "Box 6, Auto and travel"
    auto: Float!
    "Box 7, Cleaning and maintenance"
    cleaning: Float!
    "Box 8, Commissions"
    commissions: Float!
    "Box 9, Insurance"
    insurance: Float!
    "Box 10, Legal and other professional fees"
    legal: Float!
    "Box 11, Management fees"
    managementFees: Float!
    "Box 12, Mortgage interest paid to banks, etc."
    mortgageInterest: Float!
    "Box 13, Other interest"
    otherInterest: Float!
    "Box 14, Repairs"
    repairs: Float!
    "Box 15, Supplies"
    supplies: Float!
    "Box 16, Taxes"
    taxes: Float!
    "Box 17, Utilities"
    utilities: Float!
    "Box 18, Depreciation"
    depreciationExpense: Float!
    "Box 19, Other expenses"
    otherExpenses: [DescriptionandAmount!]
    "Capital expenditures, for use in calculating Depreciation"
    capitalExpenditures: [DateandAmount!]
}

"Royalty Income Statement for IRS Form 1040 Schedule E"
type RoyaltyIncomeStatement {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box 1a, Physical address of property (street, city, state, ZIP code)"
    propertyAddress: Address3!
    "Box 3, Royalties received"
    royalties: Float!
    "Box 5, Advertising"
    advertising: Float!
    "Box 6, Auto and travel"
    auto: Float!
    "Box 7, Cleaning and maintenance"
    cleaning: Float!
    "Box 8, Commissions"
    commissions: Float!
    "Box 9, Insurance"
    insurance: Float!
    "Box 10, Legal and other professional fees"
    legal: Float!
    "Box 11, Management fees"
    managementFees: Float!
    "Box 12, Mortgage interest paid to banks, etc."
    mortgageInterest: Float!
    "Box 13, Other interest"
    otherInterest: Float!
    "Box 14, Repairs"
    repairs: Float!
    "Box 15, Supplies"
    supplies: Float!
    "Box 16, Taxes"
    taxes: Float!
    "Box 17, Utilities"
    utilities: Float!
    "Box 18, Depletion"
    depletionExpense: Float!
    "Box 19, Other expenses"
    otherExpenses: [DescriptionandAmount!]
    "Capital expenditures, for use in calculating Depreciation"
    capitalExpenditures: [DateandAmount!]
}

"Tax information for a single security transaction"
type SecurityDetailIRSForm1099B {
    "Applicable checkbox on Form 8949"
    checkboxOnForm8949: String!
    "Security name"
    securityName: String!
    "Number of shares"
    numberOfShares: Float!
    "Box 1a, Description of property"
    saleDescription: String!
    "Box 1b, Date acquired"
    dateAcquired: String!
    "Box 1b, Date acquired Various"
    variousDatesAcquired: Boolean!
    "Box 1c, Date sold or disposed"
    dateOfSale: String!
    "Box 1d, Proceeds (not price per share)"
    salesPrice: Float!
    "Box 1f, Accrued market discount"
    accruedMarketDiscount: Float!
    "Other adjustments (code and amount)"
    adjustmentCodes: [CodeandAmount!]
    "Box 1e, Cost or other basis"
    costBasis: Float!
    "Corrected cost basis. May be supplied in lieu of adjustmentCode code B. If both adjustmentCodes and correctedCostBasis are supplied, costBasis plus adjustmentCode B should equal correctedCostBasis"
    correctedCostBasis: Float!
    "Box 1g, Wash sale loss disallowed"
    washSaleLossDisallowed: Float!
    "Box 2, LONG or SHORT"
    longOrShort: SaleTermType2!
    "Box 2, Ordinary"
    ordinary: Boolean!
    "Box 3, Collectibles"
    collectible: Boolean!
    "Box 3, Qualified Opportunity Fund (QOF)"
    qof: Boolean!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, Noncovered security"
    noncoveredSecurity: Boolean!
    "Box 6, Reported to IRS: GROSS or NET"
    grossOrNet: SaleProceedsType1!
    "Box 7, Loss not allowed based on proceeds"
    lossNotAllowed: Boolean!
    "Box 12, Basis reported to IRS"
    basisReported: Boolean!
    "Boxes 14-16, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
    "CUSIP number"
    cusip: String!
    "Foreign account tax compliance"
    foreignAccountTaxCompliance: Boolean!
    "To indicate gain or loss resulted from option expiration. If salesPrice (1d, proceeds) is zero, use PURCHASED. If costBasis (1e) is zero, use GRANTED"
    expiredOption: ExpiredOptionType1!
    "Type of investment sale"
    investmentSaleType: InvestmentSaleType!
}

"Income in a state and/or locality and its or their tax withholding"
type StateandLocalTaxWithholding {
    "State two-digit code"
    stateCode: StateCode2!
    "Amount of state income tax withheld"
    state: StateTaxWithholding2!
    "Amount of local income tax withheld, if any"
    local: LocalTaxWithholding1!
}

"Income in a state and its tax withholding"
type StateTaxWithholding {
    "Amount of state income tax withheld"
    taxWithheld: Float!
    "Filer's state tax id"
    taxId: String!
    "Income amount for state tax purposes"
    income: Float!
}

"Information about the stock security specific to the type of security"
type StockSecurityEntity {
    "Units in the FI's street name, positive quantity"
    unitsStreet: Float!
    "Units in user's name directly, positive  quantity"
    unitsUser: Float!
    "Reinvest dividends"
    reinvestDividends: Boolean!
    stockType: StockType!
    "Current yield"
    yield: Float!
    "Yield as-of date"
    yieldAsOfDate: String!
}

"Information about the sweep security specific to the type of security"
type SweepSecurityEntity {
    "Balance of funds in account"
    currentBalance: Float!
    "Balance of funds available for use"
    availableBalance: Float!
    "As-of date of balances"
    balanceAsOf: String!
    "Whether or not checks can be written on the account"
    checks: Boolean!
}

type TaxlotsResponse {
    "Corresponds to AccountId in Account"
    accountId: String!
    holding: Holding!
}

"Tax data container for API requests and responses"
type TaxData {
    "Business Income Statement for IRS Form 1040 Schedule C"
    businessIncomeStatement: BusinessIncomeStatement!
    "Cryptocurrency Tax Statement list"
    cryptocurrencyTaxStatement: CryptocurrencyTaxStatementlist1!
    "Farm Income Statement for IRS Form 1040 Schedule F"
    farmIncomeStatement: FarmIncomeStatement!
    "Farm Rental Income Statement for IRS Form 4835"
    farmRentalIncomeStatement: FarmRentalIncomeStatement!
    "Rental Income Statement for IRS Form 1040 Schedule E"
    rentalIncomeStatement: RentalIncomeStatement!
    "Royalty Income Statement for IRS Form 1040 Schedule E"
    royaltyIncomeStatement: RoyaltyIncomeStatement!
    "Beneficiary's Share of Income, Deductions, Credits, etc."
    tax1041K1: Form1041K12!
    "Foreign Person's U.S. Source Income Subject to Withholding"
    tax1042S: Form1042S2!
    "Partner's Share of Income, Deductions, Credits, etc."
    tax1065K1: Form1065K12!
    "Health Insurance Marketplace Statement"
    tax1095A: Form1095A2!
    "Health Coverage"
    tax1095B: Form1095B2!
    "Employer-Provided Health Insurance Offer and Coverage"
    tax1095C: Form1095C2!
    "Bond Tax Credit"
    tax1097Btc: Form1097BTC2!
    "Mortgage Interest Statement"
    tax1098: Form10982!
    "Contributions of Motor Vehicles, Boats, and Airplanes"
    tax1098C: Form1098C2!
    "Student Loan Interest Statement"
    tax1098E: Form1098E2!
    "Mortgage Assistance Payments"
    tax1098Ma: Form1098MA2!
    "Qualifying Longevity Annuity Contract Information"
    tax1098Q: Form1098Q2!
    "Tuition Statement"
    tax1098T: Form1098T2!
    "Acquisition or Abandonment of Secured Property"
    tax1099A: Form1099A2!
    "Proceeds From Broker and Barter Exchange Transactions"
    tax1099B: Form1099B2!
    "Cancellation of Debt"
    tax1099C: Form1099C2!
    "Changes in Corporate Control and Capital Structure"
    tax1099Cap: Form1099CAP2!
    "Consolidated Statement for combined IRS Form 1099s"
    tax1099ConsolidatedStatement: Form1099ConsolidatedStatement2!
    "Dividends and Distributions"
    tax1099Div: Form1099DIV2!
    "Certain Government Payments"
    tax1099G: Form1099G2!
    "Health Coverage Tax Credit (HCTC) Advance Payments"
    tax1099H: Form1099H2!
    "Interest Income"
    tax1099Int: Form1099INT2!
    "Merchant Card and Third-Party Network Payments"
    tax1099K: Form1099K2!
    "Reportable Life Insurance Sale"
    tax1099Ls: Form1099LS2!
    "Long-Term Care and Accelerated Death Benefits"
    tax1099Ltc: Form1099LTC2!
    "Miscellaneous Income"
    tax1099Misc: Form1099MISC2!
    "Nonemployee Compensation"
    tax1099Nec: Form1099NEC2!
    "Original Issue Discount"
    tax1099Oid: Form1099OID2!
    "Taxable Distributions Received From Cooperatives"
    tax1099Patr: Form1099PATR2!
    "Payments From Qualified Education Programs"
    tax1099Q: Form1099Q2!
    "Distributions From ABLE Accounts"
    tax1099Qa: Form1099QA2!
    "Distributions from Pensions, Annuities, Retirement or Profit-Sharing Plans, IRAs, Insurance Contracts, etc."
    tax1099R: Form1099R2!
    "Proceeds From Real Estate Transactions"
    tax1099S: Form1099S2!
    "Distributions From an HSA, Archer MSA, or Medicare Advantage MSA"
    tax1099Sa: Form1099SA2!
    "Seller's Investment in Life Insurance Contract"
    tax1099Sb: Form1099SB2!
    "Shareholder's Share of Income, Deductions, Credits, etc."
    tax1120SK1: Form1120SK12!
    "Notice to Shareholder of Undistributed Long-Term Capital Gains"
    tax2439: Form24392!
    "Exercise of an Incentive Stock Option Under Section 422(b)"
    tax3921: Form39212!
    "Transfer of Stock Acquired Through an Employee Stock Purchase Plan under Section 423(c)"
    tax3922: Form39222!
    "Split-Interest Trust Beneficiary's schedule K-1"
    tax5227K1: Form1041K1!
    "IRA Contribution Information"
    tax5498: Form54982!
    "Coverdell ESA Contribution Information"
    tax5498Esa: Form5498ESA2!
    "ABLE Account Contribution Information"
    tax5498Qa: Form5498QA2!
    "HSA, Archer MSA, or Medicare Advantage MSA Information"
    tax5498Sa: Form5498SA2!
    "Wage and Tax Statement"
    taxW2: FormW24!
    "IRS form W-2c, Corrected Wage and Tax Statement"
    taxW2C: FormW2c2!
    "Certain Gambling Winnings"
    taxW2G: FormW2G2!
    "Tax refund direct deposit information"
    taxRefundDirectDeposit: TaxRefundDirectDeposit2!
}

"Transaction elements"
type Transaction {
    "Corresponds to AccountId in Account"
    accountId: String!
    "The amount of money in the account currency.\n\nIf balanceType is `ASSET`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"+\" or not present\n  2. If `CREDIT`, sign is \"-\"\n\nIf balanceType is `LIABILITY`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"-\"\n  2. If `CREDIT`, sign is \"+\" or not present"
    amount: Float!
    "Transaction category, preferably MCC or SIC."
    category: String!
    "Akoya will ensure that this is correctly populated with one of DEBIT or CREDIT and matches the sign of the status field."
    debitCreditMemo: DebitCreditMemo!
    "The description of the transaction"
    description: String!
    "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt."
    imageIds: [String!]
    "Array of FI-specific attributes"
    fiAttributes: [FiAttributeEntity!]
    "The amount of money in the foreign currency"
    foreignAmount: Float!
    "The ISO 4217 code of the foreign currency"
    foreignCurrency: String!
    "Breakdown of the transaction details"
    lineItem: [LineItem!]
    "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs"
    links: [HATEOASLink!]
    "Secondary transaction description"
    memo: String!
    "The date and time that the transaction was posted to the account. If not provided then TransactionTimestamp can be used as PostedTimeStamp."
    postedTimestamp: String!
    "A tracking reference identifier"
    reference: String!
    "Akoya ensures that this field is populated for all transactions which are reversals, otherwise it is null. Either way it is always present.\n\nFor reverse postings, the identity of the transaction being reversed. For the correction transaction, the identity of the reversing post. For credit card posting transactions, the identity of the authorization transaction."
    referenceTransactionId: String!
    "AUTHORIZATION, MEMO, PENDING, or POSTED"
    status: Status1!
    "Transaction category detail"
    subCategory: String!
    "Long term persistent identity of the transaction (unique to account). \nTransaction IDs should: \n\n  1. be the same for pending and posted \n  2. be different for reversed transactions \n  3. `referenceTransactionId` should be present for reversed transactions'"
    transactionId: String!
    "The date and time that the transaction was added to the server backend systems.\n\nAkoya ensures that this field is populated for all transactions to which it applies, otherwise it is null. Either way it is always present."
    transactionTimestamp: String!
}

"Optionally paginated array of transactions"
type TransactionsEntity {
    links: Links!
    "An array of transactions with entity types dependent on the account type (deposit, investment, loan, or line of credit)"
    transactions: [String!]
}

"Base entity for all IRS Tax forms"
type Tax {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
}

"Beneficiary's Share of Income, Deductions, Credits, etc., from Estate or Trust (boxes A-B as issuer) and Fiduciary (box C) to Beneficiary (boxes F-G as recipient)"
type Form1041K1 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Final K-1"
    finalK1: Boolean!
    "Amended K-1"
    amendedK1: Boolean!
    "Fiscal year begin date"
    fiscalYearBegin: String!
    "Fiscal year end date"
    fiscalYearEnd: String!
    "Box D, Check if Form 1041-T was filed"
    form1041T: Boolean!
    "Box D, and enter the date it was filed"
    date1041T: String!
    "Box E, Check if this is the final Form 1041 for the estate or trust"
    final1041: Boolean!
    "Box H, Domestic beneficiary"
    domestic: Boolean!
    "Box H, Foreign beneficiary"
    foreign: Boolean!
    "Box 1, Interest income"
    interestIncome: Float!
    "Box 2a, Ordinary dividends"
    ordinaryDividends: Float!
    "Box 2b, Qualified dividends"
    qualifiedDividends: Float!
    "Box 3, Net short-term capital gain"
    netShortTermGain: Float!
    "Box 4a, Net long-term capital gain"
    netLongTermGain: Float!
    "Box 4b, 28% rate gain"
    gain28Rate: Float!
    "Box 4c, Unrecaptured section 1250 gain"
    unrecaptured1250Gain: Float!
    "Box 5, Other portfolio and nonbusiness income"
    otherPortfolioIncome: Float!
    "Box 6, Ordinary business income"
    ordinaryBusinessIncome: Float!
    "Box 7, Net rental real estate income"
    netRentalRealEstateIncome: Float!
    "Box 8, Other rental income"
    otherRentalIncome: Float!
    "Box 9, Directly apportioned deductions"
    directlyApportionedDeductions: [CodeandAmount!]
    "Box 10, Estate tax deduction"
    estateTaxDeduction: Float!
    "Box 11, Final year deductions"
    finalYearDeductions: [CodeandAmount!]
    "Box C, Fiduciary's name and address"
    fiduciary: TaxParty2!
    "Box 12, Alternative minimum tax adjustment"
    amtAdjustments: [CodeandAmount!]
    "Box 13, Credits and credit recapture"
    credits: [CodeandAmount!]
    "Box 14, Other information"
    otherInfo: [CodeandAmount!]
}

"Foreign Person's U.S. Source Income Subject to Withholding, from WithholdingAgent (boxes 12a-i) to Recipient (boxes 13a-j, 13l as form1042Recipient)"
type Form1042S {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Unique form identifier"
    formId: String!
    "Amended"
    amended: Boolean!
    "Amendment number"
    amendmentNumber: Int!
    "Box 1, Income code"
    incomeTypeCode: String!
    "Box 2, Gross income"
    grossIncome: Float!
    "Box 3, Chapter indicator"
    chapterIndicator: String!
    "Box 3a, Exemption code"
    ch3ExemptionCode: String!
    "Box 3b, Tax rate"
    ch3TaxRate: Float!
    "Box 4a, Exemption code"
    ch4ExemptionCode: String!
    "Box 4b, Tax rate"
    ch4TaxRate: Float!
    "Box 5, Withholding allowance"
    withholdingAllowance: Float!
    "Box 6, Net income"
    netIncome: Float!
    "Box 7a, Federal tax withheld"
    federalTaxWithheld: Float!
    "Box 7b, Check if federal tax withheld was not deposited with the IRS because escrow procedures were applied"
    escrowProceduresApplied: Boolean!
    "Box 7c, Check if withholding occurred in subsequent year with respect to a partnership interest"
    subsequentYear: Boolean!
    "Box 8, Tax withheld by other agents"
    otherAgentsTaxWithheld: Float!
    "Box 9, Overwithheld tax repaid to recipient pursuant to adjustment procedures"
    recipientRepaidAmount: Float!
    "Box 10, Total withholding credit"
    totalTaxWithholdingCredit: Float!
    "Box 11, Tax paid by withholding agent (amounts not withheld)"
    withholdingAgentTaxPaid: Float!
    "Boxes 12a-i, Withholding agent"
    withholdingAgent: Form1042SAgent1!
    "Boxes 13a-j, 13l, Recipient for Form 1042-S"
    form1042Recipient: Form1042SRecipient1!
    "Box 13k, Recipient account number"
    accountNumber: String!
    "Boxes 14a-b, Primary Withholding Agent"
    primary: Form1042SAgent2!
    "Box 15, Check if pro-rata basis reporting"
    prorataBasisReporting: Boolean!
    "Boxes 15a-i, Intermediary or flow thru entity"
    intermediary: Form1042SAgent3!
    "Boxes 16a-e, Payer"
    payer: Form1042SAgent4!
    "Box 17, State and Local tax withholding"
    stateAndLocal: StateandLocalTaxWithholding1!
}

"Partner's Share of Income, Deductions, Credits, etc., from Partnership (boxes A, D as issuer) to Partner (boxes E-F as recipient)"
type Form1065K1 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Fiscal year begin date"
    fiscalYearBegin: String!
    "Fiscal year end data"
    fiscalYearEnd: String!
    "Final K-1"
    finalK1: Boolean!
    "Amended K-1"
    amendedK1: Boolean!
    "Box C, IRS Center where partnership filed return"
    irsCenter: String!
    "Box D, Check if this is a publicly traded partnership (PTP)"
    publiclyTraded: Boolean!
    "Box G, General partner or LLC member-manager"
    generalPartner: Boolean!
    "Box G, Limited partner or other LLC member"
    limitedPartner: Boolean!
    "Box H1, Domestic partner"
    domestic: Boolean!
    "Box H1, Foreign partner"
    foreign: Boolean!
    "Box H2, Check if the partner is a disregarded entity (DE), and enter the partner's TIN and Name"
    disregardedEntity: Boolean!
    "Box H2, Disregarded entity partner's TIN"
    disregardedEntityTin: String!
    "Box H2, Disregarded entity partner's Name"
    disregardedEntityName: String!
    "Box I1, What type of entity is this partner?"
    entityType: String!
    "Box I2, If this partner is a retirement plan (IRA/SEP/Keogh/etc.), check here"
    retirementPlan: Boolean!
    "Box J, Partner's share of profit - beginning"
    profitShareBegin: Float!
    "Box J, Partner's share of profit - ending"
    profitShareEnd: Float!
    "Box J, Partner's share of loss - beginning"
    lossShareBegin: Float!
    "Box J, Partner's share of loss - ending"
    lossShareEnd: Float!
    "Box J, Partner's share of capital - beginning"
    capitalShareBegin: Float!
    "Box J, Partner's share of capital - ending"
    capitalShareEnd: Float!
    "Box J, Check if decrease is due to sale or exchange of partnership interest. Deprecated and no longer used beginning tax year 2023. Use `decreaseDueToSale` and `decreaseDueToExchange` instead"
    decreaseDueToSaleOrExchange: Boolean!
    "Box J, Check if decrease is due to sale of partnership interest"
    decreaseDueToSale: Boolean!
    "Box J, Check if decrease is due to exchange of partnership interest"
    decreaseDueToExchange: Boolean!
    "Box K1, Partner's share of liabilities - beginning - nonrecourse"
    nonrecourseLiabilityShareBegin: Float!
    "Box K1, Partner's share of liabilities - ending - nonrecourse"
    nonrecourseLiabilityShareEnd: Float!
    "Box K1, Partner's share of liabilities - beginning - qualified nonrecourse financing"
    qualifiedLiabilityShareBegin: Float!
    "Box K1, Partner's share of liabilities - ending - qualified nonrecourse financing"
    qualifiedLiabilityShareEnd: Float!
    "Box K1, Partner's share of liabilities - beginning - recourse"
    recourseLiabilityShareBegin: Float!
    "Box K1, Partner's share of liabilities - ending - recourse"
    recourseLiabilityShareEnd: Float!
    "Box K2, Check this box if item K1 includes liability amounts from lower tier partnerships"
    includesLowerTierLiability: Boolean!
    "Box K3, Check if any of the above liability is subject to guarantees or other payment obligations by the partner"
    liabilitySubjectToGuarantees: Boolean!
    "Box L, Partner's capital account analysis - Beginning capital account"
    capitalAccountBegin: Float!
    "Box L, Partner's capital account analysis - Capital contributed during the year"
    capitalAccountContributions: Float!
    "Box L, Partner's capital account analysis - Current year net income (loss)"
    capitalAccountIncrease: Float!
    "Box L, Partner's capital account analysis - Other increase (decrease)"
    capitalAccountOther: Float!
    "Box L, Partner's capital account analysis - Withdrawals & distributions"
    capitalAccountWithdrawals: Float!
    "Box L, Partner's capital account analysis - Ending capital account"
    capitalAccountEnd: Float!
    "Box M, Did the partner contribute property with a built-in gain or loss? - Yes"
    builtInGain: Boolean!
    "Box N, Partner's Share of Net Unrecognized Section 704(c) Gain or (Loss) - beginning"
    unrecognizedSection704Begin: Float!
    "Box N, Partner's Share of Net Unrecognized Section 704(c) Gain or (Loss) - ending"
    unrecognizedSection704End: Float!
    "Box 1, Ordinary business income (loss)"
    ordinaryIncome: Float!
    "Box 2, Net rental real estate income (loss)"
    netRentalRealEstateIncome: Float!
    "Box 3, Other net rental income (loss)"
    otherRentalIncome: Float!
    "Box 4a, Guaranteed payments for services"
    guaranteedPaymentServices: Float!
    "Box 4b, Guaranteed payments for capital"
    guaranteedPaymentCapital: Float!
    "Box 4c, Total guaranteed payments"
    guaranteedPayment: Float!
    "Box 5, Interest income"
    interestIncome: Float!
    "Box 6a, Ordinary dividends"
    ordinaryDividends: Float!
    "Box 6b, Qualified dividends"
    qualifiedDividends: Float!
    "Box 6c, Dividend equivalents"
    dividendEquivalents: Float!
    "Box 7, Royalties"
    royalties: Float!
    "Box 8, Net short-term capital gain (loss)"
    netShortTermGain: Float!
    "Box 9a, Net long-term capital gain (loss)"
    netLongTermGain: Float!
    "Box 9b, Collectibles (28%) gain (loss)"
    collectiblesGain: Float!
    "Box 9c, Unrecaptured section 1250 gain"
    unrecaptured1250Gain: Float!
    "Box 10, Net section 1231 gain (loss)"
    net1231Gain: Float!
    "Box 11, Other income"
    otherIncome: [CodeandAmount!]
    "Box 12, Section 179 deduction"
    section179Deduction: Float!
    "Box 13, Other deductions"
    otherDeductions: [CodeandAmount!]
    "Box 14, Self-employment earnings (loss)"
    selfEmployment: [CodeandAmount!]
    "Box 15, Credits"
    credits: [CodeandAmount!]
    "Box 16, Schedule K-3 is attached"
    scheduleK3: Boolean!
    "Box 17, Alternative minimum tax (AMT) items"
    amtItems: [CodeandAmount!]
    "Box 18, Tax-exempt income and nondeductible expenses"
    taxExemptIncome: [CodeandAmount!]
    "Box 19, Distributions"
    distributions: [CodeandAmount!]
    "Box 20, Other information"
    otherInfo: [CodeandAmount!]
    "Box 21, Foreign taxes paid or accrued"
    foreignTaxPaid: Float!
    "Box 22, More than one activity for at-risk purposes"
    multipleAtRiskActivities: Boolean!
    "Box 23, More than one activity for passive activity purposes"
    multiplePassiveActivities: Boolean!
}

"Health Insurance Marketplace Statement, to Recipient (boxes 4-5, 12-15)"
type Form1095A {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box 1, Marketplace identifier"
    marketplaceId: String!
    "Box 2, Marketplace-assigned policy number"
    marketplacePolicyNumber: String!
    "Box 3, Policy issuer's name"
    policyIssuerName: String!
    "Box 6, Recipient's date of birth"
    recipientDateOfBirth: String!
    "Box 7, Recipient's spouse's name"
    spouseName: String!
    "Box 8, Recipient's spouse's SSN"
    spouseTin: String!
    "Box 9, Recipient's spouse's date of birth"
    spouseDateOfBirth: String!
    "Box 10, Policy start date"
    policyStartDate: String!
    "Box 11, Policy termination date"
    policyTerminationDate: String!
    "Boxes 16+, Covered Individuals"
    coveredIndividuals: [HealthInsuranceMarketplaceCoveredIndividual!]
    "Boxes 21-33, Coverage Information"
    coverages: [HealthInsuranceCoverage!]
}

"Health Coverage, from Issuer (boxes 16-22) to Responsible Individual (boxes 1-2, 4-7 as recipient)"
type Form1095B {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box 3, Date of birth (if SSN or other TIN is not available)"
    responsibleDateOfBirth: String!
    "Box 8, Enter letter identifying Origin of the Health Coverage"
    originOfHealthCoverageCode: String!
    "Boxes 10-15, Employer EIN, name and address"
    employer: TaxParty3!
    "Boxes 23+, Covered Individuals"
    coveredIndividuals: [HealthInsuranceCoveredIndividual!]
}

"Employer-Provided Health Insurance Offer and Coverage, from Employer (boxes 7-13 as issuer) to Employee (boxes 1-6 as recipient)"
type Form1095C {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Self Insured Coverage"
    selfInsuredCoverage: Boolean!
    "Boxes 14-16, Employee Offer of Coverage"
    offersOfCoverage: [OfferofHealthInsuranceCoverage!]
    "Employee's Age on January 1"
    employeeAge: Int!
    "Plan Start Month"
    planStartMonth: Int!
    "Boxes 17+, Covered Individuals"
    coveredIndividuals: [HealthInsuranceCoveredIndividual!]
}

"Bond Tax Credit, from FORM 1097-BTC ISSUER (1st-2nd boxes) to RECIPIENT (3rd-6th boxes)"
type Form1097BTC {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Form 1097-BTC issuer is: Issuer of bond or its agent filing current year Form 1097-BTC for credit being reported"
    filingForCredit: Boolean!
    "Form 1097-BTC issuer is: An entity or a person that received or should have received a current year Form 1097-BTC and is distributing part or all of that credit to others"
    asNominee: Boolean!
    "Box 1, Total"
    total: Float!
    "Box 2a, Code"
    bondCode: String!
    "Box 2b, Unique Identifier"
    uniqueId: String!
    "Box 3, Bond type"
    bondType: String!
    "Box 5, Amounts by month"
    amounts: [MonthandAmount!]
    "Box 6, Comments"
    comments: String!
}

"Mortgage Interest Statement, from RECIPIENT/LENDER (1st-2nd boxes as issuer) to PAYER/BORROWER (3rd-6th boxes as recipient)"
type Form1098 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box 9, Number of properties securing the mortgage"
    mortgagedProperties: Int!
    "Box 10, Other (property tax)"
    otherInformation: String!
    "Account number"
    accountNumber: String!
    "Box 1, Mortgage interest received from borrower"
    mortgageInterest: Float!
    "Box 2, Outstanding mortgage principal"
    outstandingPrincipal: Float!
    "Box 3, Mortgage origination date"
    originationDate: String!
    "Box 4, Refund of overpaid interest"
    overpaidRefund: Float!
    "Box 5, Mortgage insurance premiums"
    mortgageInsurance: Float!
    "Box 6, Points paid on purchase of principal residence"
    pointsPaid: Float!
    "Box 7, Is address of property securing mortgage same as PAYER'S/BORROWER'S address"
    isPropertyAddressSameAsBorrowerAddress: Boolean!
    "Box 11, Mortgage acquisition date"
    acquisitionDate: String!
    "Box 8, Address of property securing mortgage"
    propertyAddress: Address5!
    "Box 10, Property tax"
    propertyTax: Float!
    "Box 8, Description of property securing mortgage, if property securing mortgage has no address"
    propertyDescription: String!
}

"Contributions of Motor Vehicles, Boats, and Airplanes, from DONEE (1st-2nd boxes as issuer) to DONOR (3rd-6th boxes as recipient)"
type Form1098C {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box 1, Date of contribution"
    dateOfContribution: String!
    "Box 2a, Odometer mileage"
    odometerMileage: Int!
    "Box 2b, Year"
    carYear: Int!
    "Box 2c, Make"
    make: String!
    "Box 2d, Model"
    model: String!
    "Box 3, Vehicle or other identification number"
    vin: String!
    "Box 4a, Donee certifies that vehicle was sold in arm's length transaction to unrelated party"
    armsLengthTransaction: Boolean!
    "Box 4b, Date of sale"
    dateOfSale: String!
    "Box 4c, Gross proceeds from sale (see instructions)"
    grossProceeds: Float!
    "Box 5a, Donee certifies that vehicle will not be transferred for money, other property, or services before completion of material improvements or significant intervening use"
    notTransferredBefore: Boolean!
    "Box 5b, Donee certifies that vehicle is to be transferred to a needy individual for significantly below fair market value in furtherance of donee's charitable purpose"
    needyIndividual: Boolean!
    "Box 5c, Donee certifies the following detailed description of material improvements or significant intervening use and duration of use"
    descriptionOfImprovements: String!
    "Box 6a, Did you provide goods or services in exchange for the vehicle? Yes"
    goodsInExchange: Boolean!
    "Box 6b, Value of goods and services provided in exchange for the vehicle"
    valueOfExchange: Float!
    "Box 6c, If this box is checked, donee certifies that the goods and services consisted solely of intangible religious benefits"
    intangibleReligious: Boolean!
    "Box 6c, Describe the goods and services, if any, that were provided"
    descriptionOfGoods: String!
    "Box 7, Under the law, the donor may not claim a deduction of more than $500 for this vehicle if this box is checked"
    maxDeductionApplies: Boolean!
}

"Student Loan Interest Statement, from RECIPIENT/LENDER (1st-2nd boxes as issuer) to PAYER/BORROWER (3rd-4th boxes as recipient)"
type Form1098E {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Student loan interest received by lender"
    studentLoanInterest: Float!
    "Box 2, If checked, box 1 does not include loan origination fee made before September 1, 2004"
    box1ExcludesFees: Boolean!
}

"Mortgage Assistance Payments, from FILER (1st-2nd boxes as issuer) to HOMEOWNER (3rd-6th boxes as recipient)"
type Form1098MA {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Total State HFA (Housing Finance Agency) and homeowner mortgage payments"
    totalMortgagePayments: Float!
    "Box 2, State HFA (Housing Finance Agency) mortgage assistance payments"
    mortgageAssistancePayments: Float!
    "Box 3, Homeowner mortgage payments"
    homeownerMortgagePayments: Float!
}

"Qualifying Longevity Annuity Contract Information, from ISSUER (1st box) to PARTICIPANT (3rd-5th boxes as recipient)"
type Form1098Q {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Plan number"
    planNumber: String!
    "Plan name"
    planName: String!
    "Plan sponsor's EIN"
    planSponsorId: String!
    "Box 1a, Annuity amount on start date"
    annuityAmount: Float!
    "Box 1b, Annuity start date"
    startDate: String!
    "Box 2, Start date may be accelerated"
    canBeAccelerated: Boolean!
    "Box 3, Total premiums"
    totalPremiums: Float!
    "Box 4, Fair market value of qualifying longevity annuity contract (FMV of QLAC)"
    fairMarketValue: Float!
    "Box 5, Total monthly premiums paid for the contract and date of the last payment in the month"
    premiums: [DateandAmount!]
}

"Tuition Statement, from FILER (1st-2nd boxes as issuer) to STUDENT (3rd-6th boxes as recipient)"
type Form1098T {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "By checking the box in STUDENT'S TIN, filer is making a true and accurate certification under penalty of perjury that they have complied with standards promulgated by the Secretary for obtaining such individual's TIN"
    studentTinCertification: Boolean!
    "Account number"
    accountNumber: String!
    "Box 8, Check if at least half-time student"
    halfTime: Boolean!
    "Box 1, Payments received for qualified tuition and related expenses"
    qualifiedTuitionFees: Float!
    "Box 4, Adjustments made for a prior year"
    adjustmentPriorYear: Float!
    "Box 5, Scholarships or grants"
    scholarship: Float!
    "Box 6, Adjustments to scholarships or grants for a prior year"
    adjustScholarship: Float!
    "Box 7, Check if the amount in box 1 or box 2 includes amounts for an academic period beginning January - March of next year"
    includeJanMar: Boolean!
    "Box 9, Check if graduate student"
    graduate: Boolean!
    "Box 10, Insurance contract reimbursement / refund"
    insuranceRefund: Float!
}

"Acquisition or Abandonment of Secured Property, from LENDER (1st-2nd boxes as issuer) to BORROWER (3rd-4th boxes as recipient)"
type Form1099A {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Date of lender's acquisition or knowledge of abandonment"
    dateOfAcquisition: String!
    "Box 2, Balance of principal outstanding"
    principalBalance: Float!
    "Box 4, Fair market value property"
    fairMarketValue: Float!
    "Box 5, If checked, the borrower was personally liable for repayment of the debt"
    personallyLiable: Boolean!
    "Box 6, Description of property"
    propertyDescription: String!
}

"Proceeds From Broker and Barter Exchange Transactions, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-6th boxes)"
type Form1099B {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Boxes 14-16, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 8, Profit or (loss) realized in current year on closed contracts"
    profitOnClosedContracts: Float!
    "Box 9, Unrealized profit or loss on open contracts at end of last year"
    unrealizedProfitOpenContractsBegin: Float!
    "Box 10, Unrealized profit or loss on open contracts at end of current year"
    unrealizedProfitOpenContractsEnd: Float!
    "Box 11, Aggregate profit or (loss) on contracts"
    aggregateProfitOnContracts: Float!
    "Box 13, Bartering"
    bartering: Float!
    "Boxes 1-3, 5-7, 12, Security details"
    securityDetails: [SecurityDetailIRSForm1099B!]
    "Second TIN Notice"
    secondTinNotice: Boolean!
}

"Cancellation of Debt, from CREDITOR (1st-2nd boxes as issuer) to DEBTOR (3rd-4th boxes as recipient)"
type Form1099C {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Date of identifiable event"
    dateOfEvent: String!
    "Box 2, Amount of debt discharged"
    amountDischarged: Float!
    "Box 3, Interest if included in box 2"
    interestIncluded: Float!
    "Box 4, Debt description"
    debtDescription: String!
    "Box 5, If checked, the debtor was personally liable for repayment of the debt"
    personallyLiable: Boolean!
    "Box 6, Identifiable debt code"
    debtCode: String!
    "Box 7, Fair market value of property"
    fairMarketValue: Float!
}

"Changes in Corporate Control and Capital Structure, from CORPORATION (1st-2nd boxes as issuer) to SHAREHOLDER (3rd-4th boxes as recipient)"
type Form1099CAP {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Date of sale or exchange"
    dateOfSale: String!
    "Box 2, Aggregate amount received"
    aggregateAmount: Float!
    "Box 3, Number of shares exchanged"
    numberOfShares: Float!
    "Box 4, Classes of stock exchanged"
    stockClasses: String!
}

"Various tax-related items reported on consolidated brokerage or mutual fund statements not on the base 1099 forms. The component 1099 forms are delivered as their own Tax1099Xxx entities as usual"
type Form1099ConsolidatedStatement {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Interest paid on margin account"
    marginInterestPaid: Float!
    "Payment in lieu of dividends paid"
    paymentInLieuPaid: Float!
    "Advisor fees paid"
    advisorFeesPaid: Float!
    "Other fees paid"
    otherFeesPaid: Float!
    "Accrued Interest Paid offset to form 1099-INT box 1, Corporate bond interest income"
    corporateBondInterestPaid: Float!
    "Accrued Interest Paid offset to form 1099-INT box 3, accrued U.S. Treasury Notes and Bonds interest income"
    usBondInterestPaid: Float!
    "Accrued Interest Paid offset to form 1099-INT box 8, tax exempt interest income from municipal bonds"
    taxExemptInterestPaid: Float!
    "Accrued Interest Paid offset to form 1099-INT box 9, tax exempt interest income from Private Activity Bonds"
    specifiedPabInterestPaid: Float!
}

"Dividends and Distributions, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-6th boxes)"
type Form1099DIV {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1a, Total ordinary dividends"
    ordinaryDividends: Float!
    "Box 1b, Qualified dividends"
    qualifiedDividends: Float!
    "Box 2a, Total capital gain distributions"
    totalCapitalGain: Float!
    "Box 2b, Unrecaptured Section 1250 gain"
    unrecaptured1250Gain: Float!
    "Box 2c, Section 1202 gain"
    section1202Gain: Float!
    "Box 2d, Collectibles (28%) gain"
    collectiblesGain: Float!
    "Box 2e, Section 897 ordinary dividends"
    section897Dividends: Float!
    "Box 2f, Section 897 capital gain"
    section897CapitalGain: Float!
    "Box 3, Nondividend distributions"
    nonTaxableDistribution: Float!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, Section 199A dividends"
    section199ADividends: Float!
    "Box 6, Investment expenses"
    investmentExpenses: Float!
    "Box 7, Foreign tax paid"
    foreignTaxPaid: Float!
    "Box 8, Foreign country or U.S. possession"
    foreignCountry: String!
    "Box 9, Cash liquidation distributions"
    cashLiquidation: Float!
    "Box 10, Noncash liquidation distributions"
    nonCashLiquidation: Float!
    "Box 11, FATCA filing requirement"
    foreignAccountTaxCompliance: Boolean!
    "Box 12, Exempt-interest dividends"
    taxExemptInterestDividend: Float!
    "Box 13, Specified private activity bond interest dividends"
    specifiedPabInterestDividend: Float!
    "Boxes 14-16, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
    "Foreign income information"
    foreignIncomes: [DescriptionandAmount!]
    "Tax exempt income state information"
    stateTaxExemptIncomes: [DescriptionandAmount!]
    "Second TIN Notice"
    secondTinNotice: Boolean!
}

"Certain Government Payments, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
type Form1099G {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Unemployment compensation"
    unemploymentCompensation: Float!
    "Box 2, State or local income tax refunds, credits, or offsets"
    taxRefund: Float!
    "Box 3, Box 2 amount is for tax year"
    refundYear: Int!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, RTAA payments"
    rtaaPayments: Float!
    "Box 6, Taxable grants"
    grants: Float!
    "Box 7, Agriculture payments"
    agriculturePayments: Float!
    "Box 8, If checked, box 2 is trade or business income"
    businessIncome: Boolean!
    "Box 9, Market gain"
    marketGain: Float!
    "Boxes 10-11, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
    "Second TIN Notice"
    secondTinNotice: Boolean!
}

"Health Coverage Tax Credit (HCTC) Advance Payments, from ISSUER/PROVIDER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
type Form1099H {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box 1, Amount of HCTC advance payments"
    advancePayments: Float!
    "Box 2, Number of months HCTC advance payments and reimbursement credits paid to you"
    numberOfMonths: Int!
    "Boxes 3-14, Payments by month"
    payments: [MonthandAmount!]
}

"Interest Income, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
type Form1099INT {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "FATCA filing requirement"
    foreignAccountTaxCompliance: Boolean!
    "Account number"
    accountNumber: String!
    "Payer's RTN"
    payerRtn: String!
    "Box 1, Interest income"
    interestIncome: Float!
    "Box 2, Early withdrawal penalty"
    earlyWithdrawalPenalty: Float!
    "Box 3, Interest on U.S. Savings Bonds and Treasury obligations"
    usBondInterest: Float!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, Investment expenses"
    investmentExpenses: Float!
    "Box 6, Foreign tax paid"
    foreignTaxPaid: Float!
    "Box 7, Foreign country or U.S. possession"
    foreignCountry: String!
    "Box 8, Tax-exempt interest"
    taxExemptInterest: Float!
    "Box 9, Specified private activity bond interest"
    specifiedPabInterest: Float!
    "Box 10, Market discount"
    marketDiscount: Float!
    "Box 11, Bond premium"
    bondPremium: Float!
    "Box 12, Bond premium on Treasury obligations"
    usBondPremium: Float!
    "Box 13, Bond premium on tax-exempt bond"
    taxExemptBondPremium: Float!
    "Box 14, Tax-exempt bond CUSIP no."
    cusipNumber: String!
    "Boxes 15-17, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
    "Supplemental foreign income amount information (description is country)"
    foreignIncomes: [DescriptionandAmount!]
    "Supplemental tax-exempt income by state (description is state)"
    stateTaxExemptIncome: [DescriptionandAmount!]
    "Second TIN Notice"
    secondTinNotice: Boolean!
}

"Merchant Card and Third-Party Network Payments, from FILER (1st, 7th boxes as issuer) to PAYEE (4th, 8th boxes as recipient)"
type Form1099K {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Check to indicate if FILER is a Payment Settlement Entity (PSE)"
    paymentSettlementEntity: Boolean!
    "Check to indicate if FILER is an Electronic Payment Facilitator (EPF) / Other third party"
    electronicPaymentFacilitator: Boolean!
    "Check to indicate transactions reported are: Payment card"
    paymentCard: Boolean!
    "Check to indicate transactions reported are: Third party network"
    thirdPartyNetwork: Boolean!
    "PSE's name"
    pseName: String!
    "PSE's phone number"
    psePhone: TelephoneNumberPlusExtension2!
    "Account number"
    accountNumber: String!
    "Box 1a, Gross amount of payment card/third party network transactions"
    grossAmount: Float!
    "Box 1b, Card Not Present Transactions"
    cardNotPresent: Float!
    "Box 2, Merchant category code"
    merchantCategoryCode: String!
    "Box 3, Number of purchase transactions"
    numberOfTransactions: Float!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, Monthly amounts"
    monthAmounts: [MonthandAmount!]
    "Boxes 6-8, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
    "Second TIN Notice"
    secondTinNotice: Boolean!
}

"Reportable Life Insurance Sale, from ACQUIRER (1st-2nd boxes as issuer) to PAYMENT RECIPIENT (3rd-4th boxes)"
type Form1099LS {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Policy number"
    policyNumber: String!
    "Box 1, Amount paid to payment recipient"
    payment: Float!
    "Box 2, Date of sale"
    saleDate: String!
    "Issuer's name"
    issuerName: String!
    "Acquirer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (If different from ACQUIRER)"
    contactNameAddress: NameAddressandPhone1!
}

"Long-Term Care and Accelerated Death Benefits, from PAYER (1st-2nd boxes as issuer) to POLICY HOLDER (3rd-4th boxes as recipient)"
type Form1099LTC {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Gross long-term care benefits paid"
    ltcBenefits: Float!
    "Box 2, Accelerated death benefits paid"
    deathBenefits: Float!
    "Box 3, Per diem"
    perDiem: Boolean!
    "Box 3, Reimbursed amount"
    reimbursedAmount: Boolean!
    "INSURED'S taxpayer identification no."
    insuredId: String!
    "Insured name and address"
    insuredNameAddress: NameandAddress1!
    "Box 4, Qualified contract"
    qualifiedContract: Boolean!
    "Box 5, Chronically ill"
    chronicallyIll: Boolean!
    "Box 5, Terminally ill"
    terminallyIll: Boolean!
    "Date certified"
    dateCertified: String!
}

"Miscellaneous Income, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
type Form1099MISC {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Rents"
    rents: Float!
    "Box 2, Royalties"
    royalties: Float!
    "Box 3, Other income"
    otherIncome: Float!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, Fishing boat proceeds"
    fishingBoatProceeds: Float!
    "Box 6, Medical and health care payments"
    medicalHealthPayment: Float!
    "Box 7, Payer made direct sales of $5,000 or more of consumer products to a buyer (recipient) for resale"
    payerDirectSales: Boolean!
    "Box 8, Substitute payments in lieu of dividends or interest"
    substitutePayments: Float!
    "Box 9, Crop insurance proceeds"
    cropInsurance: Float!
    "Second TIN Notice"
    secondTinNotice: Boolean!
    "Box 10, Gross proceeds paid to an attorney"
    grossAttorney: Float!
    "Box 11, Fish purchased for resale"
    fishPurchased: Float!
    "Box 12, Section 409A deferrals"
    section409ADeferrals: Float!
    "Box 13, FATCA filing requirement"
    foreignAccountTaxCompliance: Boolean!
    "Box 14, Excess golden parachute payments"
    excessGolden: Float!
    "Box 15, Nonqualified Deferred Compensation"
    nonQualifiedDeferredCompensation: Float!
    "Boxes 16-18, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
}

"Non-Employee Compensation, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
type Form1099NEC {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Second TIN Notice"
    secondTinNotice: Boolean!
    "Box 1, Nonemployee compensation"
    nonEmployeeCompensation: Float!
    "Box 2, Payer made direct sales of $5,000 or more of consumer products to a buyer (recipient) for resale"
    payerDirectSales: Boolean!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Boxes 5-7, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
}

"Original Issue Discount, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
type Form1099OID {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "FATCA filing requirement"
    foreignAccountTaxCompliance: Boolean!
    "Account number"
    accountNumber: String!
    "Box 1, Original issue discount"
    originalIssueDiscount: Float!
    "Box 2, Other periodic interest"
    otherPeriodicInterest: Float!
    "Box 3, Early withdrawal penalty"
    earlyWithdrawalPenalty: Float!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, Market discount"
    marketDiscount: Float!
    "Box 6, Acquisition premium"
    acquisitionPremium: Float!
    "Box 7, Description"
    oidDescription: String!
    "Box 8, Original issue discount on U.S. Treasury obligations"
    discountOnTreasuryObligations: Float!
    "Box 9, Investment expenses"
    investmentExpenses: Float!
    "Box 10, Bond premium"
    bondPremium: Float!
    "Box 11, Tax-exempt OID"
    taxExemptOid: Float!
    "Boxes 12-14, State and Local tax withheld"
    stateAndLocal: [StateandLocalTaxWithholding!]
    "Supplemental: State name and tax-exempt OID by state"
    stateExemptOid: [DescriptionandAmount!]
    "Second TIN Notice"
    secondTinNotice: Boolean!
}

"Taxable Distributions Received From Cooperatives, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
type Form1099PATR {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Patronage dividends"
    patronageDividends: Float!
    "Box 2, Nonpatronage distributions"
    nonpatronageDistributions: Float!
    "Box 3, Per-unit retain allocations"
    perUnitRetainAllocations: Float!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, Redemption of nonqualified notices and retain allocations"
    redemption: Float!
    "Box 6, Section 199A(g) deduction"
    section199Deduction: Float!
    "Box 7, Qualified payments"
    qualifiedPayments: Float!
    "Box 8, Section 199A(a) qualified items"
    section199QualifiedItems: Float!
    "Box 9, Section 199A(a) SSTB (Specified Service Trade or Business) items"
    section199SstbItems: Float!
    "Box 10, Investment credit"
    investmentCredit: Float!
    "Box 11, Work opportunity credit"
    workOpportunityCredit: Float!
    "Box 12, Other credits and deductions"
    otherCreditsAndDeductions: Float!
    "Box 13, Specified Cooperative"
    specifiedCoop: Boolean!
    "State and Local tax withholding, from IRS's IRIS schema"
    stateAndLocal: StateandLocalTaxWithholding2!
    "Second TIN Notice"
    secondTinNotice: Boolean!
}

"Payments From Qualified Education Programs, from PAYER/TRUSTEE (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
type Form1099Q {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Gross distribution"
    grossDistribution: Float!
    "Box 2, Earnings"
    earnings: Float!
    "Box 3, Basis"
    basis: Float!
    "Box 4, Trustee-to-trustee transfer"
    trusteeToTrustee: Boolean!
    "Box 5a, Qualified tuition plan - Private"
    tuitionPlanPrivate: Boolean!
    "Box 5b, Qualified tuition plan - Public"
    tuitionPlanPublic: Boolean!
    "Box 5c, Coverdell ESA"
    coverdellEsa: Boolean!
    "Box 6, If this box is checked, the recipient is not the designated beneficiary"
    recipientIsNotBeneficiary: Boolean!
    "If fair market value (FMV) is included, see Pub. 970, Tax Benefits for Education, for how to figure earnings"
    fairMarketValue: Float!
}

"Distributions From ABLE Accounts, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
type Form1099QA {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Gross distribution"
    grossDistribution: Float!
    "Box 2, Earnings"
    earnings: Float!
    "Box 3, Basis"
    basis: Float!
    "Box 4, Program-to-program transfer"
    programTransfer: Boolean!
    "Box 5, Check if ABLE account terminated in current year"
    terminated: Boolean!
    "Box 6, Check if the recipient is not the designated beneficiary"
    notBeneficiary: Boolean!
}

"Distributions from Pensions, Annuities, Retirement or Profit-Sharing Plans, IRAs, Insurance Contracts, etc., from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
type Form1099R {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box 10, Amount allocable to IRR within 5 years"
    allocableToIRR: Float!
    "Box 11, First year of designated Roth contributions. A four-digit year. (Like `TaxYear` definition, but lower minimum since first year of Roth IRAs was 1997)"
    firstYearOfRoth: Int!
    "Account number"
    recipientAccountNumber: String!
    "Box 1, Gross distribution"
    grossDistribution: Float!
    "Box 2a, Taxable amount"
    taxableAmount: Float!
    "Box 2b, Taxable amount not determined"
    taxableAmountNotDetermined: Boolean!
    "Box 2c, Total distribution"
    totalDistribution: Boolean!
    "Box 3, Capital gain"
    capitalGain: Float!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, Employee contributions"
    employeeContributions: Float!
    "Box 6, Net unrealized appreciation"
    netUnrealizedAppreciation: Float!
    "Box 7, Distribution codes"
    distributionCodes: [String!]
    "Box 7b, IRA/SEP/SIMPLE"
    iraSepSimple: Boolean!
    "Box 8, Other"
    otherAmount: Float!
    "Box 8, Other percent"
    otherPercent: Float!
    "Box 9a, Your percent of total distribution"
    yourPercentOfTotal: Float!
    "Box 9b, Total employee contributions"
    totalEmployeeContributions: Float!
    "Box 12, FATCA filing requirement"
    foreignAccountTaxCompliance: Boolean!
    "Box 13, Date of payment"
    dateOfPayment: String!
    "Boxes 14-19, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
}

"Proceeds From Real Estate Transactions, from FILER (1st-2nd boxes as issuer) to TRANSFEROR (3rd-4th boxes as recipient)"
type Form1099S {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account or escrow number"
    accountNumber: String!
    "Box 1, Date of closing"
    dateOfClosing: String!
    "Box 2, Gross proceeds"
    grossProceeds: Float!
    "Box 3, Address or legal description"
    addressOrLegalDescription: String!
    "Box 4, Transferor received or will receive property or services as part of the consideration (if checked)"
    receivedOtherConsideration: Boolean!
    "Box 5, If checked, transferor is a foreign person (nonresident alien, foreign partnership, foreign estate, or foreign trust)"
    foreignPerson: Boolean!
    "Box 6, Buyer's part of real estate tax"
    realEstateTax: Float!
}

"Distributions From an HSA, Archer MSA, or Medicare Advantage MSA, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
type Form1099SA {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Gross distribution"
    grossDistribution: Float!
    "Box 2, Earnings on excess contributions"
    earnings: Float!
    "Box 3, Distribution code"
    distributionCode: String!
    "Box 4, FMV on date of death"
    fairMarketValue: Float!
    "Box 5a, HSA"
    hsa: Boolean!
    "Box 5b, Archer MSA"
    archerAccount: Boolean!
    "Box 5c, Medicare Advantage (MA) MSA"
    medicalSavingsAccount: Boolean!
}

"Seller's Investment in Life Insurance Contract, from ISSUER (1st-2nd boxes) to SELLER (3rd-4th boxes as recipient)"
type Form1099SB {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Policy number"
    policyNumber: String!
    "Box 1, Investment in contract"
    contractInvestment: Float!
    "Box 2, Surrender amount"
    surrenderAmount: Float!
    "Issuer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (if different from ISSUER)"
    contactNameAddress: NameAddressandPhone2!
}

"Shareholder's Share of Income, Deductions, Credits, etc., from Corporation (boxes A-B as issuer) to Shareholder (boxes E-F as recipient)"
type Form1120SK1 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Final K-1"
    finalK1: Boolean!
    "Amended K-1"
    amendedK1: Boolean!
    "Fiscal year begin date"
    fiscalYearBegin: String!
    "Fiscal year end date"
    fiscalYearEnd: String!
    "Box C, IRS Center where corporation filed return"
    irsCenter: String!
    "Box D, Corporation's total number of shares, Beginning of tax year"
    corporationBeginningShares: Float!
    "Box D, Corporation's total number of shares, End of tax year"
    corporationEndingShares: Float!
    "Box G, Current year allocation percentage"
    percentOwnership: Float!
    "Box H, Shareholder's number of shares, Beginning of tax year"
    beginningShares: Float!
    "Box H, Shareholder's number of shares, End of tax year"
    endingShares: Float!
    "Box I, Loans from shareholder, Beginning of tax year"
    beginningLoans: Float!
    "Box I, Loans from shareholder, Ending of tax year"
    endingLoans: Float!
    "Box 1, Ordinary business income (loss)"
    ordinaryIncome: Float!
    "Box 2, Net rental real estate income (loss)"
    netRentalRealEstateIncome: Float!
    "Box 3, Other net rental income (loss)"
    otherRentalIncome: Float!
    "Box 4, Interest income"
    interestIncome: Float!
    "Box 5a, Ordinary dividends"
    ordinaryDividends: Float!
    "Box 5b, Qualified dividends"
    qualifiedDividends: Float!
    "Box 6, Royalties"
    royalties: Float!
    "Box 7, Net short-term capital gain (loss)"
    netShortTermGain: Float!
    "Box 8a, Net long-term capital gain (loss)"
    netLongTermGain: Float!
    "Box 8b, Collectibles (28%) gain (loss)"
    collectiblesGain: Float!
    "Box 8c, Unrecaptured section 1250 gain"
    unrecaptured1250Gain: Float!
    "Box 9, Net section 1231 gain (loss)"
    net1231Gain: Float!
    "Box 10, Other income (loss)"
    otherIncome: [CodeandAmount!]
    "Box 11, Section 179 deduction"
    section179Deduction: Float!
    "Box 12, Other deductions"
    otherDeductions: [CodeandAmount!]
    "Box 13, Credits"
    credits: [CodeandAmount!]
    "Box 14, Schedule K-3 is attached"
    scheduleK3: Boolean!
    "Box 15, Alternative minimum tax (AMT) items"
    amtItems: [CodeandAmount!]
    "Box 16, Items affecting shareholder basis"
    basisItems: [CodeandAmount!]
    "Box 17, Other information"
    otherInfo: [CodeandAmount!]
    "Box 18, More than one activity for at-risk purposes"
    multipleAtRiskActivities: Boolean!
    "Box 19, More than one activity for passive activity purposes"
    multiplePassiveActivities: Boolean!
}

"Notice to Shareholder of Undistributed Long-Term Capital Gains, from RIC or REIT (1st-2nd boxes as issuer) to Shareholder (3rd-4th boxes as recipient)"
type Form2439 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Fiscal year begin date"
    fiscalYearBegin: String!
    "Fiscal year end date"
    fiscalYearEnd: String!
    "Box 1a, Total undistributed long-term capital gains"
    undistributedLongTermCapitalGains: Float!
    "Box 1b, Unrecaptured section 1250 gain"
    unrecaptured1250Gain: Float!
    "Box 1c, Section 1202 gain"
    section1202Gain: Float!
    "Box 1d, Collectibles (28%) gain"
    collectiblesGain: Float!
    "Box 2, Tax paid by the RIC or REIT on the box 1a gains"
    taxPaid: Float!
}

"Exercise of an Incentive Stock Option Under Section 422(b), from TRANSFEROR (1st-2nd boxes as issuer) to EMPLOYEE (3rd-4th boxes as recipient)"
type Form3921 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Date option granted"
    optionGrantDate: String!
    "Box 2, Date option exercised"
    optionExerciseDate: String!
    "Box 3, Exercise price per share"
    exercisePrice: Float!
    "Box 4, Fair market value per share on exercise date"
    exerciseMarketValue: Float!
    "Box 5, Number of shares transferred"
    numberOfShares: Float!
    "Box 6, If other than TRANSFEROR, name, address and tin of corporation whose stock is being transferred"
    corporation: TaxParty4!
}

"Transfer of Stock Acquired Through an Employee Stock Purchase Plan under Section 423(c), from CORPORATION (1st-2nd boxes as issuer) to EMPLOYEE (3rd-4th boxes as recipient)"
type Form3922 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Date option granted"
    optionGrantDate: String!
    "Box 2, Date option exercised"
    optionExerciseDate: String!
    "Box 3, Fair market value per share on grant date"
    grantMarketValue: Float!
    "Box 4, Fair market value per share on exercise date"
    exerciseMarketValue: Float!
    "Box 5, Exercise price paid per share"
    exercisePrice: Float!
    "Box 6, Number of shares transferred"
    numberOfShares: Float!
    "Box 7, Date legal title transferred"
    titleTransferDate: String!
    "Box 8, Exercise price per share determined as if the option was exercised on the option granted date"
    grantDateExercisePrice: Float!
}

"IRA Contribution Information, from TRUSTEE/ISSUER (1st-2nd boxes as issuer) to PARTICIPANT (3rd-4th boxes as recipient)"
type Form5498 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, IRA contributions"
    iraContributions: Float!
    "Box 2, Rollover contributions"
    rolloverContributions: Float!
    "Box 3, Roth IRA conversion amount"
    rothIraConversion: Float!
    "Box 4, Recharacterized contributions"
    recharacterizedContributions: Float!
    "Box 5, Fair market value of account"
    fairMarketValue: Float!
    "Box 6, Life insurance cost included in box 1"
    lifeInsuranceCost: Float!
    "Box 7a, IRA"
    ira: Boolean!
    "Box 7b, SEP"
    sep: Boolean!
    "Box 7c, SIMPLE"
    simple: Boolean!
    "Box 7d, Roth IRA"
    rothIra: Boolean!
    "Box 8, SEP contributions"
    sepContributions: Float!
    "Box 9, SIMPLE contributions"
    simpleContributions: Float!
    "Box 10, Roth IRA contributions"
    rothIraContributions: Float!
    "Box 11, If checked, required minimum distribution for next year"
    rmdNextYear: Boolean!
    "Box 12a, RMD date"
    rmdDate: String!
    "Box 12b, RMD amount"
    rmdAmount: Float!
    "Box 13a, Postponed contribution"
    postponedContribution: Float!
    "Box 13b, Year"
    postponedYear: Int!
    "Box 13c, Code"
    postponedCode: String!
    "Box 14a, Repayments"
    repayments: Float!
    "Box 14b, Code"
    repayCode: String!
    "Box 15a, FMV of certain specified assets"
    fmvSpecifiedAssets: Float!
    "Box 15b, Code(s)"
    specifiedCodes: String!
}

"Coverdell ESA Contribution Information, from TRUSTEE/ISSUER (1st-2nd boxes as issuer) to BENEFICIARY (3rd-4th boxes as recipient)"
type Form5498ESA {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Coverdell ESA contributions"
    coverdellEsaContributions: Float!
    "Box 2, Rollover contributions"
    rolloverContributions: Float!
}

"ABLE Account Contribution Information, from ISSUER (1st-2nd boxes) to BENEFICIARY (3rd-4th boxes as recipient)"
type Form5498QA {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, ABLE contributions"
    ableContributions: Float!
    "Box 2, ABLE to ABLE Rollovers"
    rollovers: Float!
    "Box 3, Cumulative contributions"
    cumulativeContributions: Float!
    "Box 4, Fair market value"
    fairMarketValue: Float!
    "Box 5, Check if account opened in current tax year"
    openedInTaxYear: Boolean!
    "Box 6, Basis of eligibility"
    basisOfDisabilityCode: String!
    "Box 7, Code"
    typeOfDisabilityCode: String!
}

"HSA, Archer MSA, or Medicare Advantage (MA) MSA Information, from TRUSTEE (1st-2nd boxes as issuer) to PARTICIPANT (3rd-4th boxes as recipient)"
type Form5498SA {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Employee or self-employed person's Archer MSA contributions made in current and following years for current year"
    msaContributions: Float!
    "Box 2, Total contributions made in current year"
    totalContributions: Float!
    "Box 3, Total HSA or Archer MSA contributions made in following year for current year"
    totalPostYearEnd: Float!
    "Box 4, Rollover contributions"
    rolloverContributions: Float!
    "Box 5, Fair market value of HSA, Archer MSA, or Medicare Advantage (MA) MSA"
    fairMarketValue: Float!
    "Box 6a, HSA"
    hsa: Boolean!
    "Box 6b, Archer MSA"
    archer: Boolean!
    "Box 6c, Medicare Advantage (MA) MSA"
    maMsa: Boolean!
}

"An additional tax form attribute for use when a defined field is not available"
type TaxFormAttribute {
    "Name of attribute"
    name: String!
    "Value of attribute"
    value: String!
    "Box number on a tax form, if any"
    boxNumber: String!
    "Tax form code for the given box number, if any"
    code: String!
}

"Legal entity for issuer or recipient, used across all tax forms"
type TaxParty {
    "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
    tin: String!
    "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
    partyType: TaxPartyType2!
    "Individual issuer or recipient name"
    individualName: Individualname4!
    "Business issuer or recipient name"
    businessName: Businessname1!
    "Issuer or recipient address"
    address: Address1!
    "Issuer or recipient telephone number"
    phone: TelephoneNumberPlusExtension4!
    "Issuer or recipient email address. (Additional information, not part of IRS forms)"
    email: String!
}

"IRS Form 8888 Direct Deposit Information"
type TaxRefundDirectDeposit {
    "Name of institution"
    institutionName: String!
    "Routing transit number"
    rtn: String!
    "Account number"
    accountNumber: String!
    "Account nickname"
    accountNickName: String!
}

"Tax statement containing one or more tax forms"
type TaxStatement {
    "Year for which taxes are being paid"
    taxYear: Int!
    "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id"
    taxStatementId: String!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
    issuer: TaxParty6!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
    recipient: TaxParty7!
    "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)"
    taxDataType: TypeDataType1!
    "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`"
    forms: [TaxData!]
    "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`"
    pdf: String!
    "Additional tax statement attributes that the provider wishes to include"
    attributes: [FiAttributeEntity!]
}

"Tax statement list containing one or more tax statements"
type TaxStatementList {
    "The list of tax statements"
    statements: [TaxStatement!]
}

"Wage and Tax Statement, from Employer (boxes b-c as issuer) to Employee (boxes a, e-f as recipient)"
type FormW2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Control number"
    controlNumber: String!
    "Box 1, Wages, tips, other compensation"
    wages: Float!
    "Box 2, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 3, Social security wages"
    socialSecurityWages: Float!
    "Box 4, Social security tax withheld"
    socialSecurityTaxWithheld: Float!
    "Box 5, Medicare wages and tips"
    medicareWages: Float!
    "Box 6, Medicare tax withheld"
    medicareTaxWithheld: Float!
    "Box 7, Social security tips"
    socialSecurityTips: Float!
    "Box 8, Allocated tips"
    allocatedTips: Float!
    "Box 10, Dependent care benefits"
    dependentCareBenefit: Float!
    "Box 11, Nonqualified plans"
    nonQualifiedPlan: Float!
    "Box 12, Codes and amounts"
    codes: [CodeandAmount!]
    "Box 13, Statutory employee"
    statutory: Boolean!
    "Box 13, Retirement plan"
    retirementPlan: Boolean!
    "Box 13, Third-party sick pay"
    thirdPartySickPay: Boolean!
    "Employee Stock Purchase Plan Qualified Disposition amount"
    esppQualified: Float!
    "Employee Stock Purchase Plan Nonqualified Disposition amount"
    esppNonQualified: Float!
    "Box 14, Other descriptions and amounts"
    other: [DescriptionandAmount!]
    "Boxes 15-20, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
}

"IRS form W-2c, Corrected Wage and Tax Statement, from Employer (boxes a-b as issuer) to Employee (boxes d, h-i as recipient)"
type FormW2c {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box e, Corrected SSN and/or name"
    correctedTinOrName: Boolean!
    "Box f, Employee's previously reported SSN"
    previousEmployeeTin: String!
    "Box g, Employee's previously reported name"
    previousEmployeeName: Individualname3!
    "Boxes 1-20 of Previously reported Wage and Tax Statement"
    originalW2: FormW21!
    "Boxes 1-20 of Correct information Wage and Tax Statement"
    correctedW2: FormW22!
}

"Certain Gambling Winnings, from PAYER (1st-3rd boxes as issuer) to WINNER (boxes 4th-6th and 9 as recipient)"
type FormW2G {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box 1, Reportable winnings"
    winnings: Float!
    "Box 2, Date won"
    dateWon: String!
    "Box 3, Type of wager"
    typeOfWager: String!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, Transaction"
    transaction: String!
    "Box 6, Race"
    race: String!
    "Box 7, Winnings from identical wagers"
    identicalWinnings: Float!
    "Box 8, Cashier"
    cashier: String!
    "Box 10, Window"
    window: String!
    "Box 11, First I.D."
    firstId: String!
    "Box 12, Second I.D."
    secondId: String!
    "Boxes 13-18, State and Local tax withholding, use income fields for state (box 14) and local (box 16) winnings amounts"
    stateAndLocal: [StateandLocalTaxWithholding!]
}

"Standard for international phone numbers"
type TelephoneNumber {
    "Type of phone number: HOME, BUSINESS, CELL, FAX"
    type: TelephoneNumberType2!
    "Country calling codes defined by ITU-T recommendations E.123 and E.164"
    country: String!
    "Telephone subscriber number defined by ITU-T recommendation E.164"
    number: String!
}

"A telephone number that can contain optional text for an arbitrary length telephone extension number"
type TelephoneNumberPlusExtension {
    "Type of phone number: HOME, BUSINESS, CELL, FAX"
    type: TelephoneNumberType2!
    "Country calling codes defined by ITU-T recommendations E.123 and E.164"
    country: String!
    "Telephone subscriber number defined by ITU-T recommendation E.164"
    number: String!
    "An arbitrary length telephone number extension"
    extension: String!
}

"Provides the past, present, and future vesting schedule and percentages."
type VestingEntity {
    "Vesting date"
    vestingDate: String!
    "Security symbol"
    symbol: String!
    "Strike price"
    strikePrice: Float!
    "Vesting percentage"
    vestingPercentage: Float!
    "Other vest amount"
    otherVestAmount: Float!
    "Other vest percentage"
    otherVestPercentage: Float!
    "Vested balance"
    vestedBalance: Float!
    "Unvested balance"
    unVestedBalance: Float!
    "Vested qualtity"
    vestedQuantity: Float!
    "Unvested quantity"
    unVestedQuantity: Float!
}

"Contact information for the account"
type AccountContactentity {
    "Owners of the account"
    holders: [AccountHolderentity!]
    "Email addresses associated with the account"
    emails: [String!]
}

"Extends `Customer` and adds a `relationship` field to define the customer's relationship with an account"
type AccountHolderentity {
    "Long-term persistent identity of the end-user. This identity must be unique to the owning institution"
    customerId: String!
    "The end-user's name"
    name: Name!
    "Customer's relationship to the account"
    relationship: AccountHolderRelationship2!
}

"Customers that are commercial in nature are affiliated with a business entity"
type BusinessCustomerentity {
    "Name of business customer"
    name: String!
    "A list of registered agents who act on behalf of the business customer"
    registeredAgents: [CustomerName!]
    "The registered tax identification number (TIN) or other identifier of business customer"
    registeredId: String!
    "Industry code and type"
    industryCode: IndustryCode!
    "The country and region of the business customer's location"
    domicile: Domicile!
}

type CustomerName {
    "First or given name. This data element may contain first & last name if not separated."
    first: String!
    middle: String!
    last: String!
    "Name prefix, e.g. Mr."
    prefix: String!
    "Generational or academic suffix"
    suffix: String!
    "Company name"
    company: String!
}

type Account {
    "Deposit Account"
    depositAccount: DepositAccount!
}

type Account1 {
    "Loan Account"
    loanAccount: LoanAccount!
}

type Account2 {
    "Line of Credit Account"
    locAccount: Accountinformation!
}

type Account3 {
    "Investment Account"
    investmentAccount: InvestmentAccount!
}

type Account4 {
    "Insurance Account"
    insuranceAccount: InsuranceAccount!
}

type Account5 {
    "Annuity Account"
    annuityAccount: AnnuityAccount!
}

type Account6 {
    "Data elements included with balances specific to deposit accounts"
    depositAccount: Depositbalances!
}

type Account7 {
    "Account ID of the related account"
    accountId: String!
    "Types of relationships between accounts and holders. Suggested values"
    relationship: AccountHolderRelationship!
}

type Account8 {
    "Data elements included with the investment product"
    investmentAccount: Investmentaccountwithalldetails!
}

type Account61 {
    "Data elements included with balances specific to loan accounts"
    loanAccount: Loanbalances!
}

type Account62 {
    "Data elements included with balances specific to line of credit accounts"
    locAccount: Lineofcreditbalances!
}

type Account63 {
    "Data elements included with balances specific to investment accounts"
    investmentAccount: Investmentbalances!
}

type Account64 {
    "Data elements included with balances specific to insurance accounts"
    insuranceAccount: Insurancebalances!
}

type Account65 {
    "Data elements included with balances specific to annuity accounts"
    annuityAccount: Annuitybalances!
}

"Issuer or recipient address"
type Address1 {
    "Address line 1"
    line1: String!
    "Address line 2"
    line2: String!
    "Address line 3"
    line3: String!
    "City"
    city: String!
    "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'"
    region: String!
    "Postal code"
    postalCode: String!
    "Country code"
    country: ISO3166CountryCode2!
}

type Address2 {
    "The location type of an address"
    type: Locationtype!
    "May contain full address if not separated"
    line1: String!
    line2: String!
    line3: String!
    city: String!
    state: String!
    postalCode: String!
    "ISO 3166 Country Code"
    country: String!
}

"Box 1a, Physical address of property (street, city, state, ZIP code)"
type Address3 {
    "Address line 1"
    line1: String!
    "Address line 2"
    line2: String!
    "Address line 3"
    line3: String!
    "City"
    city: String!
    "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'"
    region: String!
    "Postal code"
    postalCode: String!
    "Country code"
    country: ISO3166CountryCode2!
}

"Box 8, Address of property securing mortgage"
type Address5 {
    "Address line 1"
    line1: String!
    "Address line 2"
    line2: String!
    "Address line 3"
    line3: String!
    "City"
    city: String!
    "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'"
    region: String!
    "Postal code"
    postalCode: String!
    "Country code"
    country: ISO3166CountryCode2!
}

type AkoyaAccountInfoproduct {
    "An array of accounts with entity types dependent on the account type (deposit, investment, loan, line of credit, annuity or insurance)"
    accounts: [String!]
}

type Arrayofaccountpaymentnetworks {
    "Array of payment networks"
    paymentNetworks: [PaymentNetworkSupportedbyAccount!]
}

type AssetClass {
    assetClass: AssetClass1!
    "Percentage of asset class that falls under this asset"
    percent: Float!
}

type Balances {
    "An array of accounts with entity types dependent on the account type (deposit, investment, loan, line of credit, annuity or insurance)"
    accounts: [String!]
}

"Business issuer or recipient name"
type Businessname1 {
    "Name line 1"
    name1: String!
    "Name line 2"
    name2: String!
}

"Cryptocurrency Tax Statement list"
type CryptocurrencyTaxStatementlist1 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "The list of cryptocurrency gains and losses"
    gainsAndLosses: [Gainorlossfromcryptocurrencytransaction!]
}

type DeliveryAddress {
    "Type of address location. One of BUSINESS, HOME, MAILING"
    type: String!
}

"The country and region of the business customer's location"
type Domicile {
    region: String!
    country: String!
}

"Present if an error was encountered while retrieving this form"
type Error2 {
    "Error code defined by FDX API Specification or Data Provider indicating the error situation which has occurred"
    code: Int!
    "End user displayable information which might help the customer diagnose an error"
    message: String!
    "Message used to debug the root cause of the error. Contents should not be used in consumer's business logic. Can change at any time and should only be used for consumer to communicate with the data provider about an issue. Provider can include an error GUID in message for their use."
    debugMessage: String!
}

type FiAssetClass {
    "FI-specific asset class"
    assetClass: String!
    "Percentage of asset class that falls under this asset"
    percent: Float!
}

"Boxes 12a-i, Withholding agent"
type Form1042SAgent1 {
    "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
    tin: String!
    "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
    partyType: TaxPartyType2!
    "Individual issuer or recipient name"
    individualName: Individualname4!
    "Business issuer or recipient name"
    businessName: Businessname1!
    "Issuer or recipient address"
    address: Address1!
    "Issuer or recipient telephone number"
    phone: TelephoneNumberPlusExtension4!
    "Issuer or recipient email address. (Additional information, not part of IRS forms)"
    email: String!
    "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer"
    ch3StatusCode: String!
    "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer"
    ch4StatusCode: String!
    "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer"
    giin: String!
    "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity"
    foreignTin: String!
}

"Boxes 13a-j, 13l, Recipient for Form 1042-S"
type Form1042SRecipient1 {
    "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
    tin: String!
    "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
    partyType: TaxPartyType2!
    "Individual issuer or recipient name"
    individualName: Individualname4!
    "Business issuer or recipient name"
    businessName: Businessname1!
    "Issuer or recipient address"
    address: Address1!
    "Issuer or recipient telephone number"
    phone: TelephoneNumberPlusExtension4!
    "Issuer or recipient email address. (Additional information, not part of IRS forms)"
    email: String!
    "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer"
    ch3StatusCode: String!
    "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer"
    ch4StatusCode: String!
    "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer"
    giin: String!
    "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity"
    foreignTin: String!
    "Box 13j, Recipient's LOB code, if any"
    lobCode: String!
    "Box 13l, Recipient's date of birth"
    dateOfBirth: String!
}

"Boxes 14a-b, Primary Withholding Agent"
type Form1042SAgent2 {
    "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
    tin: String!
    "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
    partyType: TaxPartyType2!
    "Individual issuer or recipient name"
    individualName: Individualname4!
    "Business issuer or recipient name"
    businessName: Businessname1!
    "Issuer or recipient address"
    address: Address1!
    "Issuer or recipient telephone number"
    phone: TelephoneNumberPlusExtension4!
    "Issuer or recipient email address. (Additional information, not part of IRS forms)"
    email: String!
    "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer"
    ch3StatusCode: String!
    "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer"
    ch4StatusCode: String!
    "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer"
    giin: String!
    "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity"
    foreignTin: String!
}

"Foreign Person's U.S. Source Income Subject to Withholding"
type Form1042S2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Unique form identifier"
    formId: String!
    "Amended"
    amended: Boolean!
    "Amendment number"
    amendmentNumber: Int!
    "Box 1, Income code"
    incomeTypeCode: String!
    "Box 2, Gross income"
    grossIncome: Float!
    "Box 3, Chapter indicator"
    chapterIndicator: String!
    "Box 3a, Exemption code"
    ch3ExemptionCode: String!
    "Box 3b, Tax rate"
    ch3TaxRate: Float!
    "Box 4a, Exemption code"
    ch4ExemptionCode: String!
    "Box 4b, Tax rate"
    ch4TaxRate: Float!
    "Box 5, Withholding allowance"
    withholdingAllowance: Float!
    "Box 6, Net income"
    netIncome: Float!
    "Box 7a, Federal tax withheld"
    federalTaxWithheld: Float!
    "Box 7b, Check if federal tax withheld was not deposited with the IRS because escrow procedures were applied"
    escrowProceduresApplied: Boolean!
    "Box 7c, Check if withholding occurred in subsequent year with respect to a partnership interest"
    subsequentYear: Boolean!
    "Box 8, Tax withheld by other agents"
    otherAgentsTaxWithheld: Float!
    "Box 9, Overwithheld tax repaid to recipient pursuant to adjustment procedures"
    recipientRepaidAmount: Float!
    "Box 10, Total withholding credit"
    totalTaxWithholdingCredit: Float!
    "Box 11, Tax paid by withholding agent (amounts not withheld)"
    withholdingAgentTaxPaid: Float!
    "Boxes 12a-i, Withholding agent"
    withholdingAgent: Form1042SAgent1!
    "Boxes 13a-j, 13l, Recipient for Form 1042-S"
    form1042Recipient: Form1042SRecipient1!
    "Box 13k, Recipient account number"
    accountNumber: String!
    "Boxes 14a-b, Primary Withholding Agent"
    primary: Form1042SAgent2!
    "Box 15, Check if pro-rata basis reporting"
    prorataBasisReporting: Boolean!
    "Boxes 15a-i, Intermediary or flow thru entity"
    intermediary: Form1042SAgent3!
    "Boxes 16a-e, Payer"
    payer: Form1042SAgent4!
    "Box 17, State and Local tax withholding"
    stateAndLocal: StateandLocalTaxWithholding1!
}

"Health Insurance Marketplace Statement"
type Form1095A2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box 1, Marketplace identifier"
    marketplaceId: String!
    "Box 2, Marketplace-assigned policy number"
    marketplacePolicyNumber: String!
    "Box 3, Policy issuer's name"
    policyIssuerName: String!
    "Box 6, Recipient's date of birth"
    recipientDateOfBirth: String!
    "Box 7, Recipient's spouse's name"
    spouseName: String!
    "Box 8, Recipient's spouse's SSN"
    spouseTin: String!
    "Box 9, Recipient's spouse's date of birth"
    spouseDateOfBirth: String!
    "Box 10, Policy start date"
    policyStartDate: String!
    "Box 11, Policy termination date"
    policyTerminationDate: String!
    "Boxes 16+, Covered Individuals"
    coveredIndividuals: [HealthInsuranceMarketplaceCoveredIndividual!]
    "Boxes 21-33, Coverage Information"
    coverages: [HealthInsuranceCoverage!]
}

"Health Coverage"
type Form1095B2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box 3, Date of birth (if SSN or other TIN is not available)"
    responsibleDateOfBirth: String!
    "Box 8, Enter letter identifying Origin of the Health Coverage"
    originOfHealthCoverageCode: String!
    "Boxes 10-15, Employer EIN, name and address"
    employer: TaxParty3!
    "Boxes 23+, Covered Individuals"
    coveredIndividuals: [HealthInsuranceCoveredIndividual!]
}

"Employer-Provided Health Insurance Offer and Coverage"
type Form1095C2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Self Insured Coverage"
    selfInsuredCoverage: Boolean!
    "Boxes 14-16, Employee Offer of Coverage"
    offersOfCoverage: [OfferofHealthInsuranceCoverage!]
    "Employee's Age on January 1"
    employeeAge: Int!
    "Plan Start Month"
    planStartMonth: Int!
    "Boxes 17+, Covered Individuals"
    coveredIndividuals: [HealthInsuranceCoveredIndividual!]
}

"Bond Tax Credit"
type Form1097BTC2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Form 1097-BTC issuer is: Issuer of bond or its agent filing current year Form 1097-BTC for credit being reported"
    filingForCredit: Boolean!
    "Form 1097-BTC issuer is: An entity or a person that received or should have received a current year Form 1097-BTC and is distributing part or all of that credit to others"
    asNominee: Boolean!
    "Box 1, Total"
    total: Float!
    "Box 2a, Code"
    bondCode: String!
    "Box 2b, Unique Identifier"
    uniqueId: String!
    "Box 3, Bond type"
    bondType: String!
    "Box 5, Amounts by month"
    amounts: [MonthandAmount!]
    "Box 6, Comments"
    comments: String!
}

"Contributions of Motor Vehicles, Boats, and Airplanes"
type Form1098C2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box 1, Date of contribution"
    dateOfContribution: String!
    "Box 2a, Odometer mileage"
    odometerMileage: Int!
    "Box 2b, Year"
    carYear: Int!
    "Box 2c, Make"
    make: String!
    "Box 2d, Model"
    model: String!
    "Box 3, Vehicle or other identification number"
    vin: String!
    "Box 4a, Donee certifies that vehicle was sold in arm's length transaction to unrelated party"
    armsLengthTransaction: Boolean!
    "Box 4b, Date of sale"
    dateOfSale: String!
    "Box 4c, Gross proceeds from sale (see instructions)"
    grossProceeds: Float!
    "Box 5a, Donee certifies that vehicle will not be transferred for money, other property, or services before completion of material improvements or significant intervening use"
    notTransferredBefore: Boolean!
    "Box 5b, Donee certifies that vehicle is to be transferred to a needy individual for significantly below fair market value in furtherance of donee's charitable purpose"
    needyIndividual: Boolean!
    "Box 5c, Donee certifies the following detailed description of material improvements or significant intervening use and duration of use"
    descriptionOfImprovements: String!
    "Box 6a, Did you provide goods or services in exchange for the vehicle? Yes"
    goodsInExchange: Boolean!
    "Box 6b, Value of goods and services provided in exchange for the vehicle"
    valueOfExchange: Float!
    "Box 6c, If this box is checked, donee certifies that the goods and services consisted solely of intangible religious benefits"
    intangibleReligious: Boolean!
    "Box 6c, Describe the goods and services, if any, that were provided"
    descriptionOfGoods: String!
    "Box 7, Under the law, the donor may not claim a deduction of more than $500 for this vehicle if this box is checked"
    maxDeductionApplies: Boolean!
}

"Student Loan Interest Statement"
type Form1098E2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Student loan interest received by lender"
    studentLoanInterest: Float!
    "Box 2, If checked, box 1 does not include loan origination fee made before September 1, 2004"
    box1ExcludesFees: Boolean!
}

"Mortgage Assistance Payments"
type Form1098MA2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Total State HFA (Housing Finance Agency) and homeowner mortgage payments"
    totalMortgagePayments: Float!
    "Box 2, State HFA (Housing Finance Agency) mortgage assistance payments"
    mortgageAssistancePayments: Float!
    "Box 3, Homeowner mortgage payments"
    homeownerMortgagePayments: Float!
}

"Qualifying Longevity Annuity Contract Information"
type Form1098Q2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Plan number"
    planNumber: String!
    "Plan name"
    planName: String!
    "Plan sponsor's EIN"
    planSponsorId: String!
    "Box 1a, Annuity amount on start date"
    annuityAmount: Float!
    "Box 1b, Annuity start date"
    startDate: String!
    "Box 2, Start date may be accelerated"
    canBeAccelerated: Boolean!
    "Box 3, Total premiums"
    totalPremiums: Float!
    "Box 4, Fair market value of qualifying longevity annuity contract (FMV of QLAC)"
    fairMarketValue: Float!
    "Box 5, Total monthly premiums paid for the contract and date of the last payment in the month"
    premiums: [DateandAmount!]
}

"Tuition Statement"
type Form1098T2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "By checking the box in STUDENT'S TIN, filer is making a true and accurate certification under penalty of perjury that they have complied with standards promulgated by the Secretary for obtaining such individual's TIN"
    studentTinCertification: Boolean!
    "Account number"
    accountNumber: String!
    "Box 8, Check if at least half-time student"
    halfTime: Boolean!
    "Box 1, Payments received for qualified tuition and related expenses"
    qualifiedTuitionFees: Float!
    "Box 4, Adjustments made for a prior year"
    adjustmentPriorYear: Float!
    "Box 5, Scholarships or grants"
    scholarship: Float!
    "Box 6, Adjustments to scholarships or grants for a prior year"
    adjustScholarship: Float!
    "Box 7, Check if the amount in box 1 or box 2 includes amounts for an academic period beginning January - March of next year"
    includeJanMar: Boolean!
    "Box 9, Check if graduate student"
    graduate: Boolean!
    "Box 10, Insurance contract reimbursement / refund"
    insuranceRefund: Float!
}

"Acquisition or Abandonment of Secured Property"
type Form1099A2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Date of lender's acquisition or knowledge of abandonment"
    dateOfAcquisition: String!
    "Box 2, Balance of principal outstanding"
    principalBalance: Float!
    "Box 4, Fair market value property"
    fairMarketValue: Float!
    "Box 5, If checked, the borrower was personally liable for repayment of the debt"
    personallyLiable: Boolean!
    "Box 6, Description of property"
    propertyDescription: String!
}

"Proceeds From Broker and Barter Exchange Transactions"
type Form1099B2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Boxes 14-16, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 8, Profit or (loss) realized in current year on closed contracts"
    profitOnClosedContracts: Float!
    "Box 9, Unrealized profit or loss on open contracts at end of last year"
    unrealizedProfitOpenContractsBegin: Float!
    "Box 10, Unrealized profit or loss on open contracts at end of current year"
    unrealizedProfitOpenContractsEnd: Float!
    "Box 11, Aggregate profit or (loss) on contracts"
    aggregateProfitOnContracts: Float!
    "Box 13, Bartering"
    bartering: Float!
    "Boxes 1-3, 5-7, 12, Security details"
    securityDetails: [SecurityDetailIRSForm1099B!]
    "Second TIN Notice"
    secondTinNotice: Boolean!
}

"Cancellation of Debt"
type Form1099C2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Date of identifiable event"
    dateOfEvent: String!
    "Box 2, Amount of debt discharged"
    amountDischarged: Float!
    "Box 3, Interest if included in box 2"
    interestIncluded: Float!
    "Box 4, Debt description"
    debtDescription: String!
    "Box 5, If checked, the debtor was personally liable for repayment of the debt"
    personallyLiable: Boolean!
    "Box 6, Identifiable debt code"
    debtCode: String!
    "Box 7, Fair market value of property"
    fairMarketValue: Float!
}

"Changes in Corporate Control and Capital Structure"
type Form1099CAP2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Date of sale or exchange"
    dateOfSale: String!
    "Box 2, Aggregate amount received"
    aggregateAmount: Float!
    "Box 3, Number of shares exchanged"
    numberOfShares: Float!
    "Box 4, Classes of stock exchanged"
    stockClasses: String!
}

"Consolidated Statement for combined IRS Form 1099s"
type Form1099ConsolidatedStatement2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Interest paid on margin account"
    marginInterestPaid: Float!
    "Payment in lieu of dividends paid"
    paymentInLieuPaid: Float!
    "Advisor fees paid"
    advisorFeesPaid: Float!
    "Other fees paid"
    otherFeesPaid: Float!
    "Accrued Interest Paid offset to form 1099-INT box 1, Corporate bond interest income"
    corporateBondInterestPaid: Float!
    "Accrued Interest Paid offset to form 1099-INT box 3, accrued U.S. Treasury Notes and Bonds interest income"
    usBondInterestPaid: Float!
    "Accrued Interest Paid offset to form 1099-INT box 8, tax exempt interest income from municipal bonds"
    taxExemptInterestPaid: Float!
    "Accrued Interest Paid offset to form 1099-INT box 9, tax exempt interest income from Private Activity Bonds"
    specifiedPabInterestPaid: Float!
}

"Dividends and Distributions"
type Form1099DIV2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1a, Total ordinary dividends"
    ordinaryDividends: Float!
    "Box 1b, Qualified dividends"
    qualifiedDividends: Float!
    "Box 2a, Total capital gain distributions"
    totalCapitalGain: Float!
    "Box 2b, Unrecaptured Section 1250 gain"
    unrecaptured1250Gain: Float!
    "Box 2c, Section 1202 gain"
    section1202Gain: Float!
    "Box 2d, Collectibles (28%) gain"
    collectiblesGain: Float!
    "Box 2e, Section 897 ordinary dividends"
    section897Dividends: Float!
    "Box 2f, Section 897 capital gain"
    section897CapitalGain: Float!
    "Box 3, Nondividend distributions"
    nonTaxableDistribution: Float!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, Section 199A dividends"
    section199ADividends: Float!
    "Box 6, Investment expenses"
    investmentExpenses: Float!
    "Box 7, Foreign tax paid"
    foreignTaxPaid: Float!
    "Box 8, Foreign country or U.S. possession"
    foreignCountry: String!
    "Box 9, Cash liquidation distributions"
    cashLiquidation: Float!
    "Box 10, Noncash liquidation distributions"
    nonCashLiquidation: Float!
    "Box 11, FATCA filing requirement"
    foreignAccountTaxCompliance: Boolean!
    "Box 12, Exempt-interest dividends"
    taxExemptInterestDividend: Float!
    "Box 13, Specified private activity bond interest dividends"
    specifiedPabInterestDividend: Float!
    "Boxes 14-16, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
    "Foreign income information"
    foreignIncomes: [DescriptionandAmount!]
    "Tax exempt income state information"
    stateTaxExemptIncomes: [DescriptionandAmount!]
    "Second TIN Notice"
    secondTinNotice: Boolean!
}

"Certain Government Payments"
type Form1099G2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Unemployment compensation"
    unemploymentCompensation: Float!
    "Box 2, State or local income tax refunds, credits, or offsets"
    taxRefund: Float!
    "Box 3, Box 2 amount is for tax year"
    refundYear: Int!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, RTAA payments"
    rtaaPayments: Float!
    "Box 6, Taxable grants"
    grants: Float!
    "Box 7, Agriculture payments"
    agriculturePayments: Float!
    "Box 8, If checked, box 2 is trade or business income"
    businessIncome: Boolean!
    "Box 9, Market gain"
    marketGain: Float!
    "Boxes 10-11, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
    "Second TIN Notice"
    secondTinNotice: Boolean!
}

"Health Coverage Tax Credit (HCTC) Advance Payments"
type Form1099H2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box 1, Amount of HCTC advance payments"
    advancePayments: Float!
    "Box 2, Number of months HCTC advance payments and reimbursement credits paid to you"
    numberOfMonths: Int!
    "Boxes 3-14, Payments by month"
    payments: [MonthandAmount!]
}

"Interest Income"
type Form1099INT2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "FATCA filing requirement"
    foreignAccountTaxCompliance: Boolean!
    "Account number"
    accountNumber: String!
    "Payer's RTN"
    payerRtn: String!
    "Box 1, Interest income"
    interestIncome: Float!
    "Box 2, Early withdrawal penalty"
    earlyWithdrawalPenalty: Float!
    "Box 3, Interest on U.S. Savings Bonds and Treasury obligations"
    usBondInterest: Float!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, Investment expenses"
    investmentExpenses: Float!
    "Box 6, Foreign tax paid"
    foreignTaxPaid: Float!
    "Box 7, Foreign country or U.S. possession"
    foreignCountry: String!
    "Box 8, Tax-exempt interest"
    taxExemptInterest: Float!
    "Box 9, Specified private activity bond interest"
    specifiedPabInterest: Float!
    "Box 10, Market discount"
    marketDiscount: Float!
    "Box 11, Bond premium"
    bondPremium: Float!
    "Box 12, Bond premium on Treasury obligations"
    usBondPremium: Float!
    "Box 13, Bond premium on tax-exempt bond"
    taxExemptBondPremium: Float!
    "Box 14, Tax-exempt bond CUSIP no."
    cusipNumber: String!
    "Boxes 15-17, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
    "Supplemental foreign income amount information (description is country)"
    foreignIncomes: [DescriptionandAmount!]
    "Supplemental tax-exempt income by state (description is state)"
    stateTaxExemptIncome: [DescriptionandAmount!]
    "Second TIN Notice"
    secondTinNotice: Boolean!
}

"Merchant Card and Third-Party Network Payments"
type Form1099K2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Check to indicate if FILER is a Payment Settlement Entity (PSE)"
    paymentSettlementEntity: Boolean!
    "Check to indicate if FILER is an Electronic Payment Facilitator (EPF) / Other third party"
    electronicPaymentFacilitator: Boolean!
    "Check to indicate transactions reported are: Payment card"
    paymentCard: Boolean!
    "Check to indicate transactions reported are: Third party network"
    thirdPartyNetwork: Boolean!
    "PSE's name"
    pseName: String!
    "PSE's phone number"
    psePhone: TelephoneNumberPlusExtension2!
    "Account number"
    accountNumber: String!
    "Box 1a, Gross amount of payment card/third party network transactions"
    grossAmount: Float!
    "Box 1b, Card Not Present Transactions"
    cardNotPresent: Float!
    "Box 2, Merchant category code"
    merchantCategoryCode: String!
    "Box 3, Number of purchase transactions"
    numberOfTransactions: Float!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, Monthly amounts"
    monthAmounts: [MonthandAmount!]
    "Boxes 6-8, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
    "Second TIN Notice"
    secondTinNotice: Boolean!
}

"Reportable Life Insurance Sale"
type Form1099LS2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Policy number"
    policyNumber: String!
    "Box 1, Amount paid to payment recipient"
    payment: Float!
    "Box 2, Date of sale"
    saleDate: String!
    "Issuer's name"
    issuerName: String!
    "Acquirer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (If different from ACQUIRER)"
    contactNameAddress: NameAddressandPhone1!
}

"Long-Term Care and Accelerated Death Benefits"
type Form1099LTC2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Gross long-term care benefits paid"
    ltcBenefits: Float!
    "Box 2, Accelerated death benefits paid"
    deathBenefits: Float!
    "Box 3, Per diem"
    perDiem: Boolean!
    "Box 3, Reimbursed amount"
    reimbursedAmount: Boolean!
    "INSURED'S taxpayer identification no."
    insuredId: String!
    "Insured name and address"
    insuredNameAddress: NameandAddress1!
    "Box 4, Qualified contract"
    qualifiedContract: Boolean!
    "Box 5, Chronically ill"
    chronicallyIll: Boolean!
    "Box 5, Terminally ill"
    terminallyIll: Boolean!
    "Date certified"
    dateCertified: String!
}

"Miscellaneous Income"
type Form1099MISC2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Rents"
    rents: Float!
    "Box 2, Royalties"
    royalties: Float!
    "Box 3, Other income"
    otherIncome: Float!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, Fishing boat proceeds"
    fishingBoatProceeds: Float!
    "Box 6, Medical and health care payments"
    medicalHealthPayment: Float!
    "Box 7, Payer made direct sales of $5,000 or more of consumer products to a buyer (recipient) for resale"
    payerDirectSales: Boolean!
    "Box 8, Substitute payments in lieu of dividends or interest"
    substitutePayments: Float!
    "Box 9, Crop insurance proceeds"
    cropInsurance: Float!
    "Second TIN Notice"
    secondTinNotice: Boolean!
    "Box 10, Gross proceeds paid to an attorney"
    grossAttorney: Float!
    "Box 11, Fish purchased for resale"
    fishPurchased: Float!
    "Box 12, Section 409A deferrals"
    section409ADeferrals: Float!
    "Box 13, FATCA filing requirement"
    foreignAccountTaxCompliance: Boolean!
    "Box 14, Excess golden parachute payments"
    excessGolden: Float!
    "Box 15, Nonqualified Deferred Compensation"
    nonQualifiedDeferredCompensation: Float!
    "Boxes 16-18, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
}

"Nonemployee Compensation"
type Form1099NEC2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Second TIN Notice"
    secondTinNotice: Boolean!
    "Box 1, Nonemployee compensation"
    nonEmployeeCompensation: Float!
    "Box 2, Payer made direct sales of $5,000 or more of consumer products to a buyer (recipient) for resale"
    payerDirectSales: Boolean!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Boxes 5-7, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
}

"Original Issue Discount"
type Form1099OID2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "FATCA filing requirement"
    foreignAccountTaxCompliance: Boolean!
    "Account number"
    accountNumber: String!
    "Box 1, Original issue discount"
    originalIssueDiscount: Float!
    "Box 2, Other periodic interest"
    otherPeriodicInterest: Float!
    "Box 3, Early withdrawal penalty"
    earlyWithdrawalPenalty: Float!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, Market discount"
    marketDiscount: Float!
    "Box 6, Acquisition premium"
    acquisitionPremium: Float!
    "Box 7, Description"
    oidDescription: String!
    "Box 8, Original issue discount on U.S. Treasury obligations"
    discountOnTreasuryObligations: Float!
    "Box 9, Investment expenses"
    investmentExpenses: Float!
    "Box 10, Bond premium"
    bondPremium: Float!
    "Box 11, Tax-exempt OID"
    taxExemptOid: Float!
    "Boxes 12-14, State and Local tax withheld"
    stateAndLocal: [StateandLocalTaxWithholding!]
    "Supplemental: State name and tax-exempt OID by state"
    stateExemptOid: [DescriptionandAmount!]
    "Second TIN Notice"
    secondTinNotice: Boolean!
}

"Taxable Distributions Received From Cooperatives"
type Form1099PATR2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Patronage dividends"
    patronageDividends: Float!
    "Box 2, Nonpatronage distributions"
    nonpatronageDistributions: Float!
    "Box 3, Per-unit retain allocations"
    perUnitRetainAllocations: Float!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, Redemption of nonqualified notices and retain allocations"
    redemption: Float!
    "Box 6, Section 199A(g) deduction"
    section199Deduction: Float!
    "Box 7, Qualified payments"
    qualifiedPayments: Float!
    "Box 8, Section 199A(a) qualified items"
    section199QualifiedItems: Float!
    "Box 9, Section 199A(a) SSTB (Specified Service Trade or Business) items"
    section199SstbItems: Float!
    "Box 10, Investment credit"
    investmentCredit: Float!
    "Box 11, Work opportunity credit"
    workOpportunityCredit: Float!
    "Box 12, Other credits and deductions"
    otherCreditsAndDeductions: Float!
    "Box 13, Specified Cooperative"
    specifiedCoop: Boolean!
    "State and Local tax withholding, from IRS's IRIS schema"
    stateAndLocal: StateandLocalTaxWithholding2!
    "Second TIN Notice"
    secondTinNotice: Boolean!
}

"Payments From Qualified Education Programs"
type Form1099Q2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Gross distribution"
    grossDistribution: Float!
    "Box 2, Earnings"
    earnings: Float!
    "Box 3, Basis"
    basis: Float!
    "Box 4, Trustee-to-trustee transfer"
    trusteeToTrustee: Boolean!
    "Box 5a, Qualified tuition plan - Private"
    tuitionPlanPrivate: Boolean!
    "Box 5b, Qualified tuition plan - Public"
    tuitionPlanPublic: Boolean!
    "Box 5c, Coverdell ESA"
    coverdellEsa: Boolean!
    "Box 6, If this box is checked, the recipient is not the designated beneficiary"
    recipientIsNotBeneficiary: Boolean!
    "If fair market value (FMV) is included, see Pub. 970, Tax Benefits for Education, for how to figure earnings"
    fairMarketValue: Float!
}

"Distributions From ABLE Accounts"
type Form1099QA2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Gross distribution"
    grossDistribution: Float!
    "Box 2, Earnings"
    earnings: Float!
    "Box 3, Basis"
    basis: Float!
    "Box 4, Program-to-program transfer"
    programTransfer: Boolean!
    "Box 5, Check if ABLE account terminated in current year"
    terminated: Boolean!
    "Box 6, Check if the recipient is not the designated beneficiary"
    notBeneficiary: Boolean!
}

"Distributions from Pensions, Annuities, Retirement or Profit-Sharing Plans, IRAs, Insurance Contracts, etc."
type Form1099R2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box 10, Amount allocable to IRR within 5 years"
    allocableToIRR: Float!
    "Box 11, First year of designated Roth contributions. A four-digit year. (Like `TaxYear` definition, but lower minimum since first year of Roth IRAs was 1997)"
    firstYearOfRoth: Int!
    "Account number"
    recipientAccountNumber: String!
    "Box 1, Gross distribution"
    grossDistribution: Float!
    "Box 2a, Taxable amount"
    taxableAmount: Float!
    "Box 2b, Taxable amount not determined"
    taxableAmountNotDetermined: Boolean!
    "Box 2c, Total distribution"
    totalDistribution: Boolean!
    "Box 3, Capital gain"
    capitalGain: Float!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, Employee contributions"
    employeeContributions: Float!
    "Box 6, Net unrealized appreciation"
    netUnrealizedAppreciation: Float!
    "Box 7, Distribution codes"
    distributionCodes: [String!]
    "Box 7b, IRA/SEP/SIMPLE"
    iraSepSimple: Boolean!
    "Box 8, Other"
    otherAmount: Float!
    "Box 8, Other percent"
    otherPercent: Float!
    "Box 9a, Your percent of total distribution"
    yourPercentOfTotal: Float!
    "Box 9b, Total employee contributions"
    totalEmployeeContributions: Float!
    "Box 12, FATCA filing requirement"
    foreignAccountTaxCompliance: Boolean!
    "Box 13, Date of payment"
    dateOfPayment: String!
    "Boxes 14-19, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
}

"Proceeds From Real Estate Transactions"
type Form1099S2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account or escrow number"
    accountNumber: String!
    "Box 1, Date of closing"
    dateOfClosing: String!
    "Box 2, Gross proceeds"
    grossProceeds: Float!
    "Box 3, Address or legal description"
    addressOrLegalDescription: String!
    "Box 4, Transferor received or will receive property or services as part of the consideration (if checked)"
    receivedOtherConsideration: Boolean!
    "Box 5, If checked, transferor is a foreign person (nonresident alien, foreign partnership, foreign estate, or foreign trust)"
    foreignPerson: Boolean!
    "Box 6, Buyer's part of real estate tax"
    realEstateTax: Float!
}

"Distributions From an HSA, Archer MSA, or Medicare Advantage MSA"
type Form1099SA2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Gross distribution"
    grossDistribution: Float!
    "Box 2, Earnings on excess contributions"
    earnings: Float!
    "Box 3, Distribution code"
    distributionCode: String!
    "Box 4, FMV on date of death"
    fairMarketValue: Float!
    "Box 5a, HSA"
    hsa: Boolean!
    "Box 5b, Archer MSA"
    archerAccount: Boolean!
    "Box 5c, Medicare Advantage (MA) MSA"
    medicalSavingsAccount: Boolean!
}

"Seller's Investment in Life Insurance Contract"
type Form1099SB2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Policy number"
    policyNumber: String!
    "Box 1, Investment in contract"
    contractInvestment: Float!
    "Box 2, Surrender amount"
    surrenderAmount: Float!
    "Issuer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (if different from ISSUER)"
    contactNameAddress: NameAddressandPhone2!
}

"Coverdell ESA Contribution Information"
type Form5498ESA2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Coverdell ESA contributions"
    coverdellEsaContributions: Float!
    "Box 2, Rollover contributions"
    rolloverContributions: Float!
}

"ABLE Account Contribution Information"
type Form5498QA2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, ABLE contributions"
    ableContributions: Float!
    "Box 2, ABLE to ABLE Rollovers"
    rollovers: Float!
    "Box 3, Cumulative contributions"
    cumulativeContributions: Float!
    "Box 4, Fair market value"
    fairMarketValue: Float!
    "Box 5, Check if account opened in current tax year"
    openedInTaxYear: Boolean!
    "Box 6, Basis of eligibility"
    basisOfDisabilityCode: String!
    "Box 7, Code"
    typeOfDisabilityCode: String!
}

"HSA, Archer MSA, or Medicare Advantage MSA Information"
type Form5498SA2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Employee or self-employed person's Archer MSA contributions made in current and following years for current year"
    msaContributions: Float!
    "Box 2, Total contributions made in current year"
    totalContributions: Float!
    "Box 3, Total HSA or Archer MSA contributions made in following year for current year"
    totalPostYearEnd: Float!
    "Box 4, Rollover contributions"
    rolloverContributions: Float!
    "Box 5, Fair market value of HSA, Archer MSA, or Medicare Advantage (MA) MSA"
    fairMarketValue: Float!
    "Box 6a, HSA"
    hsa: Boolean!
    "Box 6b, Archer MSA"
    archer: Boolean!
    "Box 6c, Medicare Advantage (MA) MSA"
    maMsa: Boolean!
}

"Boxes 15a-i, Intermediary or flow thru entity"
type Form1042SAgent3 {
    "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
    tin: String!
    "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
    partyType: TaxPartyType2!
    "Individual issuer or recipient name"
    individualName: Individualname4!
    "Business issuer or recipient name"
    businessName: Businessname1!
    "Issuer or recipient address"
    address: Address1!
    "Issuer or recipient telephone number"
    phone: TelephoneNumberPlusExtension4!
    "Issuer or recipient email address. (Additional information, not part of IRS forms)"
    email: String!
    "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer"
    ch3StatusCode: String!
    "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer"
    ch4StatusCode: String!
    "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer"
    giin: String!
    "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity"
    foreignTin: String!
}

"Boxes 16a-e, Payer"
type Form1042SAgent4 {
    "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
    tin: String!
    "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
    partyType: TaxPartyType2!
    "Individual issuer or recipient name"
    individualName: Individualname4!
    "Business issuer or recipient name"
    businessName: Businessname1!
    "Issuer or recipient address"
    address: Address1!
    "Issuer or recipient telephone number"
    phone: TelephoneNumberPlusExtension4!
    "Issuer or recipient email address. (Additional information, not part of IRS forms)"
    email: String!
    "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer"
    ch3StatusCode: String!
    "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer"
    ch4StatusCode: String!
    "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer"
    giin: String!
    "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity"
    foreignTin: String!
}

"Beneficiary's Share of Income, Deductions, Credits, etc."
type Form1041K12 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Final K-1"
    finalK1: Boolean!
    "Amended K-1"
    amendedK1: Boolean!
    "Fiscal year begin date"
    fiscalYearBegin: String!
    "Fiscal year end date"
    fiscalYearEnd: String!
    "Box D, Check if Form 1041-T was filed"
    form1041T: Boolean!
    "Box D, and enter the date it was filed"
    date1041T: String!
    "Box E, Check if this is the final Form 1041 for the estate or trust"
    final1041: Boolean!
    "Box H, Domestic beneficiary"
    domestic: Boolean!
    "Box H, Foreign beneficiary"
    foreign: Boolean!
    "Box 1, Interest income"
    interestIncome: Float!
    "Box 2a, Ordinary dividends"
    ordinaryDividends: Float!
    "Box 2b, Qualified dividends"
    qualifiedDividends: Float!
    "Box 3, Net short-term capital gain"
    netShortTermGain: Float!
    "Box 4a, Net long-term capital gain"
    netLongTermGain: Float!
    "Box 4b, 28% rate gain"
    gain28Rate: Float!
    "Box 4c, Unrecaptured section 1250 gain"
    unrecaptured1250Gain: Float!
    "Box 5, Other portfolio and nonbusiness income"
    otherPortfolioIncome: Float!
    "Box 6, Ordinary business income"
    ordinaryBusinessIncome: Float!
    "Box 7, Net rental real estate income"
    netRentalRealEstateIncome: Float!
    "Box 8, Other rental income"
    otherRentalIncome: Float!
    "Box 9, Directly apportioned deductions"
    directlyApportionedDeductions: [CodeandAmount!]
    "Box 10, Estate tax deduction"
    estateTaxDeduction: Float!
    "Box 11, Final year deductions"
    finalYearDeductions: [CodeandAmount!]
    "Box C, Fiduciary's name and address"
    fiduciary: TaxParty2!
    "Box 12, Alternative minimum tax adjustment"
    amtAdjustments: [CodeandAmount!]
    "Box 13, Credits and credit recapture"
    credits: [CodeandAmount!]
    "Box 14, Other information"
    otherInfo: [CodeandAmount!]
}

"Partner's Share of Income, Deductions, Credits, etc."
type Form1065K12 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Fiscal year begin date"
    fiscalYearBegin: String!
    "Fiscal year end data"
    fiscalYearEnd: String!
    "Final K-1"
    finalK1: Boolean!
    "Amended K-1"
    amendedK1: Boolean!
    "Box C, IRS Center where partnership filed return"
    irsCenter: String!
    "Box D, Check if this is a publicly traded partnership (PTP)"
    publiclyTraded: Boolean!
    "Box G, General partner or LLC member-manager"
    generalPartner: Boolean!
    "Box G, Limited partner or other LLC member"
    limitedPartner: Boolean!
    "Box H1, Domestic partner"
    domestic: Boolean!
    "Box H1, Foreign partner"
    foreign: Boolean!
    "Box H2, Check if the partner is a disregarded entity (DE), and enter the partner's TIN and Name"
    disregardedEntity: Boolean!
    "Box H2, Disregarded entity partner's TIN"
    disregardedEntityTin: String!
    "Box H2, Disregarded entity partner's Name"
    disregardedEntityName: String!
    "Box I1, What type of entity is this partner?"
    entityType: String!
    "Box I2, If this partner is a retirement plan (IRA/SEP/Keogh/etc.), check here"
    retirementPlan: Boolean!
    "Box J, Partner's share of profit - beginning"
    profitShareBegin: Float!
    "Box J, Partner's share of profit - ending"
    profitShareEnd: Float!
    "Box J, Partner's share of loss - beginning"
    lossShareBegin: Float!
    "Box J, Partner's share of loss - ending"
    lossShareEnd: Float!
    "Box J, Partner's share of capital - beginning"
    capitalShareBegin: Float!
    "Box J, Partner's share of capital - ending"
    capitalShareEnd: Float!
    "Box J, Check if decrease is due to sale or exchange of partnership interest. Deprecated and no longer used beginning tax year 2023. Use `decreaseDueToSale` and `decreaseDueToExchange` instead"
    decreaseDueToSaleOrExchange: Boolean!
    "Box J, Check if decrease is due to sale of partnership interest"
    decreaseDueToSale: Boolean!
    "Box J, Check if decrease is due to exchange of partnership interest"
    decreaseDueToExchange: Boolean!
    "Box K1, Partner's share of liabilities - beginning - nonrecourse"
    nonrecourseLiabilityShareBegin: Float!
    "Box K1, Partner's share of liabilities - ending - nonrecourse"
    nonrecourseLiabilityShareEnd: Float!
    "Box K1, Partner's share of liabilities - beginning - qualified nonrecourse financing"
    qualifiedLiabilityShareBegin: Float!
    "Box K1, Partner's share of liabilities - ending - qualified nonrecourse financing"
    qualifiedLiabilityShareEnd: Float!
    "Box K1, Partner's share of liabilities - beginning - recourse"
    recourseLiabilityShareBegin: Float!
    "Box K1, Partner's share of liabilities - ending - recourse"
    recourseLiabilityShareEnd: Float!
    "Box K2, Check this box if item K1 includes liability amounts from lower tier partnerships"
    includesLowerTierLiability: Boolean!
    "Box K3, Check if any of the above liability is subject to guarantees or other payment obligations by the partner"
    liabilitySubjectToGuarantees: Boolean!
    "Box L, Partner's capital account analysis - Beginning capital account"
    capitalAccountBegin: Float!
    "Box L, Partner's capital account analysis - Capital contributed during the year"
    capitalAccountContributions: Float!
    "Box L, Partner's capital account analysis - Current year net income (loss)"
    capitalAccountIncrease: Float!
    "Box L, Partner's capital account analysis - Other increase (decrease)"
    capitalAccountOther: Float!
    "Box L, Partner's capital account analysis - Withdrawals & distributions"
    capitalAccountWithdrawals: Float!
    "Box L, Partner's capital account analysis - Ending capital account"
    capitalAccountEnd: Float!
    "Box M, Did the partner contribute property with a built-in gain or loss? - Yes"
    builtInGain: Boolean!
    "Box N, Partner's Share of Net Unrecognized Section 704(c) Gain or (Loss) - beginning"
    unrecognizedSection704Begin: Float!
    "Box N, Partner's Share of Net Unrecognized Section 704(c) Gain or (Loss) - ending"
    unrecognizedSection704End: Float!
    "Box 1, Ordinary business income (loss)"
    ordinaryIncome: Float!
    "Box 2, Net rental real estate income (loss)"
    netRentalRealEstateIncome: Float!
    "Box 3, Other net rental income (loss)"
    otherRentalIncome: Float!
    "Box 4a, Guaranteed payments for services"
    guaranteedPaymentServices: Float!
    "Box 4b, Guaranteed payments for capital"
    guaranteedPaymentCapital: Float!
    "Box 4c, Total guaranteed payments"
    guaranteedPayment: Float!
    "Box 5, Interest income"
    interestIncome: Float!
    "Box 6a, Ordinary dividends"
    ordinaryDividends: Float!
    "Box 6b, Qualified dividends"
    qualifiedDividends: Float!
    "Box 6c, Dividend equivalents"
    dividendEquivalents: Float!
    "Box 7, Royalties"
    royalties: Float!
    "Box 8, Net short-term capital gain (loss)"
    netShortTermGain: Float!
    "Box 9a, Net long-term capital gain (loss)"
    netLongTermGain: Float!
    "Box 9b, Collectibles (28%) gain (loss)"
    collectiblesGain: Float!
    "Box 9c, Unrecaptured section 1250 gain"
    unrecaptured1250Gain: Float!
    "Box 10, Net section 1231 gain (loss)"
    net1231Gain: Float!
    "Box 11, Other income"
    otherIncome: [CodeandAmount!]
    "Box 12, Section 179 deduction"
    section179Deduction: Float!
    "Box 13, Other deductions"
    otherDeductions: [CodeandAmount!]
    "Box 14, Self-employment earnings (loss)"
    selfEmployment: [CodeandAmount!]
    "Box 15, Credits"
    credits: [CodeandAmount!]
    "Box 16, Schedule K-3 is attached"
    scheduleK3: Boolean!
    "Box 17, Alternative minimum tax (AMT) items"
    amtItems: [CodeandAmount!]
    "Box 18, Tax-exempt income and nondeductible expenses"
    taxExemptIncome: [CodeandAmount!]
    "Box 19, Distributions"
    distributions: [CodeandAmount!]
    "Box 20, Other information"
    otherInfo: [CodeandAmount!]
    "Box 21, Foreign taxes paid or accrued"
    foreignTaxPaid: Float!
    "Box 22, More than one activity for at-risk purposes"
    multipleAtRiskActivities: Boolean!
    "Box 23, More than one activity for passive activity purposes"
    multiplePassiveActivities: Boolean!
}

"Shareholder's Share of Income, Deductions, Credits, etc."
type Form1120SK12 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Final K-1"
    finalK1: Boolean!
    "Amended K-1"
    amendedK1: Boolean!
    "Fiscal year begin date"
    fiscalYearBegin: String!
    "Fiscal year end date"
    fiscalYearEnd: String!
    "Box C, IRS Center where corporation filed return"
    irsCenter: String!
    "Box D, Corporation's total number of shares, Beginning of tax year"
    corporationBeginningShares: Float!
    "Box D, Corporation's total number of shares, End of tax year"
    corporationEndingShares: Float!
    "Box G, Current year allocation percentage"
    percentOwnership: Float!
    "Box H, Shareholder's number of shares, Beginning of tax year"
    beginningShares: Float!
    "Box H, Shareholder's number of shares, End of tax year"
    endingShares: Float!
    "Box I, Loans from shareholder, Beginning of tax year"
    beginningLoans: Float!
    "Box I, Loans from shareholder, Ending of tax year"
    endingLoans: Float!
    "Box 1, Ordinary business income (loss)"
    ordinaryIncome: Float!
    "Box 2, Net rental real estate income (loss)"
    netRentalRealEstateIncome: Float!
    "Box 3, Other net rental income (loss)"
    otherRentalIncome: Float!
    "Box 4, Interest income"
    interestIncome: Float!
    "Box 5a, Ordinary dividends"
    ordinaryDividends: Float!
    "Box 5b, Qualified dividends"
    qualifiedDividends: Float!
    "Box 6, Royalties"
    royalties: Float!
    "Box 7, Net short-term capital gain (loss)"
    netShortTermGain: Float!
    "Box 8a, Net long-term capital gain (loss)"
    netLongTermGain: Float!
    "Box 8b, Collectibles (28%) gain (loss)"
    collectiblesGain: Float!
    "Box 8c, Unrecaptured section 1250 gain"
    unrecaptured1250Gain: Float!
    "Box 9, Net section 1231 gain (loss)"
    net1231Gain: Float!
    "Box 10, Other income (loss)"
    otherIncome: [CodeandAmount!]
    "Box 11, Section 179 deduction"
    section179Deduction: Float!
    "Box 12, Other deductions"
    otherDeductions: [CodeandAmount!]
    "Box 13, Credits"
    credits: [CodeandAmount!]
    "Box 14, Schedule K-3 is attached"
    scheduleK3: Boolean!
    "Box 15, Alternative minimum tax (AMT) items"
    amtItems: [CodeandAmount!]
    "Box 16, Items affecting shareholder basis"
    basisItems: [CodeandAmount!]
    "Box 17, Other information"
    otherInfo: [CodeandAmount!]
    "Box 18, More than one activity for at-risk purposes"
    multipleAtRiskActivities: Boolean!
    "Box 19, More than one activity for passive activity purposes"
    multiplePassiveActivities: Boolean!
}

"Mortgage Interest Statement"
type Form10982 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box 9, Number of properties securing the mortgage"
    mortgagedProperties: Int!
    "Box 10, Other (property tax)"
    otherInformation: String!
    "Account number"
    accountNumber: String!
    "Box 1, Mortgage interest received from borrower"
    mortgageInterest: Float!
    "Box 2, Outstanding mortgage principal"
    outstandingPrincipal: Float!
    "Box 3, Mortgage origination date"
    originationDate: String!
    "Box 4, Refund of overpaid interest"
    overpaidRefund: Float!
    "Box 5, Mortgage insurance premiums"
    mortgageInsurance: Float!
    "Box 6, Points paid on purchase of principal residence"
    pointsPaid: Float!
    "Box 7, Is address of property securing mortgage same as PAYER'S/BORROWER'S address"
    isPropertyAddressSameAsBorrowerAddress: Boolean!
    "Box 11, Mortgage acquisition date"
    acquisitionDate: String!
    "Box 8, Address of property securing mortgage"
    propertyAddress: Address5!
    "Box 10, Property tax"
    propertyTax: Float!
    "Box 8, Description of property securing mortgage, if property securing mortgage has no address"
    propertyDescription: String!
}

"Notice to Shareholder of Undistributed Long-Term Capital Gains"
type Form24392 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Fiscal year begin date"
    fiscalYearBegin: String!
    "Fiscal year end date"
    fiscalYearEnd: String!
    "Box 1a, Total undistributed long-term capital gains"
    undistributedLongTermCapitalGains: Float!
    "Box 1b, Unrecaptured section 1250 gain"
    unrecaptured1250Gain: Float!
    "Box 1c, Section 1202 gain"
    section1202Gain: Float!
    "Box 1d, Collectibles (28%) gain"
    collectiblesGain: Float!
    "Box 2, Tax paid by the RIC or REIT on the box 1a gains"
    taxPaid: Float!
}

"Exercise of an Incentive Stock Option Under Section 422(b)"
type Form39212 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Date option granted"
    optionGrantDate: String!
    "Box 2, Date option exercised"
    optionExerciseDate: String!
    "Box 3, Exercise price per share"
    exercisePrice: Float!
    "Box 4, Fair market value per share on exercise date"
    exerciseMarketValue: Float!
    "Box 5, Number of shares transferred"
    numberOfShares: Float!
    "Box 6, If other than TRANSFEROR, name, address and tin of corporation whose stock is being transferred"
    corporation: TaxParty4!
}

"Transfer of Stock Acquired Through an Employee Stock Purchase Plan under Section 423(c)"
type Form39222 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, Date option granted"
    optionGrantDate: String!
    "Box 2, Date option exercised"
    optionExerciseDate: String!
    "Box 3, Fair market value per share on grant date"
    grantMarketValue: Float!
    "Box 4, Fair market value per share on exercise date"
    exerciseMarketValue: Float!
    "Box 5, Exercise price paid per share"
    exercisePrice: Float!
    "Box 6, Number of shares transferred"
    numberOfShares: Float!
    "Box 7, Date legal title transferred"
    titleTransferDate: String!
    "Box 8, Exercise price per share determined as if the option was exercised on the option granted date"
    grantDateExercisePrice: Float!
}

"IRA Contribution Information"
type Form54982 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Account number"
    accountNumber: String!
    "Box 1, IRA contributions"
    iraContributions: Float!
    "Box 2, Rollover contributions"
    rolloverContributions: Float!
    "Box 3, Roth IRA conversion amount"
    rothIraConversion: Float!
    "Box 4, Recharacterized contributions"
    recharacterizedContributions: Float!
    "Box 5, Fair market value of account"
    fairMarketValue: Float!
    "Box 6, Life insurance cost included in box 1"
    lifeInsuranceCost: Float!
    "Box 7a, IRA"
    ira: Boolean!
    "Box 7b, SEP"
    sep: Boolean!
    "Box 7c, SIMPLE"
    simple: Boolean!
    "Box 7d, Roth IRA"
    rothIra: Boolean!
    "Box 8, SEP contributions"
    sepContributions: Float!
    "Box 9, SIMPLE contributions"
    simpleContributions: Float!
    "Box 10, Roth IRA contributions"
    rothIraContributions: Float!
    "Box 11, If checked, required minimum distribution for next year"
    rmdNextYear: Boolean!
    "Box 12a, RMD date"
    rmdDate: String!
    "Box 12b, RMD amount"
    rmdAmount: Float!
    "Box 13a, Postponed contribution"
    postponedContribution: Float!
    "Box 13b, Year"
    postponedYear: Int!
    "Box 13c, Code"
    postponedCode: String!
    "Box 14a, Repayments"
    repayments: Float!
    "Box 14b, Code"
    repayCode: String!
    "Box 15a, FMV of certain specified assets"
    fmvSpecifiedAssets: Float!
    "Box 15b, Code(s)"
    specifiedCodes: String!
}

"IRS form W-2c, Corrected Wage and Tax Statement"
type FormW2c2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box e, Corrected SSN and/or name"
    correctedTinOrName: Boolean!
    "Box f, Employee's previously reported SSN"
    previousEmployeeTin: String!
    "Box g, Employee's previously reported name"
    previousEmployeeName: Individualname3!
    "Boxes 1-20 of Previously reported Wage and Tax Statement"
    originalW2: FormW21!
    "Boxes 1-20 of Correct information Wage and Tax Statement"
    correctedW2: FormW22!
}

"Certain Gambling Winnings"
type FormW2G2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Box 1, Reportable winnings"
    winnings: Float!
    "Box 2, Date won"
    dateWon: String!
    "Box 3, Type of wager"
    typeOfWager: String!
    "Box 4, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 5, Transaction"
    transaction: String!
    "Box 6, Race"
    race: String!
    "Box 7, Winnings from identical wagers"
    identicalWinnings: Float!
    "Box 8, Cashier"
    cashier: String!
    "Box 10, Window"
    window: String!
    "Box 11, First I.D."
    firstId: String!
    "Box 12, Second I.D."
    secondId: String!
    "Boxes 13-18, State and Local tax withholding, use income fields for state (box 14) and local (box 16) winnings amounts"
    stateAndLocal: [StateandLocalTaxWithholding!]
}

"Boxes 1-20 of Previously reported Wage and Tax Statement"
type FormW21 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Control number"
    controlNumber: String!
    "Box 1, Wages, tips, other compensation"
    wages: Float!
    "Box 2, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 3, Social security wages"
    socialSecurityWages: Float!
    "Box 4, Social security tax withheld"
    socialSecurityTaxWithheld: Float!
    "Box 5, Medicare wages and tips"
    medicareWages: Float!
    "Box 6, Medicare tax withheld"
    medicareTaxWithheld: Float!
    "Box 7, Social security tips"
    socialSecurityTips: Float!
    "Box 8, Allocated tips"
    allocatedTips: Float!
    "Box 10, Dependent care benefits"
    dependentCareBenefit: Float!
    "Box 11, Nonqualified plans"
    nonQualifiedPlan: Float!
    "Box 12, Codes and amounts"
    codes: [CodeandAmount!]
    "Box 13, Statutory employee"
    statutory: Boolean!
    "Box 13, Retirement plan"
    retirementPlan: Boolean!
    "Box 13, Third-party sick pay"
    thirdPartySickPay: Boolean!
    "Employee Stock Purchase Plan Qualified Disposition amount"
    esppQualified: Float!
    "Employee Stock Purchase Plan Nonqualified Disposition amount"
    esppNonQualified: Float!
    "Box 14, Other descriptions and amounts"
    other: [DescriptionandAmount!]
    "Boxes 15-20, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
}

"Boxes 1-20 of Correct information Wage and Tax Statement"
type FormW22 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Control number"
    controlNumber: String!
    "Box 1, Wages, tips, other compensation"
    wages: Float!
    "Box 2, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 3, Social security wages"
    socialSecurityWages: Float!
    "Box 4, Social security tax withheld"
    socialSecurityTaxWithheld: Float!
    "Box 5, Medicare wages and tips"
    medicareWages: Float!
    "Box 6, Medicare tax withheld"
    medicareTaxWithheld: Float!
    "Box 7, Social security tips"
    socialSecurityTips: Float!
    "Box 8, Allocated tips"
    allocatedTips: Float!
    "Box 10, Dependent care benefits"
    dependentCareBenefit: Float!
    "Box 11, Nonqualified plans"
    nonQualifiedPlan: Float!
    "Box 12, Codes and amounts"
    codes: [CodeandAmount!]
    "Box 13, Statutory employee"
    statutory: Boolean!
    "Box 13, Retirement plan"
    retirementPlan: Boolean!
    "Box 13, Third-party sick pay"
    thirdPartySickPay: Boolean!
    "Employee Stock Purchase Plan Qualified Disposition amount"
    esppQualified: Float!
    "Employee Stock Purchase Plan Nonqualified Disposition amount"
    esppNonQualified: Float!
    "Box 14, Other descriptions and amounts"
    other: [DescriptionandAmount!]
    "Boxes 15-20, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
}

"Wage and Tax Statement"
type FormW24 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "True to indicate this is a corrected tax form"
    corrected: Boolean!
    "Long-term persistent identity of the source account. Not the account number"
    accountId: String!
    "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
    taxFormId: String!
    "Date of production or delivery of the tax form"
    taxFormDate: String!
    "Additional explanation text or content about this tax form"
    additionalInformation: String!
    "Enumerated name of the tax form entity e.g. \"TaxW2\""
    taxFormType: TypeFormType2!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    issuer: TaxParty8!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
    recipient: TaxParty1!
    "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address."
    attributes: [TaxFormAttribute!]
    "Present if an error was encountered while retrieving this form"
    error: Error2!
    "Links to retrieve this form as data or image, or to invoke other APIs"
    links: [HATEOASLink!]
    "Control number"
    controlNumber: String!
    "Box 1, Wages, tips, other compensation"
    wages: Float!
    "Box 2, Federal income tax withheld"
    federalTaxWithheld: Float!
    "Box 3, Social security wages"
    socialSecurityWages: Float!
    "Box 4, Social security tax withheld"
    socialSecurityTaxWithheld: Float!
    "Box 5, Medicare wages and tips"
    medicareWages: Float!
    "Box 6, Medicare tax withheld"
    medicareTaxWithheld: Float!
    "Box 7, Social security tips"
    socialSecurityTips: Float!
    "Box 8, Allocated tips"
    allocatedTips: Float!
    "Box 10, Dependent care benefits"
    dependentCareBenefit: Float!
    "Box 11, Nonqualified plans"
    nonQualifiedPlan: Float!
    "Box 12, Codes and amounts"
    codes: [CodeandAmount!]
    "Box 13, Statutory employee"
    statutory: Boolean!
    "Box 13, Retirement plan"
    retirementPlan: Boolean!
    "Box 13, Third-party sick pay"
    thirdPartySickPay: Boolean!
    "Employee Stock Purchase Plan Qualified Disposition amount"
    esppQualified: Float!
    "Employee Stock Purchase Plan Nonqualified Disposition amount"
    esppNonQualified: Float!
    "Box 14, Other descriptions and amounts"
    other: [DescriptionandAmount!]
    "Boxes 15-20, State and Local tax withholding"
    stateAndLocal: [StateandLocalTaxWithholding!]
}

type Holding {
    "Long term persistent identity of the holding"
    holdingId: String!
    "Unique identifier of the security."
    securityId: String!
    "Security identifier type"
    securityIdType: SecurityIdType!
    "Breakdown by tax lot."
    taxLots: [Items!]
}

"Name of responsible individual"
type Individualname1 {
    "First name"
    first: String!
    "Middle initial"
    middle: String!
    "Last name"
    last: String!
    "Generational or academic suffix"
    suffix: String!
}

"Box g, Employee's previously reported name"
type Individualname3 {
    "First name"
    first: String!
    "Middle initial"
    middle: String!
    "Last name"
    last: String!
    "Generational or academic suffix"
    suffix: String!
}

"Individual issuer or recipient name"
type Individualname4 {
    "First name"
    first: String!
    "Middle initial"
    middle: String!
    "Last name"
    last: String!
    "Generational or academic suffix"
    suffix: String!
}

"Industry code and type"
type IndustryCode {
    type: String!
    code: String!
}

type Investments {
    "An array of accounts with entity types dependent on the account type (deposit, investment, loan, line of credit, annuity or insurance)"
    accounts: [String!]
}

type Items {
    "Total amount of money spent acquiring this lot including any fees or commission expenses incurred."
    costBasis: Float!
    "Lot market value"
    currentValue: Float!
    "Lot acquired date."
    originalPurchaseDate: String!
    "LONG, SHORT."
    positionType: PositionType2!
    "Original purchase price."
    purchasedPrice: Float!
    "Lot quantity."
    quantity: Float!
}

type Links {
    next: Next!
    prev: Prev!
}

"Amount of local income tax withheld, if any"
type LocalTaxWithholding1 {
    "Amount of local income tax withheld"
    taxWithheld: Float!
    "Locality name"
    localityName: String!
    "Income amount for local tax purposes"
    income: Float!
}

"The end-user's name"
type Name {
    "First or given name. This data element may contain first & last name if not separated."
    first: String!
    middle: String!
    last: String!
    "Name prefix, e.g. Mr."
    prefix: String!
    "Generational or academic suffix"
    suffix: String!
    "Company name"
    company: String!
    "An array of the end-user's physical mail addresses"
    addresses: [Address2!]
    telephones: [Telephone!]
    "An array of the end-user's electronic mail addresses"
    email: [String!]
    "List of accounts related to this end-user"
    accounts: [Account7!]
}

"Insured name and address"
type NameandAddress1 {
    "Address line 1"
    line1: String!
    "Address line 2"
    line2: String!
    "Address line 3"
    line3: String!
    "City"
    city: String!
    "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'"
    region: String!
    "Postal code"
    postalCode: String!
    "Country code"
    country: ISO3166CountryCode2!
    "Name line 1"
    name1: String!
    "Name line 2"
    name2: String!
}

"Acquirer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (If different from ACQUIRER)"
type NameAddressandPhone1 {
    "Address line 1"
    line1: String!
    "Address line 2"
    line2: String!
    "Address line 3"
    line3: String!
    "City"
    city: String!
    "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'"
    region: String!
    "Postal code"
    postalCode: String!
    "Country code"
    country: ISO3166CountryCode2!
    "Name line 1"
    name1: String!
    "Name line 2"
    name2: String!
    "Phone number"
    phone: TelephoneNumberPlusExtension1!
}

"Issuer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (if different from ISSUER)"
type NameAddressandPhone2 {
    "Address line 1"
    line1: String!
    "Address line 2"
    line2: String!
    "Address line 3"
    line3: String!
    "City"
    city: String!
    "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'"
    region: String!
    "Postal code"
    postalCode: String!
    "Country code"
    country: ISO3166CountryCode2!
    "Name line 1"
    name1: String!
    "Name line 2"
    name2: String!
    "Phone number"
    phone: TelephoneNumberPlusExtension1!
}

type Next {
    href: String!
}

type Prev {
    href: String!
}

"Box 17, State and Local tax withholding"
type StateandLocalTaxWithholding1 {
    "State two-digit code"
    stateCode: StateCode2!
    "Amount of state income tax withheld"
    state: StateTaxWithholding2!
    "Amount of local income tax withheld, if any"
    local: LocalTaxWithholding1!
}

"State and Local tax withholding, from IRS's IRIS schema"
type StateandLocalTaxWithholding2 {
    "State two-digit code"
    stateCode: StateCode2!
    "Amount of state income tax withheld"
    state: StateTaxWithholding2!
    "Amount of local income tax withheld, if any"
    local: LocalTaxWithholding1!
}

"Amount of state income tax withheld"
type StateTaxWithholding2 {
    "Amount of state income tax withheld"
    taxWithheld: Float!
    "Filer's state tax id"
    taxId: String!
    "Income amount for state tax purposes"
    income: Float!
}

"Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
type TaxParty1 {
    "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
    tin: String!
    "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
    partyType: TaxPartyType2!
    "Individual issuer or recipient name"
    individualName: Individualname4!
    "Business issuer or recipient name"
    businessName: Businessname1!
    "Issuer or recipient address"
    address: Address1!
    "Issuer or recipient telephone number"
    phone: TelephoneNumberPlusExtension4!
    "Issuer or recipient email address. (Additional information, not part of IRS forms)"
    email: String!
}

"Box C, Fiduciary's name and address"
type TaxParty2 {
    "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
    tin: String!
    "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
    partyType: TaxPartyType2!
    "Individual issuer or recipient name"
    individualName: Individualname4!
    "Business issuer or recipient name"
    businessName: Businessname1!
    "Issuer or recipient address"
    address: Address1!
    "Issuer or recipient telephone number"
    phone: TelephoneNumberPlusExtension4!
    "Issuer or recipient email address. (Additional information, not part of IRS forms)"
    email: String!
}

"Boxes 10-15, Employer EIN, name and address"
type TaxParty3 {
    "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
    tin: String!
    "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
    partyType: TaxPartyType2!
    "Individual issuer or recipient name"
    individualName: Individualname4!
    "Business issuer or recipient name"
    businessName: Businessname1!
    "Issuer or recipient address"
    address: Address1!
    "Issuer or recipient telephone number"
    phone: TelephoneNumberPlusExtension4!
    "Issuer or recipient email address. (Additional information, not part of IRS forms)"
    email: String!
}

"Box 6, If other than TRANSFEROR, name, address and tin of corporation whose stock is being transferred"
type TaxParty4 {
    "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
    tin: String!
    "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
    partyType: TaxPartyType2!
    "Individual issuer or recipient name"
    individualName: Individualname4!
    "Business issuer or recipient name"
    businessName: Businessname1!
    "Issuer or recipient address"
    address: Address1!
    "Issuer or recipient telephone number"
    phone: TelephoneNumberPlusExtension4!
    "Issuer or recipient email address. (Additional information, not part of IRS forms)"
    email: String!
}

"Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
type TaxParty6 {
    "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
    tin: String!
    "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
    partyType: TaxPartyType2!
    "Individual issuer or recipient name"
    individualName: Individualname4!
    "Business issuer or recipient name"
    businessName: Businessname1!
    "Issuer or recipient address"
    address: Address1!
    "Issuer or recipient telephone number"
    phone: TelephoneNumberPlusExtension4!
    "Issuer or recipient email address. (Additional information, not part of IRS forms)"
    email: String!
}

"Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
type TaxParty7 {
    "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
    tin: String!
    "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
    partyType: TaxPartyType2!
    "Individual issuer or recipient name"
    individualName: Individualname4!
    "Business issuer or recipient name"
    businessName: Businessname1!
    "Issuer or recipient address"
    address: Address1!
    "Issuer or recipient telephone number"
    phone: TelephoneNumberPlusExtension4!
    "Issuer or recipient email address. (Additional information, not part of IRS forms)"
    email: String!
}

"Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
type TaxParty8 {
    "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
    tin: String!
    "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
    partyType: TaxPartyType2!
    "Individual issuer or recipient name"
    individualName: Individualname4!
    "Business issuer or recipient name"
    businessName: Businessname1!
    "Issuer or recipient address"
    address: Address1!
    "Issuer or recipient telephone number"
    phone: TelephoneNumberPlusExtension4!
    "Issuer or recipient email address. (Additional information, not part of IRS forms)"
    email: String!
}

"Tax refund direct deposit information"
type TaxRefundDirectDeposit2 {
    "Name of institution"
    institutionName: String!
    "Routing transit number"
    rtn: String!
    "Account number"
    accountNumber: String!
    "Account nickname"
    accountNickName: String!
}

"The TaxStatement json for a single tax document containing one or more tax reporting forms for the customer"
type TaxStatement1 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id"
    taxStatementId: String!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
    issuer: TaxParty6!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
    recipient: TaxParty7!
    "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)"
    taxDataType: TypeDataType1!
    "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`"
    forms: [TaxData!]
    "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`"
    pdf: String!
    "Additional tax statement attributes that the provider wishes to include"
    attributes: [FiAttributeEntity!]
}

"The TaxStatement json for a single tax document containing one or more tax reporting forms for the customer, one or more of which contain an Error"
type TaxStatement2 {
    "Year for which taxes are being paid"
    taxYear: Int!
    "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id"
    taxStatementId: String!
    "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
    issuer: TaxParty6!
    "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
    recipient: TaxParty7!
    "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)"
    taxDataType: TypeDataType1!
    "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`"
    forms: [TaxData!]
    "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`"
    pdf: String!
    "Additional tax statement attributes that the provider wishes to include"
    attributes: [FiAttributeEntity!]
}

type TaxLot {
    "Total amount of money spent acquiring this lot including any fees or commission expenses incurred."
    costBasis: Float!
    "Lot market value"
    currentValue: Float!
    "Lot acquired date."
    originalPurchaseDate: String!
    "LONG, SHORT."
    postionType: PostionType!
    "Original purchase price."
    purchasedPrice: Float!
    "Lot quantity."
    quantity: Float!
}

type Telephone {
    number: String!
    type: Phonetype!
    "Country calling codes defined by ITU-T recommendations E.123 and E.164"
    country: String!
}

"Phone number"
type TelephoneNumberPlusExtension1 {
    "Type of phone number: HOME, BUSINESS, CELL, FAX"
    type: TelephoneNumberType2!
    "Country calling codes defined by ITU-T recommendations E.123 and E.164"
    country: String!
    "Telephone subscriber number defined by ITU-T recommendation E.164"
    number: String!
    "An arbitrary length telephone number extension"
    extension: String!
}

"PSE's phone number"
type TelephoneNumberPlusExtension2 {
    "Type of phone number: HOME, BUSINESS, CELL, FAX"
    type: TelephoneNumberType2!
    "Country calling codes defined by ITU-T recommendations E.123 and E.164"
    country: String!
    "Telephone subscriber number defined by ITU-T recommendation E.164"
    number: String!
    "An arbitrary length telephone number extension"
    extension: String!
}

"Issuer or recipient telephone number"
type TelephoneNumberPlusExtension4 {
    "Type of phone number: HOME, BUSINESS, CELL, FAX"
    type: TelephoneNumberType2!
    "Country calling codes defined by ITU-T recommendations E.123 and E.164"
    country: String!
    "Telephone subscriber number defined by ITU-T recommendation E.164"
    number: String!
    "An arbitrary length telephone number extension"
    extension: String!
}

type Transaction1 {
    "Deposit transaction"
    depositTransaction: DepositTransaction!
}

type Transaction11 {
    "Loan Transaction"
    loanTransaction: LoanTransaction!
}

type Transaction12 {
    "A line of credit transaction of type"
    locTransaction: LocTransaction!
}

type Transaction13 {
    "Investment Transactions"
    investmentTransaction: InvestmentTransaction!
}

type Transaction14 {
    "Insurance transactions"
    insuranceTransaction: InsuranceTransaction!
}

type Vesting {
    "Vested quantity (Vested shares total qty of vesting tranche)"
    vestedQuantity: Float!
    "Vested balance at grant (aggregate of all vestings)"
    vestedValue: Float!
    vestingDate: String!
    vestExpireDate: String!
    vestedStatus: String!
}

input GetAccountsInfoInput {
    "Akoya major version number. Do not use minor version numbers. For instance, use v2 and not v2.2"
    version: String!
    "Id of provider"
    providerId: String!
    "Optional but recommended header to include with each data request. \nAllowed values are `user` or `batch`. \n`user` indicates a request is prompted by an end-user action.\n`batch` indicates the request is part of a batch process."
    xAkoyaInteractionType: InteractionType!
    "BETA. Default is raw. Use standard for FDX-aligned, standardized data values."
    mode: Mode!
}

input GetBalancesInput {
    "Akoya major version number. Do not use minor version numbers. For instance, use v2 and not v2.2"
    version: String!
    "Id of provider"
    providerId: String!
    "Optional but recommended header to include with each data request. \nAllowed values are `user` or `batch`. \n`user` indicates a request is prompted by an end-user action.\n`batch` indicates the request is part of a batch process."
    xAkoyaInteractionType: InteractionType!
    "BETA. Default is raw. Use standard for FDX-aligned, standardized data values."
    mode: Mode!
}

input GetCustomerInfoInput {
    "Akoya major version number. Do not use minor version numbers. For instance, use v2 and not v2.2"
    version: String!
    "Id of provider"
    providerId: String!
    "Optional but recommended header to include with each data request. \nAllowed values are `user` or `batch`. \n`user` indicates a request is prompted by an end-user action.\n`batch` indicates the request is part of a batch process."
    xAkoyaInteractionType: InteractionType!
}

input GetAccountHolderInput {
    "Account Identifier"
    accountId: String!
    "Akoya major version number. Do not use minor version numbers. For instance, use v2 and not v2.2"
    version: String!
    "Id of provider"
    providerId: String!
    "Optional but recommended header to include with each data request. \nAllowed values are `user` or `batch`. \n`user` indicates a request is prompted by an end-user action.\n`batch` indicates the request is part of a batch process."
    xAkoyaInteractionType: InteractionType!
}

input GetAccountsInput {
    "Akoya major version number. Do not use minor version numbers. For instance, use v2 and not v2.2"
    version: String!
    "Id of provider"
    providerId: String!
    "Optional but recommended header to include with each data request. \nAllowed values are `user` or `batch`. \n`user` indicates a request is prompted by an end-user action.\n`batch` indicates the request is part of a batch process."
    xAkoyaInteractionType: InteractionType!
    "BETA. Default is raw. Use standard for FDX-aligned, standardized data values."
    mode: Mode!
}

input GetTaxlotsInput {
    "Akoya major version number. Do not use minor version numbers. For instance, use v2 and not v2.2"
    version: String!
    "Id of provider"
    providerId: String!
    "Account Identifier"
    accountId: String!
    "Consumer's holdingId under investments"
    holdingId: String!
    "Optional but recommended header to include with each data request. \nAllowed values are `user` or `batch`. \n`user` indicates a request is prompted by an end-user action.\n`batch` indicates the request is part of a batch process."
    xAkoyaInteractionType: InteractionType!
    "The number of items to skip before the first in the response. The default is 0"
    offset: String!
    "The maximum number of items to be returned in the response. The default is 50"
    limit: String!
}

input GetPaymentNetworksInput {
    "Akoya major version number. Do not use minor version numbers. For instance, use v2 and not v2.2"
    version: String!
    "Id of provider"
    providerId: String!
    "Account Identifier"
    accountId: String!
    "Optional but recommended header to include with each data request. \nAllowed values are `user` or `batch`. \n`user` indicates a request is prompted by an end-user action.\n`batch` indicates the request is part of a batch process."
    xAkoyaInteractionType: InteractionType!
}

input GetStatementListInput {
    "Account Identifier"
    accountId: String!
    "Akoya major version number. Do not use minor version numbers. For instance, use v2 and not v2.2"
    version: String!
    "Id of provider"
    providerId: String!
    "Start date for use in retrieval of statements (ISO 8601)"
    startTime: String!
    "End date for use in retrieval of statements (ISO 8601)"
    endTime: String!
    "The number of items to skip before the first in the response. The default is 0."
    offset: String!
    "The maximum number of items to be returned in the response. The default is 50."
    limit: Int!
    "Optional but recommended header to include with each data request. \nAllowed values are `user` or `batch`. \n`user` indicates a request is prompted by an end-user action.\n`batch` indicates the request is part of a batch process."
    xAkoyaInteractionType: InteractionType!
}

input GetStatementsInput {
    "Account Identifier"
    accountId: String!
    "Akoya major version number. Do not use minor version numbers. For instance, use v2 and not v2.2"
    version: String!
    "Id of provider"
    providerId: String!
    "Statement Identifier"
    statementId: String!
    "Optional but recommended header to include with each data request. \nAllowed values are `user` or `batch`. \n`user` indicates a request is prompted by an end-user action.\n`batch` indicates the request is part of a batch process."
    xAkoyaInteractionType: InteractionType!
}

input GetTaxformssearchInput {
    "Endpoint version."
    version: Version!
    "Provider to query for Tax data."
    providerId: String!
    "Unique identifier to associate with this request. No specific format required."
    xAkoyaInteractionId: String!
    "Identifies whether the customer is present (USER) or it is a BATCH operation. Case-insensitive."
    xAkoyaInteractionType: InteractionType!
    "Use the [Accept HTTP request header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept) to indicate one or more content types to request for the search result response. Use `application/json` to request data or `application/pdf to request images in comma-separated array format.         Use in combination with TaxDataTypeQuery parameter to request `application/json` responses in ''JSON'' or ''BASE64_PDF'' format for tax form data'"
    accept: [AcceptMediaType!]
    "Tax year in which to search for tax forms."
    taxYear: String!
    "One or more tax form type enums for the specific documents being requested. Comma separated"
    taxForms: [TypeFormType!]
    "Unique account identifier (not the account number)"
    accountId: String!
}

input GetTaxFormInput {
    "Endpoint version."
    version: Version!
    "Provider to query for Tax data."
    providerId: String!
    "Unique identifier of the tax form to request."
    taxFormId: String!
    "Unique identifier to associate with this request. No specific format required."
    xAkoyaInteractionId: String!
    "Identifies whether the customer is present (USER) or it is a BATCH operation. Case-insensitive."
    xAkoyaInteractionType: InteractionType!
    "Use taxDataType to request `application/json` tax form data response in 'JSON' or 'BASE64_PDF' format. Omit if either format is acceptable. Used in combination with AcceptHeader requesting `application/json` response"
    taxDataType: TypeDataType!
    "Use the [Accept HTTP request header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept) to indicate one or more content types to request for the search result response. Use `application/json` to request data or `application/pdf`to request images. In comma-separated array format.         Use in combination with TaxDataTypeQuery parameter to request `application/json` responses in ''JSON'' or ''BASE64_PDF'' format for tax form data'"
    accept: [AcceptMediaType!]
}

input GetTransactionsInput {
    "Akoya major version number. Do not use minor version numbers. For instance, use v2 and not v2.2"
    version: String!
    "Id of provider"
    providerId: String!
    "Account Identifier"
    accountId: String!
    "ISO 8601 date format in UTC time zone. If blank, the default value (current date - 15 calendar days) is used. If a value is specified, endTime is required."
    startTime: String!
    "ISO 8601 date format in UTC time zone. If blank, the default value (current date) is used. If a value is specified, startTime is required."
    endTime: String!
    "The number of items to skip before the first in the response. The default is 0."
    offset: String!
    "The maximum number of items to be returned in the response. The default is 50."
    limit: Int!
    "Optional but recommended header to include with each data request. \nAllowed values are `user` or `batch`. \n`user` indicates a request is prompted by an end-user action.\n`batch` indicates the request is part of a batch process."
    xAkoyaInteractionType: InteractionType!
    "BETA. Default is raw. Use standard for FDX-aligned, standardized data values."
    mode: Mode!
}

type Query {
    "Get basic account information including accountId, masked account number, type, description, etc.\n\nTo view the response schema, select the `200` response below. Then pick an option for annuity, deposit, insurance, investment, loan, and line of credit account types. \n\nFor an example payload response, see the `200` example response below the `Try it` feature. The example is from a deposit account but all account types are supported by this endpoint.\n\n> 🛑\n> \n> The *id_token* should be used as the bearer token with this call.\n\nUse the `mode` query param to receive FDX-aligned, standardized data values (Beta). For example:\n\n`https://sandbox-products.ddp.akoya.com/accounts-info/v2/mikomo?mode=standard`\n\n`mode` is available in both sandbox and production.\n\n`mode` is supported by a subset of providers. Log into the [Data Recipient Hub](https://recipient.ddp.akoya.com/login) and click [here](https://recipient.ddp.akoya.com/support/article/kA0Uw00000015GzKAI) to view a list of all providers supporting the `mode` parameter."
    getAccountsInfo(input: GetAccountsInfoInput!): AkoyaAccountInfoproduct!
    "Account information that includes balances and rates of bank accounts, credit cards, loans, investments, and more.\n\nTo view the response schema, select the `200` response below. Then pick an option for annuity, deposit, insurance, investment, loan, and line of credit account types. \n\nFor an example payload response, see the `200` example response below the `Try it` feature. The example is from a deposit account but all account types are supported by this endpoint.\n\n> 🛑\n> \n> The *id_token* should be used as the bearer token with this call.\n\nUse the `mode` query param to receive FDX-aligned, standardized data values (Beta). For example:\n\n`https://sandbox-products.ddp.akoya.com/balances/v2/mikomo?mode=standard`\n\n`mode` is available in both sandbox and production.\n\n`mode` is supported by a subset of providers. Log into the [Data Recipient Hub](https://recipient.ddp.akoya.com/login) and click [here](https://recipient.ddp.akoya.com/support/article/kA0Uw00000015GzKAI) to view a list of all providers supporting the `mode` parameter."
    getBalances(input: GetBalancesInput!): Balances!
    "This product supports use cases such as payment enablement, account opening, and identity verification. Responses return information about the authorized end-user, the customer associated with the `id_token` used in the call. This information may include, but is not limited to, the customer identifier, name, email, address, and phone number.\n\n<br>\n\nTo see the response schema, select the `200` response below. For an example payload response, see the `200` example response below the *Try it* feature. \n\nThis product requires consumer consent to share all account holder information.\n\n> 🛑 The `id_token` should be used as the bearer token with this call.\n>"
    getCustomerInfo(input: GetCustomerInfoInput!): Customer!
    "This product supports use cases such as payment enablement, account opening, identity verification,or lending & credit enhancement. Responses return information about the authorized consumer, the customer associated with the `id_token` used in the call, and the relationship specific to the provided `accountId`.\n\n> 📌 Please note!\n>\n> This endpoint provides additional information which may not be required for your use case, making it inefficient compared to the [/customer info](https://docs.akoya.com/reference/customer-info) endpoint. Please refer to to the [Customers guide](https://docs.akoya.com/reference/customers) for more information about this endpoint.\n\nGet account holder information. Based on FDX 5.2.1.\n\nThis product requires consumer consent to share all account holder information.\n\n> 🛑 The `id_token` should be used as the bearer token with this call.\n>"
    getAccountHolder(input: GetAccountHolderInput!): AccountContactentity!
    "Get detailed account information that includes Akoya products Account Info and Balances for all account types (annunity, deposit, insurance, investments, line of credit, and loan) and adds the Investments product to investment accounts including contributions, holdings, vesting information, and more.\n\nTo view the response schema, select the `200` response below. Then pick an option for annuity, deposit, insurance, investment, loan, and line of credit account types. \n\nFor an example payload response, see the `200` example response below the `Try it` feature. The example is from an investment account but all account types are supported and returned by this endpoint.\n\n> 🛑\n> \n> The *id_token* should be used as the bearer token with this call.\n\nUse the `mode` query param to receive FDX-aligned, standardized data values (Beta). For example:\n\n`https://sandbox-products.ddp.akoya.com/accounts/v2/mikomo?mode=standard`\n\n`mode` is available in both sandbox and production.\n\n`mode` is supported by a subset of providers. Log into the [Data Recipient Hub](https://recipient.ddp.akoya.com/login) and click [here](https://recipient.ddp.akoya.com/support/article/kA0Uw00000015GzKAI) to view a list of all providers supporting the `mode` parameter."
    getAccounts(input: GetAccountsInput!): Investments!
    "The taxlots API allows you to retrieve tax lots of consumer-permissioned accounts.\n\n> 🛑\n> \n> The *id_token* should be used as the bearer token with this call."
    getTaxlots(input: GetTaxlotsInput!): TaxlotsResponse!
    "This product supports use cases such as payment enablement or account opening. The response includes identifiers necessary to make ACH and RTP payments. Identifiers include account number, routing number, identifier type (actual or tokenized account number), and payment network type such as ACH or RTP.\n\n<br>\n\nTo see the response schema, select the `200` response below. For an example payload response, see the `200` example response below the *Try it* feature. \n\n> 🛑\n> \n> The *id_token* should be used as the bearer token with this call."
    getPaymentNetworks(input: GetPaymentNetworksInput!): Arrayofaccountpaymentnetworks!
    "Retrieve a list of available statements for the end-user's consented accounts. You may request a date range of up to two years of historical statements (maximum date ranges vary by provider).\n\nThe paginated response includes an array of statement information with the end-user's account id and statement details such as statement id, date, description, and status. The results also include links to GET the statement image."
    getStatementList(input: GetStatementListInput!): PaginatedArray!
    "Retrieve a specific account statement file. Use [HTTP Accept request-header](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html) to specify desired content types. \n\nFor the initial launch, only PDF statements are supported. PDFs are returned in the response.\n\n### cURL request\n\nWe recommend using the auto-generated cURL request with the {idToken}, accountId, providerId, statementId, and version with an added cURL parameter to return the output to a file. For example:\n\n```curl\ncurl --request GET --url https://sandbox-products.ddp.akoya.com/statements/v2/mikomo/513815781465/P9CvLPKDaFRMbNDkhu1 --header \"accept: application/pdf\" --header \"authorization: Bearer {idtoken}\" --output example.pdf\n```"
    getStatements(input: GetStatementsInput!): String!
    "Get the full lists of tax document data and tax form images available for a specific year for the current authorized customer."
    getTaxformssearch(input: GetTaxformssearchInput!): TaxStatementList!
    "Get the Tax Statement as JSON or PDF for a single tax document for the customer. Use [HTTP Accept request-header](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html) to specify desired content types. See `AcceptHeader` definition for typical values.\r\n\r\nNot all providers support PDF payloads. See [this article](https://recipient.ddp.akoya.com/support/article/kA0Uw00000026VxKAI) in the Data Recipent Hub for a list of providers that support document PDFs."
    getTaxForm(input: GetTaxFormInput!): TaxStatement1!
    "The transactions API allows you to retrieve transaction history of consumer-permissioned accounts.\n\n> 🛑\n> \n> The *id_token* should be used as the bearer token with this call.\n\nFor more information on how to paginate transaction results, please see: [Pagination](https://docs.akoya.com/v2/docs/pagination)\n\nUse the `mode` query param to receive FDX-aligned, standardized data values (Beta). For example:\n\n`https://sandbox-products.ddp.akoya.com/transactions/v2/mikomo?mode=standard`\n\n`mode` is available in both sandbox and production.\n\n`mode` is supported by a subset of providers. Log into the [Data Recipient Hub](https://recipient.ddp.akoya.com/login) and click [here](https://recipient.ddp.akoya.com/support/article/kA0Uw00000015GzKAI) to view a list of all providers supporting the `mode` parameter."
    getTransactions(input: GetTransactionsInput!): TransactionsEntity!
}

type Mutation {
    _: Boolean
}

schema {
    mutation: Mutation
    query: Query
}
